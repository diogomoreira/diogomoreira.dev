/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type EnJson = Node & {
  readonly academic: Maybe<EnJsonAcademic>;
  readonly blog: Maybe<EnJsonBlog>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly index: Maybe<EnJsonIndex>;
  readonly internal: Internal;
  readonly labs: Maybe<EnJsonLabs>;
  readonly links: Maybe<EnJsonLinks>;
  readonly menu: Maybe<EnJsonMenu>;
  readonly parent: Maybe<Node>;
};

type EnJsonAcademic = {
  readonly authors: Maybe<Scalars['String']>;
  readonly copied: Maybe<Scalars['String']>;
  readonly copycitation: Maybe<Scalars['String']>;
  readonly researching: Maybe<EnJsonAcademicResearching>;
  readonly teaching: Maybe<EnJsonAcademicTeaching>;
};

type EnJsonAcademicFilterInput = {
  readonly authors: InputMaybe<StringQueryOperatorInput>;
  readonly copied: InputMaybe<StringQueryOperatorInput>;
  readonly copycitation: InputMaybe<StringQueryOperatorInput>;
  readonly researching: InputMaybe<EnJsonAcademicResearchingFilterInput>;
  readonly teaching: InputMaybe<EnJsonAcademicTeachingFilterInput>;
};

type EnJsonAcademicResearching = {
  readonly groups: Maybe<Scalars['String']>;
  readonly intro: Maybe<Scalars['String']>;
  readonly list: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type EnJsonAcademicResearchingFilterInput = {
  readonly groups: InputMaybe<StringQueryOperatorInput>;
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly list: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonAcademicTeaching = {
  readonly intro: Maybe<Scalars['String']>;
};

type EnJsonAcademicTeachingFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonBlog = {
  readonly control: Maybe<EnJsonBlogControl>;
};

type EnJsonBlogControl = {
  readonly back: Maybe<Scalars['String']>;
};

type EnJsonBlogControlFilterInput = {
  readonly back: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonBlogFilterInput = {
  readonly control: InputMaybe<EnJsonBlogControlFilterInput>;
};

type EnJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<EnJsonEdge>;
  readonly group: ReadonlyArray<EnJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<EnJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type EnJsonConnection_distinctArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonConnection_groupArgs = {
  field: EnJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type EnJsonConnection_maxArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonConnection_minArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonConnection_sumArgs = {
  field: EnJsonFieldsEnum;
};

type EnJsonEdge = {
  readonly next: Maybe<EnJson>;
  readonly node: EnJson;
  readonly previous: Maybe<EnJson>;
};

type EnJsonFieldsEnum =
  | 'academic.authors'
  | 'academic.copied'
  | 'academic.copycitation'
  | 'academic.researching.groups'
  | 'academic.researching.intro'
  | 'academic.researching.list'
  | 'academic.researching.title'
  | 'academic.teaching.intro'
  | 'blog.control.back'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'index.ifpb'
  | 'index.latest'
  | 'index.present'
  | 'index.text.personal'
  | 'index.text.professional'
  | 'index.titles'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'labs.intro'
  | 'labs.stack'
  | 'links.intro'
  | 'menu.about'
  | 'menu.academic'
  | 'menu.blog'
  | 'menu.cv'
  | 'menu.labs'
  | 'menu.links'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type EnJsonFilterInput = {
  readonly academic: InputMaybe<EnJsonAcademicFilterInput>;
  readonly blog: InputMaybe<EnJsonBlogFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly index: InputMaybe<EnJsonIndexFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly labs: InputMaybe<EnJsonLabsFilterInput>;
  readonly links: InputMaybe<EnJsonLinksFilterInput>;
  readonly menu: InputMaybe<EnJsonMenuFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type EnJsonFilterListInput = {
  readonly elemMatch: InputMaybe<EnJsonFilterInput>;
};

type EnJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<EnJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<EnJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<EnJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type EnJsonGroupConnection_distinctArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonGroupConnection_groupArgs = {
  field: EnJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type EnJsonGroupConnection_maxArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonGroupConnection_minArgs = {
  field: EnJsonFieldsEnum;
};


type EnJsonGroupConnection_sumArgs = {
  field: EnJsonFieldsEnum;
};

type EnJsonIndex = {
  readonly ifpb: Maybe<Scalars['String']>;
  readonly latest: Maybe<Scalars['String']>;
  readonly present: Maybe<Scalars['String']>;
  readonly text: Maybe<EnJsonIndexText>;
  readonly titles: Maybe<Scalars['String']>;
};

type EnJsonIndexFilterInput = {
  readonly ifpb: InputMaybe<StringQueryOperatorInput>;
  readonly latest: InputMaybe<StringQueryOperatorInput>;
  readonly present: InputMaybe<StringQueryOperatorInput>;
  readonly text: InputMaybe<EnJsonIndexTextFilterInput>;
  readonly titles: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonIndexText = {
  readonly personal: Maybe<Scalars['String']>;
  readonly professional: Maybe<Scalars['String']>;
};

type EnJsonIndexTextFilterInput = {
  readonly personal: InputMaybe<StringQueryOperatorInput>;
  readonly professional: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonLabs = {
  readonly intro: Maybe<Scalars['String']>;
  readonly stack: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
};

type EnJsonLabsFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly stack: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonLinks = {
  readonly intro: Maybe<Scalars['String']>;
};

type EnJsonLinksFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonMenu = {
  readonly about: Maybe<Scalars['String']>;
  readonly academic: Maybe<Scalars['String']>;
  readonly blog: Maybe<Scalars['String']>;
  readonly cv: Maybe<Scalars['String']>;
  readonly labs: Maybe<Scalars['String']>;
  readonly links: Maybe<Scalars['String']>;
};

type EnJsonMenuFilterInput = {
  readonly about: InputMaybe<StringQueryOperatorInput>;
  readonly academic: InputMaybe<StringQueryOperatorInput>;
  readonly blog: InputMaybe<StringQueryOperatorInput>;
  readonly cv: InputMaybe<StringQueryOperatorInput>;
  readonly labs: InputMaybe<StringQueryOperatorInput>;
  readonly links: InputMaybe<StringQueryOperatorInput>;
};

type EnJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<EnJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type EnJson or null if there are no children of given type on this node */
  readonly childEnJson: Maybe<EnJson>;
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  /** Returns the first child node of type LinksJson or null if there are no children of given type on this node */
  readonly childLinksJson: Maybe<LinksJson>;
  /** Returns the first child node of type Mdx or null if there are no children of given type on this node */
  readonly childMdx: Maybe<Mdx>;
  /** Returns the first child node of type ProjectsJson or null if there are no children of given type on this node */
  readonly childProjectsJson: Maybe<ProjectsJson>;
  /** Returns the first child node of type PtJson or null if there are no children of given type on this node */
  readonly childPtJson: Maybe<PtJson>;
  /** Returns the first child node of type Reference or null if there are no children of given type on this node */
  readonly childReference: Maybe<Reference>;
  /** Returns the first child node of type SubjectsJson or null if there are no children of given type on this node */
  readonly childSubjectsJson: Maybe<SubjectsJson>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type EnJson */
  readonly childrenEnJson: Maybe<ReadonlyArray<Maybe<EnJson>>>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  /** Returns all children nodes filtered by type LinksJson */
  readonly childrenLinksJson: Maybe<ReadonlyArray<Maybe<LinksJson>>>;
  /** Returns all children nodes filtered by type Mdx */
  readonly childrenMdx: Maybe<ReadonlyArray<Maybe<Mdx>>>;
  /** Returns all children nodes filtered by type ProjectsJson */
  readonly childrenProjectsJson: Maybe<ReadonlyArray<Maybe<ProjectsJson>>>;
  /** Returns all children nodes filtered by type PtJson */
  readonly childrenPtJson: Maybe<ReadonlyArray<Maybe<PtJson>>>;
  /** Returns all children nodes filtered by type Reference */
  readonly childrenReference: Maybe<ReadonlyArray<Maybe<Reference>>>;
  /** Returns all children nodes filtered by type SubjectsJson */
  readonly childrenSubjectsJson: Maybe<ReadonlyArray<Maybe<SubjectsJson>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  /** Copy file to static directory and return public url to it */
  readonly publicURL: Maybe<Scalars['String']>;
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childEnJson.academic.authors'
  | 'childEnJson.academic.copied'
  | 'childEnJson.academic.copycitation'
  | 'childEnJson.academic.researching.groups'
  | 'childEnJson.academic.researching.intro'
  | 'childEnJson.academic.researching.list'
  | 'childEnJson.academic.researching.title'
  | 'childEnJson.academic.teaching.intro'
  | 'childEnJson.blog.control.back'
  | 'childEnJson.children'
  | 'childEnJson.children.children'
  | 'childEnJson.children.children.children'
  | 'childEnJson.children.children.id'
  | 'childEnJson.children.id'
  | 'childEnJson.children.internal.content'
  | 'childEnJson.children.internal.contentDigest'
  | 'childEnJson.children.internal.description'
  | 'childEnJson.children.internal.fieldOwners'
  | 'childEnJson.children.internal.ignoreType'
  | 'childEnJson.children.internal.mediaType'
  | 'childEnJson.children.internal.owner'
  | 'childEnJson.children.internal.type'
  | 'childEnJson.children.parent.children'
  | 'childEnJson.children.parent.id'
  | 'childEnJson.id'
  | 'childEnJson.index.ifpb'
  | 'childEnJson.index.latest'
  | 'childEnJson.index.present'
  | 'childEnJson.index.text.personal'
  | 'childEnJson.index.text.professional'
  | 'childEnJson.index.titles'
  | 'childEnJson.internal.content'
  | 'childEnJson.internal.contentDigest'
  | 'childEnJson.internal.description'
  | 'childEnJson.internal.fieldOwners'
  | 'childEnJson.internal.ignoreType'
  | 'childEnJson.internal.mediaType'
  | 'childEnJson.internal.owner'
  | 'childEnJson.internal.type'
  | 'childEnJson.labs.intro'
  | 'childEnJson.labs.stack'
  | 'childEnJson.links.intro'
  | 'childEnJson.menu.about'
  | 'childEnJson.menu.academic'
  | 'childEnJson.menu.blog'
  | 'childEnJson.menu.cv'
  | 'childEnJson.menu.labs'
  | 'childEnJson.menu.links'
  | 'childEnJson.parent.children'
  | 'childEnJson.parent.children.children'
  | 'childEnJson.parent.children.id'
  | 'childEnJson.parent.id'
  | 'childEnJson.parent.internal.content'
  | 'childEnJson.parent.internal.contentDigest'
  | 'childEnJson.parent.internal.description'
  | 'childEnJson.parent.internal.fieldOwners'
  | 'childEnJson.parent.internal.ignoreType'
  | 'childEnJson.parent.internal.mediaType'
  | 'childEnJson.parent.internal.owner'
  | 'childEnJson.parent.internal.type'
  | 'childEnJson.parent.parent.children'
  | 'childEnJson.parent.parent.id'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'childLinksJson.children'
  | 'childLinksJson.children.children'
  | 'childLinksJson.children.children.children'
  | 'childLinksJson.children.children.id'
  | 'childLinksJson.children.id'
  | 'childLinksJson.children.internal.content'
  | 'childLinksJson.children.internal.contentDigest'
  | 'childLinksJson.children.internal.description'
  | 'childLinksJson.children.internal.fieldOwners'
  | 'childLinksJson.children.internal.ignoreType'
  | 'childLinksJson.children.internal.mediaType'
  | 'childLinksJson.children.internal.owner'
  | 'childLinksJson.children.internal.type'
  | 'childLinksJson.children.parent.children'
  | 'childLinksJson.children.parent.id'
  | 'childLinksJson.description'
  | 'childLinksJson.id'
  | 'childLinksJson.image.absolutePath'
  | 'childLinksJson.image.accessTime'
  | 'childLinksJson.image.atime'
  | 'childLinksJson.image.atimeMs'
  | 'childLinksJson.image.base'
  | 'childLinksJson.image.birthTime'
  | 'childLinksJson.image.birthtime'
  | 'childLinksJson.image.birthtimeMs'
  | 'childLinksJson.image.blksize'
  | 'childLinksJson.image.blocks'
  | 'childLinksJson.image.changeTime'
  | 'childLinksJson.image.childEnJson.children'
  | 'childLinksJson.image.childEnJson.id'
  | 'childLinksJson.image.childImageSharp.children'
  | 'childLinksJson.image.childImageSharp.gatsbyImageData'
  | 'childLinksJson.image.childImageSharp.id'
  | 'childLinksJson.image.childLinksJson.children'
  | 'childLinksJson.image.childLinksJson.description'
  | 'childLinksJson.image.childLinksJson.id'
  | 'childLinksJson.image.childLinksJson.lang'
  | 'childLinksJson.image.childLinksJson.link'
  | 'childLinksJson.image.childLinksJson.publishDate'
  | 'childLinksJson.image.childLinksJson.tags'
  | 'childLinksJson.image.childLinksJson.title'
  | 'childLinksJson.image.childLinksJson.type'
  | 'childLinksJson.image.childMdx.body'
  | 'childLinksJson.image.childMdx.children'
  | 'childLinksJson.image.childMdx.excerpt'
  | 'childLinksJson.image.childMdx.fileAbsolutePath'
  | 'childLinksJson.image.childMdx.gatsbyPath'
  | 'childLinksJson.image.childMdx.headings'
  | 'childLinksJson.image.childMdx.html'
  | 'childLinksJson.image.childMdx.id'
  | 'childLinksJson.image.childMdx.mdxAST'
  | 'childLinksJson.image.childMdx.rawBody'
  | 'childLinksJson.image.childMdx.slug'
  | 'childLinksJson.image.childMdx.tableOfContents'
  | 'childLinksJson.image.childMdx.timeToRead'
  | 'childLinksJson.image.childProjectsJson.children'
  | 'childLinksJson.image.childProjectsJson.date'
  | 'childLinksJson.image.childProjectsJson.description'
  | 'childLinksJson.image.childProjectsJson.id'
  | 'childLinksJson.image.childProjectsJson.lang'
  | 'childLinksJson.image.childProjectsJson.stack'
  | 'childLinksJson.image.childProjectsJson.title'
  | 'childLinksJson.image.childProjectsJson.url'
  | 'childLinksJson.image.childPtJson.children'
  | 'childLinksJson.image.childPtJson.id'
  | 'childLinksJson.image.childReference.abstract'
  | 'childLinksJson.image.childReference.address'
  | 'childLinksJson.image.childReference.articleno'
  | 'childLinksJson.image.childReference.author'
  | 'childLinksJson.image.childReference.authors'
  | 'childLinksJson.image.childReference.booktitle'
  | 'childLinksJson.image.childReference.children'
  | 'childLinksJson.image.childReference.date'
  | 'childLinksJson.image.childReference.doi'
  | 'childLinksJson.image.childReference.entry_type'
  | 'childLinksJson.image.childReference.id'
  | 'childLinksJson.image.childReference.isbn'
  | 'childLinksJson.image.childReference.issn'
  | 'childLinksJson.image.childReference.journal'
  | 'childLinksJson.image.childReference.key'
  | 'childLinksJson.image.childReference.keywords'
  | 'childLinksJson.image.childReference.location'
  | 'childLinksJson.image.childReference.month'
  | 'childLinksJson.image.childReference.number'
  | 'childLinksJson.image.childReference.numpages'
  | 'childLinksJson.image.childReference.pages'
  | 'childLinksJson.image.childReference.place'
  | 'childLinksJson.image.childReference.publisher'
  | 'childLinksJson.image.childReference.raw'
  | 'childLinksJson.image.childReference.series'
  | 'childLinksJson.image.childReference.title'
  | 'childLinksJson.image.childReference.url'
  | 'childLinksJson.image.childReference.volume'
  | 'childLinksJson.image.childReference.year'
  | 'childLinksJson.image.childSubjectsJson.children'
  | 'childLinksJson.image.childSubjectsJson.id'
  | 'childLinksJson.image.childSubjectsJson.institution'
  | 'childLinksJson.image.childSubjectsJson.semester'
  | 'childLinksJson.image.childSubjectsJson.subjects'
  | 'childLinksJson.image.children'
  | 'childLinksJson.image.childrenEnJson'
  | 'childLinksJson.image.childrenEnJson.children'
  | 'childLinksJson.image.childrenEnJson.id'
  | 'childLinksJson.image.childrenImageSharp'
  | 'childLinksJson.image.childrenImageSharp.children'
  | 'childLinksJson.image.childrenImageSharp.gatsbyImageData'
  | 'childLinksJson.image.childrenImageSharp.id'
  | 'childLinksJson.image.childrenLinksJson'
  | 'childLinksJson.image.childrenLinksJson.children'
  | 'childLinksJson.image.childrenLinksJson.description'
  | 'childLinksJson.image.childrenLinksJson.id'
  | 'childLinksJson.image.childrenLinksJson.lang'
  | 'childLinksJson.image.childrenLinksJson.link'
  | 'childLinksJson.image.childrenLinksJson.publishDate'
  | 'childLinksJson.image.childrenLinksJson.tags'
  | 'childLinksJson.image.childrenLinksJson.title'
  | 'childLinksJson.image.childrenLinksJson.type'
  | 'childLinksJson.image.childrenMdx'
  | 'childLinksJson.image.childrenMdx.body'
  | 'childLinksJson.image.childrenMdx.children'
  | 'childLinksJson.image.childrenMdx.excerpt'
  | 'childLinksJson.image.childrenMdx.fileAbsolutePath'
  | 'childLinksJson.image.childrenMdx.gatsbyPath'
  | 'childLinksJson.image.childrenMdx.headings'
  | 'childLinksJson.image.childrenMdx.html'
  | 'childLinksJson.image.childrenMdx.id'
  | 'childLinksJson.image.childrenMdx.mdxAST'
  | 'childLinksJson.image.childrenMdx.rawBody'
  | 'childLinksJson.image.childrenMdx.slug'
  | 'childLinksJson.image.childrenMdx.tableOfContents'
  | 'childLinksJson.image.childrenMdx.timeToRead'
  | 'childLinksJson.image.childrenProjectsJson'
  | 'childLinksJson.image.childrenProjectsJson.children'
  | 'childLinksJson.image.childrenProjectsJson.date'
  | 'childLinksJson.image.childrenProjectsJson.description'
  | 'childLinksJson.image.childrenProjectsJson.id'
  | 'childLinksJson.image.childrenProjectsJson.lang'
  | 'childLinksJson.image.childrenProjectsJson.stack'
  | 'childLinksJson.image.childrenProjectsJson.title'
  | 'childLinksJson.image.childrenProjectsJson.url'
  | 'childLinksJson.image.childrenPtJson'
  | 'childLinksJson.image.childrenPtJson.children'
  | 'childLinksJson.image.childrenPtJson.id'
  | 'childLinksJson.image.childrenReference'
  | 'childLinksJson.image.childrenReference.abstract'
  | 'childLinksJson.image.childrenReference.address'
  | 'childLinksJson.image.childrenReference.articleno'
  | 'childLinksJson.image.childrenReference.author'
  | 'childLinksJson.image.childrenReference.authors'
  | 'childLinksJson.image.childrenReference.booktitle'
  | 'childLinksJson.image.childrenReference.children'
  | 'childLinksJson.image.childrenReference.date'
  | 'childLinksJson.image.childrenReference.doi'
  | 'childLinksJson.image.childrenReference.entry_type'
  | 'childLinksJson.image.childrenReference.id'
  | 'childLinksJson.image.childrenReference.isbn'
  | 'childLinksJson.image.childrenReference.issn'
  | 'childLinksJson.image.childrenReference.journal'
  | 'childLinksJson.image.childrenReference.key'
  | 'childLinksJson.image.childrenReference.keywords'
  | 'childLinksJson.image.childrenReference.location'
  | 'childLinksJson.image.childrenReference.month'
  | 'childLinksJson.image.childrenReference.number'
  | 'childLinksJson.image.childrenReference.numpages'
  | 'childLinksJson.image.childrenReference.pages'
  | 'childLinksJson.image.childrenReference.place'
  | 'childLinksJson.image.childrenReference.publisher'
  | 'childLinksJson.image.childrenReference.raw'
  | 'childLinksJson.image.childrenReference.series'
  | 'childLinksJson.image.childrenReference.title'
  | 'childLinksJson.image.childrenReference.url'
  | 'childLinksJson.image.childrenReference.volume'
  | 'childLinksJson.image.childrenReference.year'
  | 'childLinksJson.image.childrenSubjectsJson'
  | 'childLinksJson.image.childrenSubjectsJson.children'
  | 'childLinksJson.image.childrenSubjectsJson.id'
  | 'childLinksJson.image.childrenSubjectsJson.institution'
  | 'childLinksJson.image.childrenSubjectsJson.semester'
  | 'childLinksJson.image.childrenSubjectsJson.subjects'
  | 'childLinksJson.image.children.children'
  | 'childLinksJson.image.children.id'
  | 'childLinksJson.image.ctime'
  | 'childLinksJson.image.ctimeMs'
  | 'childLinksJson.image.dev'
  | 'childLinksJson.image.dir'
  | 'childLinksJson.image.ext'
  | 'childLinksJson.image.extension'
  | 'childLinksJson.image.gid'
  | 'childLinksJson.image.id'
  | 'childLinksJson.image.ino'
  | 'childLinksJson.image.internal.content'
  | 'childLinksJson.image.internal.contentDigest'
  | 'childLinksJson.image.internal.description'
  | 'childLinksJson.image.internal.fieldOwners'
  | 'childLinksJson.image.internal.ignoreType'
  | 'childLinksJson.image.internal.mediaType'
  | 'childLinksJson.image.internal.owner'
  | 'childLinksJson.image.internal.type'
  | 'childLinksJson.image.mode'
  | 'childLinksJson.image.modifiedTime'
  | 'childLinksJson.image.mtime'
  | 'childLinksJson.image.mtimeMs'
  | 'childLinksJson.image.name'
  | 'childLinksJson.image.nlink'
  | 'childLinksJson.image.parent.children'
  | 'childLinksJson.image.parent.id'
  | 'childLinksJson.image.prettySize'
  | 'childLinksJson.image.publicURL'
  | 'childLinksJson.image.rdev'
  | 'childLinksJson.image.relativeDirectory'
  | 'childLinksJson.image.relativePath'
  | 'childLinksJson.image.root'
  | 'childLinksJson.image.size'
  | 'childLinksJson.image.sourceInstanceName'
  | 'childLinksJson.image.uid'
  | 'childLinksJson.internal.content'
  | 'childLinksJson.internal.contentDigest'
  | 'childLinksJson.internal.description'
  | 'childLinksJson.internal.fieldOwners'
  | 'childLinksJson.internal.ignoreType'
  | 'childLinksJson.internal.mediaType'
  | 'childLinksJson.internal.owner'
  | 'childLinksJson.internal.type'
  | 'childLinksJson.lang'
  | 'childLinksJson.link'
  | 'childLinksJson.parent.children'
  | 'childLinksJson.parent.children.children'
  | 'childLinksJson.parent.children.id'
  | 'childLinksJson.parent.id'
  | 'childLinksJson.parent.internal.content'
  | 'childLinksJson.parent.internal.contentDigest'
  | 'childLinksJson.parent.internal.description'
  | 'childLinksJson.parent.internal.fieldOwners'
  | 'childLinksJson.parent.internal.ignoreType'
  | 'childLinksJson.parent.internal.mediaType'
  | 'childLinksJson.parent.internal.owner'
  | 'childLinksJson.parent.internal.type'
  | 'childLinksJson.parent.parent.children'
  | 'childLinksJson.parent.parent.id'
  | 'childLinksJson.publishDate'
  | 'childLinksJson.tags'
  | 'childLinksJson.title'
  | 'childLinksJson.type'
  | 'childMdx.body'
  | 'childMdx.children'
  | 'childMdx.children.children'
  | 'childMdx.children.children.children'
  | 'childMdx.children.children.id'
  | 'childMdx.children.id'
  | 'childMdx.children.internal.content'
  | 'childMdx.children.internal.contentDigest'
  | 'childMdx.children.internal.description'
  | 'childMdx.children.internal.fieldOwners'
  | 'childMdx.children.internal.ignoreType'
  | 'childMdx.children.internal.mediaType'
  | 'childMdx.children.internal.owner'
  | 'childMdx.children.internal.type'
  | 'childMdx.children.parent.children'
  | 'childMdx.children.parent.id'
  | 'childMdx.excerpt'
  | 'childMdx.fields.isDefault'
  | 'childMdx.fields.locale'
  | 'childMdx.fileAbsolutePath'
  | 'childMdx.frontmatter.comments'
  | 'childMdx.frontmatter.cover.absolutePath'
  | 'childMdx.frontmatter.cover.accessTime'
  | 'childMdx.frontmatter.cover.atime'
  | 'childMdx.frontmatter.cover.atimeMs'
  | 'childMdx.frontmatter.cover.base'
  | 'childMdx.frontmatter.cover.birthTime'
  | 'childMdx.frontmatter.cover.birthtime'
  | 'childMdx.frontmatter.cover.birthtimeMs'
  | 'childMdx.frontmatter.cover.blksize'
  | 'childMdx.frontmatter.cover.blocks'
  | 'childMdx.frontmatter.cover.changeTime'
  | 'childMdx.frontmatter.cover.children'
  | 'childMdx.frontmatter.cover.childrenEnJson'
  | 'childMdx.frontmatter.cover.childrenImageSharp'
  | 'childMdx.frontmatter.cover.childrenLinksJson'
  | 'childMdx.frontmatter.cover.childrenMdx'
  | 'childMdx.frontmatter.cover.childrenProjectsJson'
  | 'childMdx.frontmatter.cover.childrenPtJson'
  | 'childMdx.frontmatter.cover.childrenReference'
  | 'childMdx.frontmatter.cover.childrenSubjectsJson'
  | 'childMdx.frontmatter.cover.ctime'
  | 'childMdx.frontmatter.cover.ctimeMs'
  | 'childMdx.frontmatter.cover.dev'
  | 'childMdx.frontmatter.cover.dir'
  | 'childMdx.frontmatter.cover.ext'
  | 'childMdx.frontmatter.cover.extension'
  | 'childMdx.frontmatter.cover.gid'
  | 'childMdx.frontmatter.cover.id'
  | 'childMdx.frontmatter.cover.ino'
  | 'childMdx.frontmatter.cover.mode'
  | 'childMdx.frontmatter.cover.modifiedTime'
  | 'childMdx.frontmatter.cover.mtime'
  | 'childMdx.frontmatter.cover.mtimeMs'
  | 'childMdx.frontmatter.cover.name'
  | 'childMdx.frontmatter.cover.nlink'
  | 'childMdx.frontmatter.cover.prettySize'
  | 'childMdx.frontmatter.cover.publicURL'
  | 'childMdx.frontmatter.cover.rdev'
  | 'childMdx.frontmatter.cover.relativeDirectory'
  | 'childMdx.frontmatter.cover.relativePath'
  | 'childMdx.frontmatter.cover.root'
  | 'childMdx.frontmatter.cover.size'
  | 'childMdx.frontmatter.cover.sourceInstanceName'
  | 'childMdx.frontmatter.cover.uid'
  | 'childMdx.frontmatter.date'
  | 'childMdx.frontmatter.description'
  | 'childMdx.frontmatter.month'
  | 'childMdx.frontmatter.slug'
  | 'childMdx.frontmatter.tags'
  | 'childMdx.frontmatter.title'
  | 'childMdx.frontmatter.year'
  | 'childMdx.gatsbyPath'
  | 'childMdx.headings'
  | 'childMdx.headings.depth'
  | 'childMdx.headings.value'
  | 'childMdx.html'
  | 'childMdx.id'
  | 'childMdx.internal.content'
  | 'childMdx.internal.contentDigest'
  | 'childMdx.internal.description'
  | 'childMdx.internal.fieldOwners'
  | 'childMdx.internal.ignoreType'
  | 'childMdx.internal.mediaType'
  | 'childMdx.internal.owner'
  | 'childMdx.internal.type'
  | 'childMdx.mdxAST'
  | 'childMdx.parent.children'
  | 'childMdx.parent.children.children'
  | 'childMdx.parent.children.id'
  | 'childMdx.parent.id'
  | 'childMdx.parent.internal.content'
  | 'childMdx.parent.internal.contentDigest'
  | 'childMdx.parent.internal.description'
  | 'childMdx.parent.internal.fieldOwners'
  | 'childMdx.parent.internal.ignoreType'
  | 'childMdx.parent.internal.mediaType'
  | 'childMdx.parent.internal.owner'
  | 'childMdx.parent.internal.type'
  | 'childMdx.parent.parent.children'
  | 'childMdx.parent.parent.id'
  | 'childMdx.rawBody'
  | 'childMdx.slug'
  | 'childMdx.tableOfContents'
  | 'childMdx.timeToRead'
  | 'childMdx.wordCount.paragraphs'
  | 'childMdx.wordCount.sentences'
  | 'childMdx.wordCount.words'
  | 'childProjectsJson.children'
  | 'childProjectsJson.children.children'
  | 'childProjectsJson.children.children.children'
  | 'childProjectsJson.children.children.id'
  | 'childProjectsJson.children.id'
  | 'childProjectsJson.children.internal.content'
  | 'childProjectsJson.children.internal.contentDigest'
  | 'childProjectsJson.children.internal.description'
  | 'childProjectsJson.children.internal.fieldOwners'
  | 'childProjectsJson.children.internal.ignoreType'
  | 'childProjectsJson.children.internal.mediaType'
  | 'childProjectsJson.children.internal.owner'
  | 'childProjectsJson.children.internal.type'
  | 'childProjectsJson.children.parent.children'
  | 'childProjectsJson.children.parent.id'
  | 'childProjectsJson.date'
  | 'childProjectsJson.description'
  | 'childProjectsJson.id'
  | 'childProjectsJson.image.absolutePath'
  | 'childProjectsJson.image.accessTime'
  | 'childProjectsJson.image.atime'
  | 'childProjectsJson.image.atimeMs'
  | 'childProjectsJson.image.base'
  | 'childProjectsJson.image.birthTime'
  | 'childProjectsJson.image.birthtime'
  | 'childProjectsJson.image.birthtimeMs'
  | 'childProjectsJson.image.blksize'
  | 'childProjectsJson.image.blocks'
  | 'childProjectsJson.image.changeTime'
  | 'childProjectsJson.image.childEnJson.children'
  | 'childProjectsJson.image.childEnJson.id'
  | 'childProjectsJson.image.childImageSharp.children'
  | 'childProjectsJson.image.childImageSharp.gatsbyImageData'
  | 'childProjectsJson.image.childImageSharp.id'
  | 'childProjectsJson.image.childLinksJson.children'
  | 'childProjectsJson.image.childLinksJson.description'
  | 'childProjectsJson.image.childLinksJson.id'
  | 'childProjectsJson.image.childLinksJson.lang'
  | 'childProjectsJson.image.childLinksJson.link'
  | 'childProjectsJson.image.childLinksJson.publishDate'
  | 'childProjectsJson.image.childLinksJson.tags'
  | 'childProjectsJson.image.childLinksJson.title'
  | 'childProjectsJson.image.childLinksJson.type'
  | 'childProjectsJson.image.childMdx.body'
  | 'childProjectsJson.image.childMdx.children'
  | 'childProjectsJson.image.childMdx.excerpt'
  | 'childProjectsJson.image.childMdx.fileAbsolutePath'
  | 'childProjectsJson.image.childMdx.gatsbyPath'
  | 'childProjectsJson.image.childMdx.headings'
  | 'childProjectsJson.image.childMdx.html'
  | 'childProjectsJson.image.childMdx.id'
  | 'childProjectsJson.image.childMdx.mdxAST'
  | 'childProjectsJson.image.childMdx.rawBody'
  | 'childProjectsJson.image.childMdx.slug'
  | 'childProjectsJson.image.childMdx.tableOfContents'
  | 'childProjectsJson.image.childMdx.timeToRead'
  | 'childProjectsJson.image.childProjectsJson.children'
  | 'childProjectsJson.image.childProjectsJson.date'
  | 'childProjectsJson.image.childProjectsJson.description'
  | 'childProjectsJson.image.childProjectsJson.id'
  | 'childProjectsJson.image.childProjectsJson.lang'
  | 'childProjectsJson.image.childProjectsJson.stack'
  | 'childProjectsJson.image.childProjectsJson.title'
  | 'childProjectsJson.image.childProjectsJson.url'
  | 'childProjectsJson.image.childPtJson.children'
  | 'childProjectsJson.image.childPtJson.id'
  | 'childProjectsJson.image.childReference.abstract'
  | 'childProjectsJson.image.childReference.address'
  | 'childProjectsJson.image.childReference.articleno'
  | 'childProjectsJson.image.childReference.author'
  | 'childProjectsJson.image.childReference.authors'
  | 'childProjectsJson.image.childReference.booktitle'
  | 'childProjectsJson.image.childReference.children'
  | 'childProjectsJson.image.childReference.date'
  | 'childProjectsJson.image.childReference.doi'
  | 'childProjectsJson.image.childReference.entry_type'
  | 'childProjectsJson.image.childReference.id'
  | 'childProjectsJson.image.childReference.isbn'
  | 'childProjectsJson.image.childReference.issn'
  | 'childProjectsJson.image.childReference.journal'
  | 'childProjectsJson.image.childReference.key'
  | 'childProjectsJson.image.childReference.keywords'
  | 'childProjectsJson.image.childReference.location'
  | 'childProjectsJson.image.childReference.month'
  | 'childProjectsJson.image.childReference.number'
  | 'childProjectsJson.image.childReference.numpages'
  | 'childProjectsJson.image.childReference.pages'
  | 'childProjectsJson.image.childReference.place'
  | 'childProjectsJson.image.childReference.publisher'
  | 'childProjectsJson.image.childReference.raw'
  | 'childProjectsJson.image.childReference.series'
  | 'childProjectsJson.image.childReference.title'
  | 'childProjectsJson.image.childReference.url'
  | 'childProjectsJson.image.childReference.volume'
  | 'childProjectsJson.image.childReference.year'
  | 'childProjectsJson.image.childSubjectsJson.children'
  | 'childProjectsJson.image.childSubjectsJson.id'
  | 'childProjectsJson.image.childSubjectsJson.institution'
  | 'childProjectsJson.image.childSubjectsJson.semester'
  | 'childProjectsJson.image.childSubjectsJson.subjects'
  | 'childProjectsJson.image.children'
  | 'childProjectsJson.image.childrenEnJson'
  | 'childProjectsJson.image.childrenEnJson.children'
  | 'childProjectsJson.image.childrenEnJson.id'
  | 'childProjectsJson.image.childrenImageSharp'
  | 'childProjectsJson.image.childrenImageSharp.children'
  | 'childProjectsJson.image.childrenImageSharp.gatsbyImageData'
  | 'childProjectsJson.image.childrenImageSharp.id'
  | 'childProjectsJson.image.childrenLinksJson'
  | 'childProjectsJson.image.childrenLinksJson.children'
  | 'childProjectsJson.image.childrenLinksJson.description'
  | 'childProjectsJson.image.childrenLinksJson.id'
  | 'childProjectsJson.image.childrenLinksJson.lang'
  | 'childProjectsJson.image.childrenLinksJson.link'
  | 'childProjectsJson.image.childrenLinksJson.publishDate'
  | 'childProjectsJson.image.childrenLinksJson.tags'
  | 'childProjectsJson.image.childrenLinksJson.title'
  | 'childProjectsJson.image.childrenLinksJson.type'
  | 'childProjectsJson.image.childrenMdx'
  | 'childProjectsJson.image.childrenMdx.body'
  | 'childProjectsJson.image.childrenMdx.children'
  | 'childProjectsJson.image.childrenMdx.excerpt'
  | 'childProjectsJson.image.childrenMdx.fileAbsolutePath'
  | 'childProjectsJson.image.childrenMdx.gatsbyPath'
  | 'childProjectsJson.image.childrenMdx.headings'
  | 'childProjectsJson.image.childrenMdx.html'
  | 'childProjectsJson.image.childrenMdx.id'
  | 'childProjectsJson.image.childrenMdx.mdxAST'
  | 'childProjectsJson.image.childrenMdx.rawBody'
  | 'childProjectsJson.image.childrenMdx.slug'
  | 'childProjectsJson.image.childrenMdx.tableOfContents'
  | 'childProjectsJson.image.childrenMdx.timeToRead'
  | 'childProjectsJson.image.childrenProjectsJson'
  | 'childProjectsJson.image.childrenProjectsJson.children'
  | 'childProjectsJson.image.childrenProjectsJson.date'
  | 'childProjectsJson.image.childrenProjectsJson.description'
  | 'childProjectsJson.image.childrenProjectsJson.id'
  | 'childProjectsJson.image.childrenProjectsJson.lang'
  | 'childProjectsJson.image.childrenProjectsJson.stack'
  | 'childProjectsJson.image.childrenProjectsJson.title'
  | 'childProjectsJson.image.childrenProjectsJson.url'
  | 'childProjectsJson.image.childrenPtJson'
  | 'childProjectsJson.image.childrenPtJson.children'
  | 'childProjectsJson.image.childrenPtJson.id'
  | 'childProjectsJson.image.childrenReference'
  | 'childProjectsJson.image.childrenReference.abstract'
  | 'childProjectsJson.image.childrenReference.address'
  | 'childProjectsJson.image.childrenReference.articleno'
  | 'childProjectsJson.image.childrenReference.author'
  | 'childProjectsJson.image.childrenReference.authors'
  | 'childProjectsJson.image.childrenReference.booktitle'
  | 'childProjectsJson.image.childrenReference.children'
  | 'childProjectsJson.image.childrenReference.date'
  | 'childProjectsJson.image.childrenReference.doi'
  | 'childProjectsJson.image.childrenReference.entry_type'
  | 'childProjectsJson.image.childrenReference.id'
  | 'childProjectsJson.image.childrenReference.isbn'
  | 'childProjectsJson.image.childrenReference.issn'
  | 'childProjectsJson.image.childrenReference.journal'
  | 'childProjectsJson.image.childrenReference.key'
  | 'childProjectsJson.image.childrenReference.keywords'
  | 'childProjectsJson.image.childrenReference.location'
  | 'childProjectsJson.image.childrenReference.month'
  | 'childProjectsJson.image.childrenReference.number'
  | 'childProjectsJson.image.childrenReference.numpages'
  | 'childProjectsJson.image.childrenReference.pages'
  | 'childProjectsJson.image.childrenReference.place'
  | 'childProjectsJson.image.childrenReference.publisher'
  | 'childProjectsJson.image.childrenReference.raw'
  | 'childProjectsJson.image.childrenReference.series'
  | 'childProjectsJson.image.childrenReference.title'
  | 'childProjectsJson.image.childrenReference.url'
  | 'childProjectsJson.image.childrenReference.volume'
  | 'childProjectsJson.image.childrenReference.year'
  | 'childProjectsJson.image.childrenSubjectsJson'
  | 'childProjectsJson.image.childrenSubjectsJson.children'
  | 'childProjectsJson.image.childrenSubjectsJson.id'
  | 'childProjectsJson.image.childrenSubjectsJson.institution'
  | 'childProjectsJson.image.childrenSubjectsJson.semester'
  | 'childProjectsJson.image.childrenSubjectsJson.subjects'
  | 'childProjectsJson.image.children.children'
  | 'childProjectsJson.image.children.id'
  | 'childProjectsJson.image.ctime'
  | 'childProjectsJson.image.ctimeMs'
  | 'childProjectsJson.image.dev'
  | 'childProjectsJson.image.dir'
  | 'childProjectsJson.image.ext'
  | 'childProjectsJson.image.extension'
  | 'childProjectsJson.image.gid'
  | 'childProjectsJson.image.id'
  | 'childProjectsJson.image.ino'
  | 'childProjectsJson.image.internal.content'
  | 'childProjectsJson.image.internal.contentDigest'
  | 'childProjectsJson.image.internal.description'
  | 'childProjectsJson.image.internal.fieldOwners'
  | 'childProjectsJson.image.internal.ignoreType'
  | 'childProjectsJson.image.internal.mediaType'
  | 'childProjectsJson.image.internal.owner'
  | 'childProjectsJson.image.internal.type'
  | 'childProjectsJson.image.mode'
  | 'childProjectsJson.image.modifiedTime'
  | 'childProjectsJson.image.mtime'
  | 'childProjectsJson.image.mtimeMs'
  | 'childProjectsJson.image.name'
  | 'childProjectsJson.image.nlink'
  | 'childProjectsJson.image.parent.children'
  | 'childProjectsJson.image.parent.id'
  | 'childProjectsJson.image.prettySize'
  | 'childProjectsJson.image.publicURL'
  | 'childProjectsJson.image.rdev'
  | 'childProjectsJson.image.relativeDirectory'
  | 'childProjectsJson.image.relativePath'
  | 'childProjectsJson.image.root'
  | 'childProjectsJson.image.size'
  | 'childProjectsJson.image.sourceInstanceName'
  | 'childProjectsJson.image.uid'
  | 'childProjectsJson.internal.content'
  | 'childProjectsJson.internal.contentDigest'
  | 'childProjectsJson.internal.description'
  | 'childProjectsJson.internal.fieldOwners'
  | 'childProjectsJson.internal.ignoreType'
  | 'childProjectsJson.internal.mediaType'
  | 'childProjectsJson.internal.owner'
  | 'childProjectsJson.internal.type'
  | 'childProjectsJson.lang'
  | 'childProjectsJson.parent.children'
  | 'childProjectsJson.parent.children.children'
  | 'childProjectsJson.parent.children.id'
  | 'childProjectsJson.parent.id'
  | 'childProjectsJson.parent.internal.content'
  | 'childProjectsJson.parent.internal.contentDigest'
  | 'childProjectsJson.parent.internal.description'
  | 'childProjectsJson.parent.internal.fieldOwners'
  | 'childProjectsJson.parent.internal.ignoreType'
  | 'childProjectsJson.parent.internal.mediaType'
  | 'childProjectsJson.parent.internal.owner'
  | 'childProjectsJson.parent.internal.type'
  | 'childProjectsJson.parent.parent.children'
  | 'childProjectsJson.parent.parent.id'
  | 'childProjectsJson.stack'
  | 'childProjectsJson.title'
  | 'childProjectsJson.url'
  | 'childPtJson.academic.authors'
  | 'childPtJson.academic.copied'
  | 'childPtJson.academic.copycitation'
  | 'childPtJson.academic.researching.groups'
  | 'childPtJson.academic.researching.intro'
  | 'childPtJson.academic.researching.list'
  | 'childPtJson.academic.researching.title'
  | 'childPtJson.academic.teaching.intro'
  | 'childPtJson.children'
  | 'childPtJson.children.children'
  | 'childPtJson.children.children.children'
  | 'childPtJson.children.children.id'
  | 'childPtJson.children.id'
  | 'childPtJson.children.internal.content'
  | 'childPtJson.children.internal.contentDigest'
  | 'childPtJson.children.internal.description'
  | 'childPtJson.children.internal.fieldOwners'
  | 'childPtJson.children.internal.ignoreType'
  | 'childPtJson.children.internal.mediaType'
  | 'childPtJson.children.internal.owner'
  | 'childPtJson.children.internal.type'
  | 'childPtJson.children.parent.children'
  | 'childPtJson.children.parent.id'
  | 'childPtJson.id'
  | 'childPtJson.index.ifpb'
  | 'childPtJson.index.latest'
  | 'childPtJson.index.present'
  | 'childPtJson.index.text.personal'
  | 'childPtJson.index.text.professional'
  | 'childPtJson.index.titles'
  | 'childPtJson.internal.content'
  | 'childPtJson.internal.contentDigest'
  | 'childPtJson.internal.description'
  | 'childPtJson.internal.fieldOwners'
  | 'childPtJson.internal.ignoreType'
  | 'childPtJson.internal.mediaType'
  | 'childPtJson.internal.owner'
  | 'childPtJson.internal.type'
  | 'childPtJson.labs.intro'
  | 'childPtJson.labs.stack'
  | 'childPtJson.links.intro'
  | 'childPtJson.menu.about'
  | 'childPtJson.menu.academic'
  | 'childPtJson.menu.blog'
  | 'childPtJson.menu.cv'
  | 'childPtJson.menu.labs'
  | 'childPtJson.menu.links'
  | 'childPtJson.parent.children'
  | 'childPtJson.parent.children.children'
  | 'childPtJson.parent.children.id'
  | 'childPtJson.parent.id'
  | 'childPtJson.parent.internal.content'
  | 'childPtJson.parent.internal.contentDigest'
  | 'childPtJson.parent.internal.description'
  | 'childPtJson.parent.internal.fieldOwners'
  | 'childPtJson.parent.internal.ignoreType'
  | 'childPtJson.parent.internal.mediaType'
  | 'childPtJson.parent.internal.owner'
  | 'childPtJson.parent.internal.type'
  | 'childPtJson.parent.parent.children'
  | 'childPtJson.parent.parent.id'
  | 'childReference.abstract'
  | 'childReference.address'
  | 'childReference.articleno'
  | 'childReference.author'
  | 'childReference.authors'
  | 'childReference.booktitle'
  | 'childReference.children'
  | 'childReference.children.children'
  | 'childReference.children.children.children'
  | 'childReference.children.children.id'
  | 'childReference.children.id'
  | 'childReference.children.internal.content'
  | 'childReference.children.internal.contentDigest'
  | 'childReference.children.internal.description'
  | 'childReference.children.internal.fieldOwners'
  | 'childReference.children.internal.ignoreType'
  | 'childReference.children.internal.mediaType'
  | 'childReference.children.internal.owner'
  | 'childReference.children.internal.type'
  | 'childReference.children.parent.children'
  | 'childReference.children.parent.id'
  | 'childReference.date'
  | 'childReference.doi'
  | 'childReference.entry_type'
  | 'childReference.id'
  | 'childReference.internal.content'
  | 'childReference.internal.contentDigest'
  | 'childReference.internal.description'
  | 'childReference.internal.fieldOwners'
  | 'childReference.internal.ignoreType'
  | 'childReference.internal.mediaType'
  | 'childReference.internal.owner'
  | 'childReference.internal.type'
  | 'childReference.isbn'
  | 'childReference.issn'
  | 'childReference.journal'
  | 'childReference.key'
  | 'childReference.keywords'
  | 'childReference.location'
  | 'childReference.month'
  | 'childReference.number'
  | 'childReference.numpages'
  | 'childReference.pages'
  | 'childReference.parent.children'
  | 'childReference.parent.children.children'
  | 'childReference.parent.children.id'
  | 'childReference.parent.id'
  | 'childReference.parent.internal.content'
  | 'childReference.parent.internal.contentDigest'
  | 'childReference.parent.internal.description'
  | 'childReference.parent.internal.fieldOwners'
  | 'childReference.parent.internal.ignoreType'
  | 'childReference.parent.internal.mediaType'
  | 'childReference.parent.internal.owner'
  | 'childReference.parent.internal.type'
  | 'childReference.parent.parent.children'
  | 'childReference.parent.parent.id'
  | 'childReference.place'
  | 'childReference.publisher'
  | 'childReference.raw'
  | 'childReference.series'
  | 'childReference.title'
  | 'childReference.url'
  | 'childReference.volume'
  | 'childReference.year'
  | 'childSubjectsJson.children'
  | 'childSubjectsJson.children.children'
  | 'childSubjectsJson.children.children.children'
  | 'childSubjectsJson.children.children.id'
  | 'childSubjectsJson.children.id'
  | 'childSubjectsJson.children.internal.content'
  | 'childSubjectsJson.children.internal.contentDigest'
  | 'childSubjectsJson.children.internal.description'
  | 'childSubjectsJson.children.internal.fieldOwners'
  | 'childSubjectsJson.children.internal.ignoreType'
  | 'childSubjectsJson.children.internal.mediaType'
  | 'childSubjectsJson.children.internal.owner'
  | 'childSubjectsJson.children.internal.type'
  | 'childSubjectsJson.children.parent.children'
  | 'childSubjectsJson.children.parent.id'
  | 'childSubjectsJson.id'
  | 'childSubjectsJson.institution'
  | 'childSubjectsJson.internal.content'
  | 'childSubjectsJson.internal.contentDigest'
  | 'childSubjectsJson.internal.description'
  | 'childSubjectsJson.internal.fieldOwners'
  | 'childSubjectsJson.internal.ignoreType'
  | 'childSubjectsJson.internal.mediaType'
  | 'childSubjectsJson.internal.owner'
  | 'childSubjectsJson.internal.type'
  | 'childSubjectsJson.parent.children'
  | 'childSubjectsJson.parent.children.children'
  | 'childSubjectsJson.parent.children.id'
  | 'childSubjectsJson.parent.id'
  | 'childSubjectsJson.parent.internal.content'
  | 'childSubjectsJson.parent.internal.contentDigest'
  | 'childSubjectsJson.parent.internal.description'
  | 'childSubjectsJson.parent.internal.fieldOwners'
  | 'childSubjectsJson.parent.internal.ignoreType'
  | 'childSubjectsJson.parent.internal.mediaType'
  | 'childSubjectsJson.parent.internal.owner'
  | 'childSubjectsJson.parent.internal.type'
  | 'childSubjectsJson.parent.parent.children'
  | 'childSubjectsJson.parent.parent.id'
  | 'childSubjectsJson.semester'
  | 'childSubjectsJson.subjects'
  | 'childSubjectsJson.subjects.link'
  | 'childSubjectsJson.subjects.name'
  | 'children'
  | 'childrenEnJson'
  | 'childrenEnJson.academic.authors'
  | 'childrenEnJson.academic.copied'
  | 'childrenEnJson.academic.copycitation'
  | 'childrenEnJson.academic.researching.groups'
  | 'childrenEnJson.academic.researching.intro'
  | 'childrenEnJson.academic.researching.list'
  | 'childrenEnJson.academic.researching.title'
  | 'childrenEnJson.academic.teaching.intro'
  | 'childrenEnJson.blog.control.back'
  | 'childrenEnJson.children'
  | 'childrenEnJson.children.children'
  | 'childrenEnJson.children.children.children'
  | 'childrenEnJson.children.children.id'
  | 'childrenEnJson.children.id'
  | 'childrenEnJson.children.internal.content'
  | 'childrenEnJson.children.internal.contentDigest'
  | 'childrenEnJson.children.internal.description'
  | 'childrenEnJson.children.internal.fieldOwners'
  | 'childrenEnJson.children.internal.ignoreType'
  | 'childrenEnJson.children.internal.mediaType'
  | 'childrenEnJson.children.internal.owner'
  | 'childrenEnJson.children.internal.type'
  | 'childrenEnJson.children.parent.children'
  | 'childrenEnJson.children.parent.id'
  | 'childrenEnJson.id'
  | 'childrenEnJson.index.ifpb'
  | 'childrenEnJson.index.latest'
  | 'childrenEnJson.index.present'
  | 'childrenEnJson.index.text.personal'
  | 'childrenEnJson.index.text.professional'
  | 'childrenEnJson.index.titles'
  | 'childrenEnJson.internal.content'
  | 'childrenEnJson.internal.contentDigest'
  | 'childrenEnJson.internal.description'
  | 'childrenEnJson.internal.fieldOwners'
  | 'childrenEnJson.internal.ignoreType'
  | 'childrenEnJson.internal.mediaType'
  | 'childrenEnJson.internal.owner'
  | 'childrenEnJson.internal.type'
  | 'childrenEnJson.labs.intro'
  | 'childrenEnJson.labs.stack'
  | 'childrenEnJson.links.intro'
  | 'childrenEnJson.menu.about'
  | 'childrenEnJson.menu.academic'
  | 'childrenEnJson.menu.blog'
  | 'childrenEnJson.menu.cv'
  | 'childrenEnJson.menu.labs'
  | 'childrenEnJson.menu.links'
  | 'childrenEnJson.parent.children'
  | 'childrenEnJson.parent.children.children'
  | 'childrenEnJson.parent.children.id'
  | 'childrenEnJson.parent.id'
  | 'childrenEnJson.parent.internal.content'
  | 'childrenEnJson.parent.internal.contentDigest'
  | 'childrenEnJson.parent.internal.description'
  | 'childrenEnJson.parent.internal.fieldOwners'
  | 'childrenEnJson.parent.internal.ignoreType'
  | 'childrenEnJson.parent.internal.mediaType'
  | 'childrenEnJson.parent.internal.owner'
  | 'childrenEnJson.parent.internal.type'
  | 'childrenEnJson.parent.parent.children'
  | 'childrenEnJson.parent.parent.id'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'childrenLinksJson'
  | 'childrenLinksJson.children'
  | 'childrenLinksJson.children.children'
  | 'childrenLinksJson.children.children.children'
  | 'childrenLinksJson.children.children.id'
  | 'childrenLinksJson.children.id'
  | 'childrenLinksJson.children.internal.content'
  | 'childrenLinksJson.children.internal.contentDigest'
  | 'childrenLinksJson.children.internal.description'
  | 'childrenLinksJson.children.internal.fieldOwners'
  | 'childrenLinksJson.children.internal.ignoreType'
  | 'childrenLinksJson.children.internal.mediaType'
  | 'childrenLinksJson.children.internal.owner'
  | 'childrenLinksJson.children.internal.type'
  | 'childrenLinksJson.children.parent.children'
  | 'childrenLinksJson.children.parent.id'
  | 'childrenLinksJson.description'
  | 'childrenLinksJson.id'
  | 'childrenLinksJson.image.absolutePath'
  | 'childrenLinksJson.image.accessTime'
  | 'childrenLinksJson.image.atime'
  | 'childrenLinksJson.image.atimeMs'
  | 'childrenLinksJson.image.base'
  | 'childrenLinksJson.image.birthTime'
  | 'childrenLinksJson.image.birthtime'
  | 'childrenLinksJson.image.birthtimeMs'
  | 'childrenLinksJson.image.blksize'
  | 'childrenLinksJson.image.blocks'
  | 'childrenLinksJson.image.changeTime'
  | 'childrenLinksJson.image.childEnJson.children'
  | 'childrenLinksJson.image.childEnJson.id'
  | 'childrenLinksJson.image.childImageSharp.children'
  | 'childrenLinksJson.image.childImageSharp.gatsbyImageData'
  | 'childrenLinksJson.image.childImageSharp.id'
  | 'childrenLinksJson.image.childLinksJson.children'
  | 'childrenLinksJson.image.childLinksJson.description'
  | 'childrenLinksJson.image.childLinksJson.id'
  | 'childrenLinksJson.image.childLinksJson.lang'
  | 'childrenLinksJson.image.childLinksJson.link'
  | 'childrenLinksJson.image.childLinksJson.publishDate'
  | 'childrenLinksJson.image.childLinksJson.tags'
  | 'childrenLinksJson.image.childLinksJson.title'
  | 'childrenLinksJson.image.childLinksJson.type'
  | 'childrenLinksJson.image.childMdx.body'
  | 'childrenLinksJson.image.childMdx.children'
  | 'childrenLinksJson.image.childMdx.excerpt'
  | 'childrenLinksJson.image.childMdx.fileAbsolutePath'
  | 'childrenLinksJson.image.childMdx.gatsbyPath'
  | 'childrenLinksJson.image.childMdx.headings'
  | 'childrenLinksJson.image.childMdx.html'
  | 'childrenLinksJson.image.childMdx.id'
  | 'childrenLinksJson.image.childMdx.mdxAST'
  | 'childrenLinksJson.image.childMdx.rawBody'
  | 'childrenLinksJson.image.childMdx.slug'
  | 'childrenLinksJson.image.childMdx.tableOfContents'
  | 'childrenLinksJson.image.childMdx.timeToRead'
  | 'childrenLinksJson.image.childProjectsJson.children'
  | 'childrenLinksJson.image.childProjectsJson.date'
  | 'childrenLinksJson.image.childProjectsJson.description'
  | 'childrenLinksJson.image.childProjectsJson.id'
  | 'childrenLinksJson.image.childProjectsJson.lang'
  | 'childrenLinksJson.image.childProjectsJson.stack'
  | 'childrenLinksJson.image.childProjectsJson.title'
  | 'childrenLinksJson.image.childProjectsJson.url'
  | 'childrenLinksJson.image.childPtJson.children'
  | 'childrenLinksJson.image.childPtJson.id'
  | 'childrenLinksJson.image.childReference.abstract'
  | 'childrenLinksJson.image.childReference.address'
  | 'childrenLinksJson.image.childReference.articleno'
  | 'childrenLinksJson.image.childReference.author'
  | 'childrenLinksJson.image.childReference.authors'
  | 'childrenLinksJson.image.childReference.booktitle'
  | 'childrenLinksJson.image.childReference.children'
  | 'childrenLinksJson.image.childReference.date'
  | 'childrenLinksJson.image.childReference.doi'
  | 'childrenLinksJson.image.childReference.entry_type'
  | 'childrenLinksJson.image.childReference.id'
  | 'childrenLinksJson.image.childReference.isbn'
  | 'childrenLinksJson.image.childReference.issn'
  | 'childrenLinksJson.image.childReference.journal'
  | 'childrenLinksJson.image.childReference.key'
  | 'childrenLinksJson.image.childReference.keywords'
  | 'childrenLinksJson.image.childReference.location'
  | 'childrenLinksJson.image.childReference.month'
  | 'childrenLinksJson.image.childReference.number'
  | 'childrenLinksJson.image.childReference.numpages'
  | 'childrenLinksJson.image.childReference.pages'
  | 'childrenLinksJson.image.childReference.place'
  | 'childrenLinksJson.image.childReference.publisher'
  | 'childrenLinksJson.image.childReference.raw'
  | 'childrenLinksJson.image.childReference.series'
  | 'childrenLinksJson.image.childReference.title'
  | 'childrenLinksJson.image.childReference.url'
  | 'childrenLinksJson.image.childReference.volume'
  | 'childrenLinksJson.image.childReference.year'
  | 'childrenLinksJson.image.childSubjectsJson.children'
  | 'childrenLinksJson.image.childSubjectsJson.id'
  | 'childrenLinksJson.image.childSubjectsJson.institution'
  | 'childrenLinksJson.image.childSubjectsJson.semester'
  | 'childrenLinksJson.image.childSubjectsJson.subjects'
  | 'childrenLinksJson.image.children'
  | 'childrenLinksJson.image.childrenEnJson'
  | 'childrenLinksJson.image.childrenEnJson.children'
  | 'childrenLinksJson.image.childrenEnJson.id'
  | 'childrenLinksJson.image.childrenImageSharp'
  | 'childrenLinksJson.image.childrenImageSharp.children'
  | 'childrenLinksJson.image.childrenImageSharp.gatsbyImageData'
  | 'childrenLinksJson.image.childrenImageSharp.id'
  | 'childrenLinksJson.image.childrenLinksJson'
  | 'childrenLinksJson.image.childrenLinksJson.children'
  | 'childrenLinksJson.image.childrenLinksJson.description'
  | 'childrenLinksJson.image.childrenLinksJson.id'
  | 'childrenLinksJson.image.childrenLinksJson.lang'
  | 'childrenLinksJson.image.childrenLinksJson.link'
  | 'childrenLinksJson.image.childrenLinksJson.publishDate'
  | 'childrenLinksJson.image.childrenLinksJson.tags'
  | 'childrenLinksJson.image.childrenLinksJson.title'
  | 'childrenLinksJson.image.childrenLinksJson.type'
  | 'childrenLinksJson.image.childrenMdx'
  | 'childrenLinksJson.image.childrenMdx.body'
  | 'childrenLinksJson.image.childrenMdx.children'
  | 'childrenLinksJson.image.childrenMdx.excerpt'
  | 'childrenLinksJson.image.childrenMdx.fileAbsolutePath'
  | 'childrenLinksJson.image.childrenMdx.gatsbyPath'
  | 'childrenLinksJson.image.childrenMdx.headings'
  | 'childrenLinksJson.image.childrenMdx.html'
  | 'childrenLinksJson.image.childrenMdx.id'
  | 'childrenLinksJson.image.childrenMdx.mdxAST'
  | 'childrenLinksJson.image.childrenMdx.rawBody'
  | 'childrenLinksJson.image.childrenMdx.slug'
  | 'childrenLinksJson.image.childrenMdx.tableOfContents'
  | 'childrenLinksJson.image.childrenMdx.timeToRead'
  | 'childrenLinksJson.image.childrenProjectsJson'
  | 'childrenLinksJson.image.childrenProjectsJson.children'
  | 'childrenLinksJson.image.childrenProjectsJson.date'
  | 'childrenLinksJson.image.childrenProjectsJson.description'
  | 'childrenLinksJson.image.childrenProjectsJson.id'
  | 'childrenLinksJson.image.childrenProjectsJson.lang'
  | 'childrenLinksJson.image.childrenProjectsJson.stack'
  | 'childrenLinksJson.image.childrenProjectsJson.title'
  | 'childrenLinksJson.image.childrenProjectsJson.url'
  | 'childrenLinksJson.image.childrenPtJson'
  | 'childrenLinksJson.image.childrenPtJson.children'
  | 'childrenLinksJson.image.childrenPtJson.id'
  | 'childrenLinksJson.image.childrenReference'
  | 'childrenLinksJson.image.childrenReference.abstract'
  | 'childrenLinksJson.image.childrenReference.address'
  | 'childrenLinksJson.image.childrenReference.articleno'
  | 'childrenLinksJson.image.childrenReference.author'
  | 'childrenLinksJson.image.childrenReference.authors'
  | 'childrenLinksJson.image.childrenReference.booktitle'
  | 'childrenLinksJson.image.childrenReference.children'
  | 'childrenLinksJson.image.childrenReference.date'
  | 'childrenLinksJson.image.childrenReference.doi'
  | 'childrenLinksJson.image.childrenReference.entry_type'
  | 'childrenLinksJson.image.childrenReference.id'
  | 'childrenLinksJson.image.childrenReference.isbn'
  | 'childrenLinksJson.image.childrenReference.issn'
  | 'childrenLinksJson.image.childrenReference.journal'
  | 'childrenLinksJson.image.childrenReference.key'
  | 'childrenLinksJson.image.childrenReference.keywords'
  | 'childrenLinksJson.image.childrenReference.location'
  | 'childrenLinksJson.image.childrenReference.month'
  | 'childrenLinksJson.image.childrenReference.number'
  | 'childrenLinksJson.image.childrenReference.numpages'
  | 'childrenLinksJson.image.childrenReference.pages'
  | 'childrenLinksJson.image.childrenReference.place'
  | 'childrenLinksJson.image.childrenReference.publisher'
  | 'childrenLinksJson.image.childrenReference.raw'
  | 'childrenLinksJson.image.childrenReference.series'
  | 'childrenLinksJson.image.childrenReference.title'
  | 'childrenLinksJson.image.childrenReference.url'
  | 'childrenLinksJson.image.childrenReference.volume'
  | 'childrenLinksJson.image.childrenReference.year'
  | 'childrenLinksJson.image.childrenSubjectsJson'
  | 'childrenLinksJson.image.childrenSubjectsJson.children'
  | 'childrenLinksJson.image.childrenSubjectsJson.id'
  | 'childrenLinksJson.image.childrenSubjectsJson.institution'
  | 'childrenLinksJson.image.childrenSubjectsJson.semester'
  | 'childrenLinksJson.image.childrenSubjectsJson.subjects'
  | 'childrenLinksJson.image.children.children'
  | 'childrenLinksJson.image.children.id'
  | 'childrenLinksJson.image.ctime'
  | 'childrenLinksJson.image.ctimeMs'
  | 'childrenLinksJson.image.dev'
  | 'childrenLinksJson.image.dir'
  | 'childrenLinksJson.image.ext'
  | 'childrenLinksJson.image.extension'
  | 'childrenLinksJson.image.gid'
  | 'childrenLinksJson.image.id'
  | 'childrenLinksJson.image.ino'
  | 'childrenLinksJson.image.internal.content'
  | 'childrenLinksJson.image.internal.contentDigest'
  | 'childrenLinksJson.image.internal.description'
  | 'childrenLinksJson.image.internal.fieldOwners'
  | 'childrenLinksJson.image.internal.ignoreType'
  | 'childrenLinksJson.image.internal.mediaType'
  | 'childrenLinksJson.image.internal.owner'
  | 'childrenLinksJson.image.internal.type'
  | 'childrenLinksJson.image.mode'
  | 'childrenLinksJson.image.modifiedTime'
  | 'childrenLinksJson.image.mtime'
  | 'childrenLinksJson.image.mtimeMs'
  | 'childrenLinksJson.image.name'
  | 'childrenLinksJson.image.nlink'
  | 'childrenLinksJson.image.parent.children'
  | 'childrenLinksJson.image.parent.id'
  | 'childrenLinksJson.image.prettySize'
  | 'childrenLinksJson.image.publicURL'
  | 'childrenLinksJson.image.rdev'
  | 'childrenLinksJson.image.relativeDirectory'
  | 'childrenLinksJson.image.relativePath'
  | 'childrenLinksJson.image.root'
  | 'childrenLinksJson.image.size'
  | 'childrenLinksJson.image.sourceInstanceName'
  | 'childrenLinksJson.image.uid'
  | 'childrenLinksJson.internal.content'
  | 'childrenLinksJson.internal.contentDigest'
  | 'childrenLinksJson.internal.description'
  | 'childrenLinksJson.internal.fieldOwners'
  | 'childrenLinksJson.internal.ignoreType'
  | 'childrenLinksJson.internal.mediaType'
  | 'childrenLinksJson.internal.owner'
  | 'childrenLinksJson.internal.type'
  | 'childrenLinksJson.lang'
  | 'childrenLinksJson.link'
  | 'childrenLinksJson.parent.children'
  | 'childrenLinksJson.parent.children.children'
  | 'childrenLinksJson.parent.children.id'
  | 'childrenLinksJson.parent.id'
  | 'childrenLinksJson.parent.internal.content'
  | 'childrenLinksJson.parent.internal.contentDigest'
  | 'childrenLinksJson.parent.internal.description'
  | 'childrenLinksJson.parent.internal.fieldOwners'
  | 'childrenLinksJson.parent.internal.ignoreType'
  | 'childrenLinksJson.parent.internal.mediaType'
  | 'childrenLinksJson.parent.internal.owner'
  | 'childrenLinksJson.parent.internal.type'
  | 'childrenLinksJson.parent.parent.children'
  | 'childrenLinksJson.parent.parent.id'
  | 'childrenLinksJson.publishDate'
  | 'childrenLinksJson.tags'
  | 'childrenLinksJson.title'
  | 'childrenLinksJson.type'
  | 'childrenMdx'
  | 'childrenMdx.body'
  | 'childrenMdx.children'
  | 'childrenMdx.children.children'
  | 'childrenMdx.children.children.children'
  | 'childrenMdx.children.children.id'
  | 'childrenMdx.children.id'
  | 'childrenMdx.children.internal.content'
  | 'childrenMdx.children.internal.contentDigest'
  | 'childrenMdx.children.internal.description'
  | 'childrenMdx.children.internal.fieldOwners'
  | 'childrenMdx.children.internal.ignoreType'
  | 'childrenMdx.children.internal.mediaType'
  | 'childrenMdx.children.internal.owner'
  | 'childrenMdx.children.internal.type'
  | 'childrenMdx.children.parent.children'
  | 'childrenMdx.children.parent.id'
  | 'childrenMdx.excerpt'
  | 'childrenMdx.fields.isDefault'
  | 'childrenMdx.fields.locale'
  | 'childrenMdx.fileAbsolutePath'
  | 'childrenMdx.frontmatter.comments'
  | 'childrenMdx.frontmatter.cover.absolutePath'
  | 'childrenMdx.frontmatter.cover.accessTime'
  | 'childrenMdx.frontmatter.cover.atime'
  | 'childrenMdx.frontmatter.cover.atimeMs'
  | 'childrenMdx.frontmatter.cover.base'
  | 'childrenMdx.frontmatter.cover.birthTime'
  | 'childrenMdx.frontmatter.cover.birthtime'
  | 'childrenMdx.frontmatter.cover.birthtimeMs'
  | 'childrenMdx.frontmatter.cover.blksize'
  | 'childrenMdx.frontmatter.cover.blocks'
  | 'childrenMdx.frontmatter.cover.changeTime'
  | 'childrenMdx.frontmatter.cover.children'
  | 'childrenMdx.frontmatter.cover.childrenEnJson'
  | 'childrenMdx.frontmatter.cover.childrenImageSharp'
  | 'childrenMdx.frontmatter.cover.childrenLinksJson'
  | 'childrenMdx.frontmatter.cover.childrenMdx'
  | 'childrenMdx.frontmatter.cover.childrenProjectsJson'
  | 'childrenMdx.frontmatter.cover.childrenPtJson'
  | 'childrenMdx.frontmatter.cover.childrenReference'
  | 'childrenMdx.frontmatter.cover.childrenSubjectsJson'
  | 'childrenMdx.frontmatter.cover.ctime'
  | 'childrenMdx.frontmatter.cover.ctimeMs'
  | 'childrenMdx.frontmatter.cover.dev'
  | 'childrenMdx.frontmatter.cover.dir'
  | 'childrenMdx.frontmatter.cover.ext'
  | 'childrenMdx.frontmatter.cover.extension'
  | 'childrenMdx.frontmatter.cover.gid'
  | 'childrenMdx.frontmatter.cover.id'
  | 'childrenMdx.frontmatter.cover.ino'
  | 'childrenMdx.frontmatter.cover.mode'
  | 'childrenMdx.frontmatter.cover.modifiedTime'
  | 'childrenMdx.frontmatter.cover.mtime'
  | 'childrenMdx.frontmatter.cover.mtimeMs'
  | 'childrenMdx.frontmatter.cover.name'
  | 'childrenMdx.frontmatter.cover.nlink'
  | 'childrenMdx.frontmatter.cover.prettySize'
  | 'childrenMdx.frontmatter.cover.publicURL'
  | 'childrenMdx.frontmatter.cover.rdev'
  | 'childrenMdx.frontmatter.cover.relativeDirectory'
  | 'childrenMdx.frontmatter.cover.relativePath'
  | 'childrenMdx.frontmatter.cover.root'
  | 'childrenMdx.frontmatter.cover.size'
  | 'childrenMdx.frontmatter.cover.sourceInstanceName'
  | 'childrenMdx.frontmatter.cover.uid'
  | 'childrenMdx.frontmatter.date'
  | 'childrenMdx.frontmatter.description'
  | 'childrenMdx.frontmatter.month'
  | 'childrenMdx.frontmatter.slug'
  | 'childrenMdx.frontmatter.tags'
  | 'childrenMdx.frontmatter.title'
  | 'childrenMdx.frontmatter.year'
  | 'childrenMdx.gatsbyPath'
  | 'childrenMdx.headings'
  | 'childrenMdx.headings.depth'
  | 'childrenMdx.headings.value'
  | 'childrenMdx.html'
  | 'childrenMdx.id'
  | 'childrenMdx.internal.content'
  | 'childrenMdx.internal.contentDigest'
  | 'childrenMdx.internal.description'
  | 'childrenMdx.internal.fieldOwners'
  | 'childrenMdx.internal.ignoreType'
  | 'childrenMdx.internal.mediaType'
  | 'childrenMdx.internal.owner'
  | 'childrenMdx.internal.type'
  | 'childrenMdx.mdxAST'
  | 'childrenMdx.parent.children'
  | 'childrenMdx.parent.children.children'
  | 'childrenMdx.parent.children.id'
  | 'childrenMdx.parent.id'
  | 'childrenMdx.parent.internal.content'
  | 'childrenMdx.parent.internal.contentDigest'
  | 'childrenMdx.parent.internal.description'
  | 'childrenMdx.parent.internal.fieldOwners'
  | 'childrenMdx.parent.internal.ignoreType'
  | 'childrenMdx.parent.internal.mediaType'
  | 'childrenMdx.parent.internal.owner'
  | 'childrenMdx.parent.internal.type'
  | 'childrenMdx.parent.parent.children'
  | 'childrenMdx.parent.parent.id'
  | 'childrenMdx.rawBody'
  | 'childrenMdx.slug'
  | 'childrenMdx.tableOfContents'
  | 'childrenMdx.timeToRead'
  | 'childrenMdx.wordCount.paragraphs'
  | 'childrenMdx.wordCount.sentences'
  | 'childrenMdx.wordCount.words'
  | 'childrenProjectsJson'
  | 'childrenProjectsJson.children'
  | 'childrenProjectsJson.children.children'
  | 'childrenProjectsJson.children.children.children'
  | 'childrenProjectsJson.children.children.id'
  | 'childrenProjectsJson.children.id'
  | 'childrenProjectsJson.children.internal.content'
  | 'childrenProjectsJson.children.internal.contentDigest'
  | 'childrenProjectsJson.children.internal.description'
  | 'childrenProjectsJson.children.internal.fieldOwners'
  | 'childrenProjectsJson.children.internal.ignoreType'
  | 'childrenProjectsJson.children.internal.mediaType'
  | 'childrenProjectsJson.children.internal.owner'
  | 'childrenProjectsJson.children.internal.type'
  | 'childrenProjectsJson.children.parent.children'
  | 'childrenProjectsJson.children.parent.id'
  | 'childrenProjectsJson.date'
  | 'childrenProjectsJson.description'
  | 'childrenProjectsJson.id'
  | 'childrenProjectsJson.image.absolutePath'
  | 'childrenProjectsJson.image.accessTime'
  | 'childrenProjectsJson.image.atime'
  | 'childrenProjectsJson.image.atimeMs'
  | 'childrenProjectsJson.image.base'
  | 'childrenProjectsJson.image.birthTime'
  | 'childrenProjectsJson.image.birthtime'
  | 'childrenProjectsJson.image.birthtimeMs'
  | 'childrenProjectsJson.image.blksize'
  | 'childrenProjectsJson.image.blocks'
  | 'childrenProjectsJson.image.changeTime'
  | 'childrenProjectsJson.image.childEnJson.children'
  | 'childrenProjectsJson.image.childEnJson.id'
  | 'childrenProjectsJson.image.childImageSharp.children'
  | 'childrenProjectsJson.image.childImageSharp.gatsbyImageData'
  | 'childrenProjectsJson.image.childImageSharp.id'
  | 'childrenProjectsJson.image.childLinksJson.children'
  | 'childrenProjectsJson.image.childLinksJson.description'
  | 'childrenProjectsJson.image.childLinksJson.id'
  | 'childrenProjectsJson.image.childLinksJson.lang'
  | 'childrenProjectsJson.image.childLinksJson.link'
  | 'childrenProjectsJson.image.childLinksJson.publishDate'
  | 'childrenProjectsJson.image.childLinksJson.tags'
  | 'childrenProjectsJson.image.childLinksJson.title'
  | 'childrenProjectsJson.image.childLinksJson.type'
  | 'childrenProjectsJson.image.childMdx.body'
  | 'childrenProjectsJson.image.childMdx.children'
  | 'childrenProjectsJson.image.childMdx.excerpt'
  | 'childrenProjectsJson.image.childMdx.fileAbsolutePath'
  | 'childrenProjectsJson.image.childMdx.gatsbyPath'
  | 'childrenProjectsJson.image.childMdx.headings'
  | 'childrenProjectsJson.image.childMdx.html'
  | 'childrenProjectsJson.image.childMdx.id'
  | 'childrenProjectsJson.image.childMdx.mdxAST'
  | 'childrenProjectsJson.image.childMdx.rawBody'
  | 'childrenProjectsJson.image.childMdx.slug'
  | 'childrenProjectsJson.image.childMdx.tableOfContents'
  | 'childrenProjectsJson.image.childMdx.timeToRead'
  | 'childrenProjectsJson.image.childProjectsJson.children'
  | 'childrenProjectsJson.image.childProjectsJson.date'
  | 'childrenProjectsJson.image.childProjectsJson.description'
  | 'childrenProjectsJson.image.childProjectsJson.id'
  | 'childrenProjectsJson.image.childProjectsJson.lang'
  | 'childrenProjectsJson.image.childProjectsJson.stack'
  | 'childrenProjectsJson.image.childProjectsJson.title'
  | 'childrenProjectsJson.image.childProjectsJson.url'
  | 'childrenProjectsJson.image.childPtJson.children'
  | 'childrenProjectsJson.image.childPtJson.id'
  | 'childrenProjectsJson.image.childReference.abstract'
  | 'childrenProjectsJson.image.childReference.address'
  | 'childrenProjectsJson.image.childReference.articleno'
  | 'childrenProjectsJson.image.childReference.author'
  | 'childrenProjectsJson.image.childReference.authors'
  | 'childrenProjectsJson.image.childReference.booktitle'
  | 'childrenProjectsJson.image.childReference.children'
  | 'childrenProjectsJson.image.childReference.date'
  | 'childrenProjectsJson.image.childReference.doi'
  | 'childrenProjectsJson.image.childReference.entry_type'
  | 'childrenProjectsJson.image.childReference.id'
  | 'childrenProjectsJson.image.childReference.isbn'
  | 'childrenProjectsJson.image.childReference.issn'
  | 'childrenProjectsJson.image.childReference.journal'
  | 'childrenProjectsJson.image.childReference.key'
  | 'childrenProjectsJson.image.childReference.keywords'
  | 'childrenProjectsJson.image.childReference.location'
  | 'childrenProjectsJson.image.childReference.month'
  | 'childrenProjectsJson.image.childReference.number'
  | 'childrenProjectsJson.image.childReference.numpages'
  | 'childrenProjectsJson.image.childReference.pages'
  | 'childrenProjectsJson.image.childReference.place'
  | 'childrenProjectsJson.image.childReference.publisher'
  | 'childrenProjectsJson.image.childReference.raw'
  | 'childrenProjectsJson.image.childReference.series'
  | 'childrenProjectsJson.image.childReference.title'
  | 'childrenProjectsJson.image.childReference.url'
  | 'childrenProjectsJson.image.childReference.volume'
  | 'childrenProjectsJson.image.childReference.year'
  | 'childrenProjectsJson.image.childSubjectsJson.children'
  | 'childrenProjectsJson.image.childSubjectsJson.id'
  | 'childrenProjectsJson.image.childSubjectsJson.institution'
  | 'childrenProjectsJson.image.childSubjectsJson.semester'
  | 'childrenProjectsJson.image.childSubjectsJson.subjects'
  | 'childrenProjectsJson.image.children'
  | 'childrenProjectsJson.image.childrenEnJson'
  | 'childrenProjectsJson.image.childrenEnJson.children'
  | 'childrenProjectsJson.image.childrenEnJson.id'
  | 'childrenProjectsJson.image.childrenImageSharp'
  | 'childrenProjectsJson.image.childrenImageSharp.children'
  | 'childrenProjectsJson.image.childrenImageSharp.gatsbyImageData'
  | 'childrenProjectsJson.image.childrenImageSharp.id'
  | 'childrenProjectsJson.image.childrenLinksJson'
  | 'childrenProjectsJson.image.childrenLinksJson.children'
  | 'childrenProjectsJson.image.childrenLinksJson.description'
  | 'childrenProjectsJson.image.childrenLinksJson.id'
  | 'childrenProjectsJson.image.childrenLinksJson.lang'
  | 'childrenProjectsJson.image.childrenLinksJson.link'
  | 'childrenProjectsJson.image.childrenLinksJson.publishDate'
  | 'childrenProjectsJson.image.childrenLinksJson.tags'
  | 'childrenProjectsJson.image.childrenLinksJson.title'
  | 'childrenProjectsJson.image.childrenLinksJson.type'
  | 'childrenProjectsJson.image.childrenMdx'
  | 'childrenProjectsJson.image.childrenMdx.body'
  | 'childrenProjectsJson.image.childrenMdx.children'
  | 'childrenProjectsJson.image.childrenMdx.excerpt'
  | 'childrenProjectsJson.image.childrenMdx.fileAbsolutePath'
  | 'childrenProjectsJson.image.childrenMdx.gatsbyPath'
  | 'childrenProjectsJson.image.childrenMdx.headings'
  | 'childrenProjectsJson.image.childrenMdx.html'
  | 'childrenProjectsJson.image.childrenMdx.id'
  | 'childrenProjectsJson.image.childrenMdx.mdxAST'
  | 'childrenProjectsJson.image.childrenMdx.rawBody'
  | 'childrenProjectsJson.image.childrenMdx.slug'
  | 'childrenProjectsJson.image.childrenMdx.tableOfContents'
  | 'childrenProjectsJson.image.childrenMdx.timeToRead'
  | 'childrenProjectsJson.image.childrenProjectsJson'
  | 'childrenProjectsJson.image.childrenProjectsJson.children'
  | 'childrenProjectsJson.image.childrenProjectsJson.date'
  | 'childrenProjectsJson.image.childrenProjectsJson.description'
  | 'childrenProjectsJson.image.childrenProjectsJson.id'
  | 'childrenProjectsJson.image.childrenProjectsJson.lang'
  | 'childrenProjectsJson.image.childrenProjectsJson.stack'
  | 'childrenProjectsJson.image.childrenProjectsJson.title'
  | 'childrenProjectsJson.image.childrenProjectsJson.url'
  | 'childrenProjectsJson.image.childrenPtJson'
  | 'childrenProjectsJson.image.childrenPtJson.children'
  | 'childrenProjectsJson.image.childrenPtJson.id'
  | 'childrenProjectsJson.image.childrenReference'
  | 'childrenProjectsJson.image.childrenReference.abstract'
  | 'childrenProjectsJson.image.childrenReference.address'
  | 'childrenProjectsJson.image.childrenReference.articleno'
  | 'childrenProjectsJson.image.childrenReference.author'
  | 'childrenProjectsJson.image.childrenReference.authors'
  | 'childrenProjectsJson.image.childrenReference.booktitle'
  | 'childrenProjectsJson.image.childrenReference.children'
  | 'childrenProjectsJson.image.childrenReference.date'
  | 'childrenProjectsJson.image.childrenReference.doi'
  | 'childrenProjectsJson.image.childrenReference.entry_type'
  | 'childrenProjectsJson.image.childrenReference.id'
  | 'childrenProjectsJson.image.childrenReference.isbn'
  | 'childrenProjectsJson.image.childrenReference.issn'
  | 'childrenProjectsJson.image.childrenReference.journal'
  | 'childrenProjectsJson.image.childrenReference.key'
  | 'childrenProjectsJson.image.childrenReference.keywords'
  | 'childrenProjectsJson.image.childrenReference.location'
  | 'childrenProjectsJson.image.childrenReference.month'
  | 'childrenProjectsJson.image.childrenReference.number'
  | 'childrenProjectsJson.image.childrenReference.numpages'
  | 'childrenProjectsJson.image.childrenReference.pages'
  | 'childrenProjectsJson.image.childrenReference.place'
  | 'childrenProjectsJson.image.childrenReference.publisher'
  | 'childrenProjectsJson.image.childrenReference.raw'
  | 'childrenProjectsJson.image.childrenReference.series'
  | 'childrenProjectsJson.image.childrenReference.title'
  | 'childrenProjectsJson.image.childrenReference.url'
  | 'childrenProjectsJson.image.childrenReference.volume'
  | 'childrenProjectsJson.image.childrenReference.year'
  | 'childrenProjectsJson.image.childrenSubjectsJson'
  | 'childrenProjectsJson.image.childrenSubjectsJson.children'
  | 'childrenProjectsJson.image.childrenSubjectsJson.id'
  | 'childrenProjectsJson.image.childrenSubjectsJson.institution'
  | 'childrenProjectsJson.image.childrenSubjectsJson.semester'
  | 'childrenProjectsJson.image.childrenSubjectsJson.subjects'
  | 'childrenProjectsJson.image.children.children'
  | 'childrenProjectsJson.image.children.id'
  | 'childrenProjectsJson.image.ctime'
  | 'childrenProjectsJson.image.ctimeMs'
  | 'childrenProjectsJson.image.dev'
  | 'childrenProjectsJson.image.dir'
  | 'childrenProjectsJson.image.ext'
  | 'childrenProjectsJson.image.extension'
  | 'childrenProjectsJson.image.gid'
  | 'childrenProjectsJson.image.id'
  | 'childrenProjectsJson.image.ino'
  | 'childrenProjectsJson.image.internal.content'
  | 'childrenProjectsJson.image.internal.contentDigest'
  | 'childrenProjectsJson.image.internal.description'
  | 'childrenProjectsJson.image.internal.fieldOwners'
  | 'childrenProjectsJson.image.internal.ignoreType'
  | 'childrenProjectsJson.image.internal.mediaType'
  | 'childrenProjectsJson.image.internal.owner'
  | 'childrenProjectsJson.image.internal.type'
  | 'childrenProjectsJson.image.mode'
  | 'childrenProjectsJson.image.modifiedTime'
  | 'childrenProjectsJson.image.mtime'
  | 'childrenProjectsJson.image.mtimeMs'
  | 'childrenProjectsJson.image.name'
  | 'childrenProjectsJson.image.nlink'
  | 'childrenProjectsJson.image.parent.children'
  | 'childrenProjectsJson.image.parent.id'
  | 'childrenProjectsJson.image.prettySize'
  | 'childrenProjectsJson.image.publicURL'
  | 'childrenProjectsJson.image.rdev'
  | 'childrenProjectsJson.image.relativeDirectory'
  | 'childrenProjectsJson.image.relativePath'
  | 'childrenProjectsJson.image.root'
  | 'childrenProjectsJson.image.size'
  | 'childrenProjectsJson.image.sourceInstanceName'
  | 'childrenProjectsJson.image.uid'
  | 'childrenProjectsJson.internal.content'
  | 'childrenProjectsJson.internal.contentDigest'
  | 'childrenProjectsJson.internal.description'
  | 'childrenProjectsJson.internal.fieldOwners'
  | 'childrenProjectsJson.internal.ignoreType'
  | 'childrenProjectsJson.internal.mediaType'
  | 'childrenProjectsJson.internal.owner'
  | 'childrenProjectsJson.internal.type'
  | 'childrenProjectsJson.lang'
  | 'childrenProjectsJson.parent.children'
  | 'childrenProjectsJson.parent.children.children'
  | 'childrenProjectsJson.parent.children.id'
  | 'childrenProjectsJson.parent.id'
  | 'childrenProjectsJson.parent.internal.content'
  | 'childrenProjectsJson.parent.internal.contentDigest'
  | 'childrenProjectsJson.parent.internal.description'
  | 'childrenProjectsJson.parent.internal.fieldOwners'
  | 'childrenProjectsJson.parent.internal.ignoreType'
  | 'childrenProjectsJson.parent.internal.mediaType'
  | 'childrenProjectsJson.parent.internal.owner'
  | 'childrenProjectsJson.parent.internal.type'
  | 'childrenProjectsJson.parent.parent.children'
  | 'childrenProjectsJson.parent.parent.id'
  | 'childrenProjectsJson.stack'
  | 'childrenProjectsJson.title'
  | 'childrenProjectsJson.url'
  | 'childrenPtJson'
  | 'childrenPtJson.academic.authors'
  | 'childrenPtJson.academic.copied'
  | 'childrenPtJson.academic.copycitation'
  | 'childrenPtJson.academic.researching.groups'
  | 'childrenPtJson.academic.researching.intro'
  | 'childrenPtJson.academic.researching.list'
  | 'childrenPtJson.academic.researching.title'
  | 'childrenPtJson.academic.teaching.intro'
  | 'childrenPtJson.children'
  | 'childrenPtJson.children.children'
  | 'childrenPtJson.children.children.children'
  | 'childrenPtJson.children.children.id'
  | 'childrenPtJson.children.id'
  | 'childrenPtJson.children.internal.content'
  | 'childrenPtJson.children.internal.contentDigest'
  | 'childrenPtJson.children.internal.description'
  | 'childrenPtJson.children.internal.fieldOwners'
  | 'childrenPtJson.children.internal.ignoreType'
  | 'childrenPtJson.children.internal.mediaType'
  | 'childrenPtJson.children.internal.owner'
  | 'childrenPtJson.children.internal.type'
  | 'childrenPtJson.children.parent.children'
  | 'childrenPtJson.children.parent.id'
  | 'childrenPtJson.id'
  | 'childrenPtJson.index.ifpb'
  | 'childrenPtJson.index.latest'
  | 'childrenPtJson.index.present'
  | 'childrenPtJson.index.text.personal'
  | 'childrenPtJson.index.text.professional'
  | 'childrenPtJson.index.titles'
  | 'childrenPtJson.internal.content'
  | 'childrenPtJson.internal.contentDigest'
  | 'childrenPtJson.internal.description'
  | 'childrenPtJson.internal.fieldOwners'
  | 'childrenPtJson.internal.ignoreType'
  | 'childrenPtJson.internal.mediaType'
  | 'childrenPtJson.internal.owner'
  | 'childrenPtJson.internal.type'
  | 'childrenPtJson.labs.intro'
  | 'childrenPtJson.labs.stack'
  | 'childrenPtJson.links.intro'
  | 'childrenPtJson.menu.about'
  | 'childrenPtJson.menu.academic'
  | 'childrenPtJson.menu.blog'
  | 'childrenPtJson.menu.cv'
  | 'childrenPtJson.menu.labs'
  | 'childrenPtJson.menu.links'
  | 'childrenPtJson.parent.children'
  | 'childrenPtJson.parent.children.children'
  | 'childrenPtJson.parent.children.id'
  | 'childrenPtJson.parent.id'
  | 'childrenPtJson.parent.internal.content'
  | 'childrenPtJson.parent.internal.contentDigest'
  | 'childrenPtJson.parent.internal.description'
  | 'childrenPtJson.parent.internal.fieldOwners'
  | 'childrenPtJson.parent.internal.ignoreType'
  | 'childrenPtJson.parent.internal.mediaType'
  | 'childrenPtJson.parent.internal.owner'
  | 'childrenPtJson.parent.internal.type'
  | 'childrenPtJson.parent.parent.children'
  | 'childrenPtJson.parent.parent.id'
  | 'childrenReference'
  | 'childrenReference.abstract'
  | 'childrenReference.address'
  | 'childrenReference.articleno'
  | 'childrenReference.author'
  | 'childrenReference.authors'
  | 'childrenReference.booktitle'
  | 'childrenReference.children'
  | 'childrenReference.children.children'
  | 'childrenReference.children.children.children'
  | 'childrenReference.children.children.id'
  | 'childrenReference.children.id'
  | 'childrenReference.children.internal.content'
  | 'childrenReference.children.internal.contentDigest'
  | 'childrenReference.children.internal.description'
  | 'childrenReference.children.internal.fieldOwners'
  | 'childrenReference.children.internal.ignoreType'
  | 'childrenReference.children.internal.mediaType'
  | 'childrenReference.children.internal.owner'
  | 'childrenReference.children.internal.type'
  | 'childrenReference.children.parent.children'
  | 'childrenReference.children.parent.id'
  | 'childrenReference.date'
  | 'childrenReference.doi'
  | 'childrenReference.entry_type'
  | 'childrenReference.id'
  | 'childrenReference.internal.content'
  | 'childrenReference.internal.contentDigest'
  | 'childrenReference.internal.description'
  | 'childrenReference.internal.fieldOwners'
  | 'childrenReference.internal.ignoreType'
  | 'childrenReference.internal.mediaType'
  | 'childrenReference.internal.owner'
  | 'childrenReference.internal.type'
  | 'childrenReference.isbn'
  | 'childrenReference.issn'
  | 'childrenReference.journal'
  | 'childrenReference.key'
  | 'childrenReference.keywords'
  | 'childrenReference.location'
  | 'childrenReference.month'
  | 'childrenReference.number'
  | 'childrenReference.numpages'
  | 'childrenReference.pages'
  | 'childrenReference.parent.children'
  | 'childrenReference.parent.children.children'
  | 'childrenReference.parent.children.id'
  | 'childrenReference.parent.id'
  | 'childrenReference.parent.internal.content'
  | 'childrenReference.parent.internal.contentDigest'
  | 'childrenReference.parent.internal.description'
  | 'childrenReference.parent.internal.fieldOwners'
  | 'childrenReference.parent.internal.ignoreType'
  | 'childrenReference.parent.internal.mediaType'
  | 'childrenReference.parent.internal.owner'
  | 'childrenReference.parent.internal.type'
  | 'childrenReference.parent.parent.children'
  | 'childrenReference.parent.parent.id'
  | 'childrenReference.place'
  | 'childrenReference.publisher'
  | 'childrenReference.raw'
  | 'childrenReference.series'
  | 'childrenReference.title'
  | 'childrenReference.url'
  | 'childrenReference.volume'
  | 'childrenReference.year'
  | 'childrenSubjectsJson'
  | 'childrenSubjectsJson.children'
  | 'childrenSubjectsJson.children.children'
  | 'childrenSubjectsJson.children.children.children'
  | 'childrenSubjectsJson.children.children.id'
  | 'childrenSubjectsJson.children.id'
  | 'childrenSubjectsJson.children.internal.content'
  | 'childrenSubjectsJson.children.internal.contentDigest'
  | 'childrenSubjectsJson.children.internal.description'
  | 'childrenSubjectsJson.children.internal.fieldOwners'
  | 'childrenSubjectsJson.children.internal.ignoreType'
  | 'childrenSubjectsJson.children.internal.mediaType'
  | 'childrenSubjectsJson.children.internal.owner'
  | 'childrenSubjectsJson.children.internal.type'
  | 'childrenSubjectsJson.children.parent.children'
  | 'childrenSubjectsJson.children.parent.id'
  | 'childrenSubjectsJson.id'
  | 'childrenSubjectsJson.institution'
  | 'childrenSubjectsJson.internal.content'
  | 'childrenSubjectsJson.internal.contentDigest'
  | 'childrenSubjectsJson.internal.description'
  | 'childrenSubjectsJson.internal.fieldOwners'
  | 'childrenSubjectsJson.internal.ignoreType'
  | 'childrenSubjectsJson.internal.mediaType'
  | 'childrenSubjectsJson.internal.owner'
  | 'childrenSubjectsJson.internal.type'
  | 'childrenSubjectsJson.parent.children'
  | 'childrenSubjectsJson.parent.children.children'
  | 'childrenSubjectsJson.parent.children.id'
  | 'childrenSubjectsJson.parent.id'
  | 'childrenSubjectsJson.parent.internal.content'
  | 'childrenSubjectsJson.parent.internal.contentDigest'
  | 'childrenSubjectsJson.parent.internal.description'
  | 'childrenSubjectsJson.parent.internal.fieldOwners'
  | 'childrenSubjectsJson.parent.internal.ignoreType'
  | 'childrenSubjectsJson.parent.internal.mediaType'
  | 'childrenSubjectsJson.parent.internal.owner'
  | 'childrenSubjectsJson.parent.internal.type'
  | 'childrenSubjectsJson.parent.parent.children'
  | 'childrenSubjectsJson.parent.parent.id'
  | 'childrenSubjectsJson.semester'
  | 'childrenSubjectsJson.subjects'
  | 'childrenSubjectsJson.subjects.link'
  | 'childrenSubjectsJson.subjects.name'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'publicURL'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childEnJson: InputMaybe<EnJsonFilterInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly childLinksJson: InputMaybe<LinksJsonFilterInput>;
  readonly childMdx: InputMaybe<MdxFilterInput>;
  readonly childProjectsJson: InputMaybe<ProjectsJsonFilterInput>;
  readonly childPtJson: InputMaybe<PtJsonFilterInput>;
  readonly childReference: InputMaybe<ReferenceFilterInput>;
  readonly childSubjectsJson: InputMaybe<SubjectsJsonFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenEnJson: InputMaybe<EnJsonFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly childrenLinksJson: InputMaybe<LinksJsonFilterListInput>;
  readonly childrenMdx: InputMaybe<MdxFilterListInput>;
  readonly childrenProjectsJson: InputMaybe<ProjectsJsonFilterListInput>;
  readonly childrenPtJson: InputMaybe<PtJsonFilterListInput>;
  readonly childrenReference: InputMaybe<ReferenceFilterListInput>;
  readonly childrenSubjectsJson: InputMaybe<SubjectsJsonFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly publicURL: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type HeadingsMdx =
  | 'h1'
  | 'h2'
  | 'h3'
  | 'h4'
  | 'h5'
  | 'h6';

type ImageCropFocus =
  | 17
  | 0
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | ''
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

type LinksJson = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<File>;
  readonly internal: Internal;
  readonly lang: Maybe<Scalars['String']>;
  readonly link: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly publishDate: Maybe<Scalars['Date']>;
  readonly tags: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly title: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};


type LinksJson_publishDateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type LinksJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<LinksJsonEdge>;
  readonly group: ReadonlyArray<LinksJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<LinksJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type LinksJsonConnection_distinctArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonConnection_groupArgs = {
  field: LinksJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type LinksJsonConnection_maxArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonConnection_minArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonConnection_sumArgs = {
  field: LinksJsonFieldsEnum;
};

type LinksJsonEdge = {
  readonly next: Maybe<LinksJson>;
  readonly node: LinksJson;
  readonly previous: Maybe<LinksJson>;
};

type LinksJsonFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'id'
  | 'image.absolutePath'
  | 'image.accessTime'
  | 'image.atime'
  | 'image.atimeMs'
  | 'image.base'
  | 'image.birthTime'
  | 'image.birthtime'
  | 'image.birthtimeMs'
  | 'image.blksize'
  | 'image.blocks'
  | 'image.changeTime'
  | 'image.childEnJson.academic.authors'
  | 'image.childEnJson.academic.copied'
  | 'image.childEnJson.academic.copycitation'
  | 'image.childEnJson.children'
  | 'image.childEnJson.children.children'
  | 'image.childEnJson.children.id'
  | 'image.childEnJson.id'
  | 'image.childEnJson.index.ifpb'
  | 'image.childEnJson.index.latest'
  | 'image.childEnJson.index.present'
  | 'image.childEnJson.index.titles'
  | 'image.childEnJson.internal.content'
  | 'image.childEnJson.internal.contentDigest'
  | 'image.childEnJson.internal.description'
  | 'image.childEnJson.internal.fieldOwners'
  | 'image.childEnJson.internal.ignoreType'
  | 'image.childEnJson.internal.mediaType'
  | 'image.childEnJson.internal.owner'
  | 'image.childEnJson.internal.type'
  | 'image.childEnJson.labs.intro'
  | 'image.childEnJson.labs.stack'
  | 'image.childEnJson.links.intro'
  | 'image.childEnJson.menu.about'
  | 'image.childEnJson.menu.academic'
  | 'image.childEnJson.menu.blog'
  | 'image.childEnJson.menu.cv'
  | 'image.childEnJson.menu.labs'
  | 'image.childEnJson.menu.links'
  | 'image.childEnJson.parent.children'
  | 'image.childEnJson.parent.id'
  | 'image.childImageSharp.children'
  | 'image.childImageSharp.children.children'
  | 'image.childImageSharp.children.id'
  | 'image.childImageSharp.fixed.aspectRatio'
  | 'image.childImageSharp.fixed.base64'
  | 'image.childImageSharp.fixed.height'
  | 'image.childImageSharp.fixed.originalName'
  | 'image.childImageSharp.fixed.src'
  | 'image.childImageSharp.fixed.srcSet'
  | 'image.childImageSharp.fixed.srcSetWebp'
  | 'image.childImageSharp.fixed.srcWebp'
  | 'image.childImageSharp.fixed.tracedSVG'
  | 'image.childImageSharp.fixed.width'
  | 'image.childImageSharp.fluid.aspectRatio'
  | 'image.childImageSharp.fluid.base64'
  | 'image.childImageSharp.fluid.originalImg'
  | 'image.childImageSharp.fluid.originalName'
  | 'image.childImageSharp.fluid.presentationHeight'
  | 'image.childImageSharp.fluid.presentationWidth'
  | 'image.childImageSharp.fluid.sizes'
  | 'image.childImageSharp.fluid.src'
  | 'image.childImageSharp.fluid.srcSet'
  | 'image.childImageSharp.fluid.srcSetWebp'
  | 'image.childImageSharp.fluid.srcWebp'
  | 'image.childImageSharp.fluid.tracedSVG'
  | 'image.childImageSharp.gatsbyImageData'
  | 'image.childImageSharp.id'
  | 'image.childImageSharp.internal.content'
  | 'image.childImageSharp.internal.contentDigest'
  | 'image.childImageSharp.internal.description'
  | 'image.childImageSharp.internal.fieldOwners'
  | 'image.childImageSharp.internal.ignoreType'
  | 'image.childImageSharp.internal.mediaType'
  | 'image.childImageSharp.internal.owner'
  | 'image.childImageSharp.internal.type'
  | 'image.childImageSharp.original.height'
  | 'image.childImageSharp.original.src'
  | 'image.childImageSharp.original.width'
  | 'image.childImageSharp.parent.children'
  | 'image.childImageSharp.parent.id'
  | 'image.childImageSharp.resize.aspectRatio'
  | 'image.childImageSharp.resize.height'
  | 'image.childImageSharp.resize.originalName'
  | 'image.childImageSharp.resize.src'
  | 'image.childImageSharp.resize.tracedSVG'
  | 'image.childImageSharp.resize.width'
  | 'image.childLinksJson.children'
  | 'image.childLinksJson.children.children'
  | 'image.childLinksJson.children.id'
  | 'image.childLinksJson.description'
  | 'image.childLinksJson.id'
  | 'image.childLinksJson.image.absolutePath'
  | 'image.childLinksJson.image.accessTime'
  | 'image.childLinksJson.image.atime'
  | 'image.childLinksJson.image.atimeMs'
  | 'image.childLinksJson.image.base'
  | 'image.childLinksJson.image.birthTime'
  | 'image.childLinksJson.image.birthtime'
  | 'image.childLinksJson.image.birthtimeMs'
  | 'image.childLinksJson.image.blksize'
  | 'image.childLinksJson.image.blocks'
  | 'image.childLinksJson.image.changeTime'
  | 'image.childLinksJson.image.children'
  | 'image.childLinksJson.image.childrenEnJson'
  | 'image.childLinksJson.image.childrenImageSharp'
  | 'image.childLinksJson.image.childrenLinksJson'
  | 'image.childLinksJson.image.childrenMdx'
  | 'image.childLinksJson.image.childrenProjectsJson'
  | 'image.childLinksJson.image.childrenPtJson'
  | 'image.childLinksJson.image.childrenReference'
  | 'image.childLinksJson.image.childrenSubjectsJson'
  | 'image.childLinksJson.image.ctime'
  | 'image.childLinksJson.image.ctimeMs'
  | 'image.childLinksJson.image.dev'
  | 'image.childLinksJson.image.dir'
  | 'image.childLinksJson.image.ext'
  | 'image.childLinksJson.image.extension'
  | 'image.childLinksJson.image.gid'
  | 'image.childLinksJson.image.id'
  | 'image.childLinksJson.image.ino'
  | 'image.childLinksJson.image.mode'
  | 'image.childLinksJson.image.modifiedTime'
  | 'image.childLinksJson.image.mtime'
  | 'image.childLinksJson.image.mtimeMs'
  | 'image.childLinksJson.image.name'
  | 'image.childLinksJson.image.nlink'
  | 'image.childLinksJson.image.prettySize'
  | 'image.childLinksJson.image.publicURL'
  | 'image.childLinksJson.image.rdev'
  | 'image.childLinksJson.image.relativeDirectory'
  | 'image.childLinksJson.image.relativePath'
  | 'image.childLinksJson.image.root'
  | 'image.childLinksJson.image.size'
  | 'image.childLinksJson.image.sourceInstanceName'
  | 'image.childLinksJson.image.uid'
  | 'image.childLinksJson.internal.content'
  | 'image.childLinksJson.internal.contentDigest'
  | 'image.childLinksJson.internal.description'
  | 'image.childLinksJson.internal.fieldOwners'
  | 'image.childLinksJson.internal.ignoreType'
  | 'image.childLinksJson.internal.mediaType'
  | 'image.childLinksJson.internal.owner'
  | 'image.childLinksJson.internal.type'
  | 'image.childLinksJson.lang'
  | 'image.childLinksJson.link'
  | 'image.childLinksJson.parent.children'
  | 'image.childLinksJson.parent.id'
  | 'image.childLinksJson.publishDate'
  | 'image.childLinksJson.tags'
  | 'image.childLinksJson.title'
  | 'image.childLinksJson.type'
  | 'image.childMdx.body'
  | 'image.childMdx.children'
  | 'image.childMdx.children.children'
  | 'image.childMdx.children.id'
  | 'image.childMdx.excerpt'
  | 'image.childMdx.fields.isDefault'
  | 'image.childMdx.fields.locale'
  | 'image.childMdx.fileAbsolutePath'
  | 'image.childMdx.frontmatter.comments'
  | 'image.childMdx.frontmatter.date'
  | 'image.childMdx.frontmatter.description'
  | 'image.childMdx.frontmatter.month'
  | 'image.childMdx.frontmatter.slug'
  | 'image.childMdx.frontmatter.tags'
  | 'image.childMdx.frontmatter.title'
  | 'image.childMdx.frontmatter.year'
  | 'image.childMdx.gatsbyPath'
  | 'image.childMdx.headings'
  | 'image.childMdx.headings.depth'
  | 'image.childMdx.headings.value'
  | 'image.childMdx.html'
  | 'image.childMdx.id'
  | 'image.childMdx.internal.content'
  | 'image.childMdx.internal.contentDigest'
  | 'image.childMdx.internal.description'
  | 'image.childMdx.internal.fieldOwners'
  | 'image.childMdx.internal.ignoreType'
  | 'image.childMdx.internal.mediaType'
  | 'image.childMdx.internal.owner'
  | 'image.childMdx.internal.type'
  | 'image.childMdx.mdxAST'
  | 'image.childMdx.parent.children'
  | 'image.childMdx.parent.id'
  | 'image.childMdx.rawBody'
  | 'image.childMdx.slug'
  | 'image.childMdx.tableOfContents'
  | 'image.childMdx.timeToRead'
  | 'image.childMdx.wordCount.paragraphs'
  | 'image.childMdx.wordCount.sentences'
  | 'image.childMdx.wordCount.words'
  | 'image.childProjectsJson.children'
  | 'image.childProjectsJson.children.children'
  | 'image.childProjectsJson.children.id'
  | 'image.childProjectsJson.date'
  | 'image.childProjectsJson.description'
  | 'image.childProjectsJson.id'
  | 'image.childProjectsJson.image.absolutePath'
  | 'image.childProjectsJson.image.accessTime'
  | 'image.childProjectsJson.image.atime'
  | 'image.childProjectsJson.image.atimeMs'
  | 'image.childProjectsJson.image.base'
  | 'image.childProjectsJson.image.birthTime'
  | 'image.childProjectsJson.image.birthtime'
  | 'image.childProjectsJson.image.birthtimeMs'
  | 'image.childProjectsJson.image.blksize'
  | 'image.childProjectsJson.image.blocks'
  | 'image.childProjectsJson.image.changeTime'
  | 'image.childProjectsJson.image.children'
  | 'image.childProjectsJson.image.childrenEnJson'
  | 'image.childProjectsJson.image.childrenImageSharp'
  | 'image.childProjectsJson.image.childrenLinksJson'
  | 'image.childProjectsJson.image.childrenMdx'
  | 'image.childProjectsJson.image.childrenProjectsJson'
  | 'image.childProjectsJson.image.childrenPtJson'
  | 'image.childProjectsJson.image.childrenReference'
  | 'image.childProjectsJson.image.childrenSubjectsJson'
  | 'image.childProjectsJson.image.ctime'
  | 'image.childProjectsJson.image.ctimeMs'
  | 'image.childProjectsJson.image.dev'
  | 'image.childProjectsJson.image.dir'
  | 'image.childProjectsJson.image.ext'
  | 'image.childProjectsJson.image.extension'
  | 'image.childProjectsJson.image.gid'
  | 'image.childProjectsJson.image.id'
  | 'image.childProjectsJson.image.ino'
  | 'image.childProjectsJson.image.mode'
  | 'image.childProjectsJson.image.modifiedTime'
  | 'image.childProjectsJson.image.mtime'
  | 'image.childProjectsJson.image.mtimeMs'
  | 'image.childProjectsJson.image.name'
  | 'image.childProjectsJson.image.nlink'
  | 'image.childProjectsJson.image.prettySize'
  | 'image.childProjectsJson.image.publicURL'
  | 'image.childProjectsJson.image.rdev'
  | 'image.childProjectsJson.image.relativeDirectory'
  | 'image.childProjectsJson.image.relativePath'
  | 'image.childProjectsJson.image.root'
  | 'image.childProjectsJson.image.size'
  | 'image.childProjectsJson.image.sourceInstanceName'
  | 'image.childProjectsJson.image.uid'
  | 'image.childProjectsJson.internal.content'
  | 'image.childProjectsJson.internal.contentDigest'
  | 'image.childProjectsJson.internal.description'
  | 'image.childProjectsJson.internal.fieldOwners'
  | 'image.childProjectsJson.internal.ignoreType'
  | 'image.childProjectsJson.internal.mediaType'
  | 'image.childProjectsJson.internal.owner'
  | 'image.childProjectsJson.internal.type'
  | 'image.childProjectsJson.lang'
  | 'image.childProjectsJson.parent.children'
  | 'image.childProjectsJson.parent.id'
  | 'image.childProjectsJson.stack'
  | 'image.childProjectsJson.title'
  | 'image.childProjectsJson.url'
  | 'image.childPtJson.academic.authors'
  | 'image.childPtJson.academic.copied'
  | 'image.childPtJson.academic.copycitation'
  | 'image.childPtJson.children'
  | 'image.childPtJson.children.children'
  | 'image.childPtJson.children.id'
  | 'image.childPtJson.id'
  | 'image.childPtJson.index.ifpb'
  | 'image.childPtJson.index.latest'
  | 'image.childPtJson.index.present'
  | 'image.childPtJson.index.titles'
  | 'image.childPtJson.internal.content'
  | 'image.childPtJson.internal.contentDigest'
  | 'image.childPtJson.internal.description'
  | 'image.childPtJson.internal.fieldOwners'
  | 'image.childPtJson.internal.ignoreType'
  | 'image.childPtJson.internal.mediaType'
  | 'image.childPtJson.internal.owner'
  | 'image.childPtJson.internal.type'
  | 'image.childPtJson.labs.intro'
  | 'image.childPtJson.labs.stack'
  | 'image.childPtJson.links.intro'
  | 'image.childPtJson.menu.about'
  | 'image.childPtJson.menu.academic'
  | 'image.childPtJson.menu.blog'
  | 'image.childPtJson.menu.cv'
  | 'image.childPtJson.menu.labs'
  | 'image.childPtJson.menu.links'
  | 'image.childPtJson.parent.children'
  | 'image.childPtJson.parent.id'
  | 'image.childReference.abstract'
  | 'image.childReference.address'
  | 'image.childReference.articleno'
  | 'image.childReference.author'
  | 'image.childReference.authors'
  | 'image.childReference.booktitle'
  | 'image.childReference.children'
  | 'image.childReference.children.children'
  | 'image.childReference.children.id'
  | 'image.childReference.date'
  | 'image.childReference.doi'
  | 'image.childReference.entry_type'
  | 'image.childReference.id'
  | 'image.childReference.internal.content'
  | 'image.childReference.internal.contentDigest'
  | 'image.childReference.internal.description'
  | 'image.childReference.internal.fieldOwners'
  | 'image.childReference.internal.ignoreType'
  | 'image.childReference.internal.mediaType'
  | 'image.childReference.internal.owner'
  | 'image.childReference.internal.type'
  | 'image.childReference.isbn'
  | 'image.childReference.issn'
  | 'image.childReference.journal'
  | 'image.childReference.key'
  | 'image.childReference.keywords'
  | 'image.childReference.location'
  | 'image.childReference.month'
  | 'image.childReference.number'
  | 'image.childReference.numpages'
  | 'image.childReference.pages'
  | 'image.childReference.parent.children'
  | 'image.childReference.parent.id'
  | 'image.childReference.place'
  | 'image.childReference.publisher'
  | 'image.childReference.raw'
  | 'image.childReference.series'
  | 'image.childReference.title'
  | 'image.childReference.url'
  | 'image.childReference.volume'
  | 'image.childReference.year'
  | 'image.childSubjectsJson.children'
  | 'image.childSubjectsJson.children.children'
  | 'image.childSubjectsJson.children.id'
  | 'image.childSubjectsJson.id'
  | 'image.childSubjectsJson.institution'
  | 'image.childSubjectsJson.internal.content'
  | 'image.childSubjectsJson.internal.contentDigest'
  | 'image.childSubjectsJson.internal.description'
  | 'image.childSubjectsJson.internal.fieldOwners'
  | 'image.childSubjectsJson.internal.ignoreType'
  | 'image.childSubjectsJson.internal.mediaType'
  | 'image.childSubjectsJson.internal.owner'
  | 'image.childSubjectsJson.internal.type'
  | 'image.childSubjectsJson.parent.children'
  | 'image.childSubjectsJson.parent.id'
  | 'image.childSubjectsJson.semester'
  | 'image.childSubjectsJson.subjects'
  | 'image.childSubjectsJson.subjects.link'
  | 'image.childSubjectsJson.subjects.name'
  | 'image.children'
  | 'image.childrenEnJson'
  | 'image.childrenEnJson.academic.authors'
  | 'image.childrenEnJson.academic.copied'
  | 'image.childrenEnJson.academic.copycitation'
  | 'image.childrenEnJson.children'
  | 'image.childrenEnJson.children.children'
  | 'image.childrenEnJson.children.id'
  | 'image.childrenEnJson.id'
  | 'image.childrenEnJson.index.ifpb'
  | 'image.childrenEnJson.index.latest'
  | 'image.childrenEnJson.index.present'
  | 'image.childrenEnJson.index.titles'
  | 'image.childrenEnJson.internal.content'
  | 'image.childrenEnJson.internal.contentDigest'
  | 'image.childrenEnJson.internal.description'
  | 'image.childrenEnJson.internal.fieldOwners'
  | 'image.childrenEnJson.internal.ignoreType'
  | 'image.childrenEnJson.internal.mediaType'
  | 'image.childrenEnJson.internal.owner'
  | 'image.childrenEnJson.internal.type'
  | 'image.childrenEnJson.labs.intro'
  | 'image.childrenEnJson.labs.stack'
  | 'image.childrenEnJson.links.intro'
  | 'image.childrenEnJson.menu.about'
  | 'image.childrenEnJson.menu.academic'
  | 'image.childrenEnJson.menu.blog'
  | 'image.childrenEnJson.menu.cv'
  | 'image.childrenEnJson.menu.labs'
  | 'image.childrenEnJson.menu.links'
  | 'image.childrenEnJson.parent.children'
  | 'image.childrenEnJson.parent.id'
  | 'image.childrenImageSharp'
  | 'image.childrenImageSharp.children'
  | 'image.childrenImageSharp.children.children'
  | 'image.childrenImageSharp.children.id'
  | 'image.childrenImageSharp.fixed.aspectRatio'
  | 'image.childrenImageSharp.fixed.base64'
  | 'image.childrenImageSharp.fixed.height'
  | 'image.childrenImageSharp.fixed.originalName'
  | 'image.childrenImageSharp.fixed.src'
  | 'image.childrenImageSharp.fixed.srcSet'
  | 'image.childrenImageSharp.fixed.srcSetWebp'
  | 'image.childrenImageSharp.fixed.srcWebp'
  | 'image.childrenImageSharp.fixed.tracedSVG'
  | 'image.childrenImageSharp.fixed.width'
  | 'image.childrenImageSharp.fluid.aspectRatio'
  | 'image.childrenImageSharp.fluid.base64'
  | 'image.childrenImageSharp.fluid.originalImg'
  | 'image.childrenImageSharp.fluid.originalName'
  | 'image.childrenImageSharp.fluid.presentationHeight'
  | 'image.childrenImageSharp.fluid.presentationWidth'
  | 'image.childrenImageSharp.fluid.sizes'
  | 'image.childrenImageSharp.fluid.src'
  | 'image.childrenImageSharp.fluid.srcSet'
  | 'image.childrenImageSharp.fluid.srcSetWebp'
  | 'image.childrenImageSharp.fluid.srcWebp'
  | 'image.childrenImageSharp.fluid.tracedSVG'
  | 'image.childrenImageSharp.gatsbyImageData'
  | 'image.childrenImageSharp.id'
  | 'image.childrenImageSharp.internal.content'
  | 'image.childrenImageSharp.internal.contentDigest'
  | 'image.childrenImageSharp.internal.description'
  | 'image.childrenImageSharp.internal.fieldOwners'
  | 'image.childrenImageSharp.internal.ignoreType'
  | 'image.childrenImageSharp.internal.mediaType'
  | 'image.childrenImageSharp.internal.owner'
  | 'image.childrenImageSharp.internal.type'
  | 'image.childrenImageSharp.original.height'
  | 'image.childrenImageSharp.original.src'
  | 'image.childrenImageSharp.original.width'
  | 'image.childrenImageSharp.parent.children'
  | 'image.childrenImageSharp.parent.id'
  | 'image.childrenImageSharp.resize.aspectRatio'
  | 'image.childrenImageSharp.resize.height'
  | 'image.childrenImageSharp.resize.originalName'
  | 'image.childrenImageSharp.resize.src'
  | 'image.childrenImageSharp.resize.tracedSVG'
  | 'image.childrenImageSharp.resize.width'
  | 'image.childrenLinksJson'
  | 'image.childrenLinksJson.children'
  | 'image.childrenLinksJson.children.children'
  | 'image.childrenLinksJson.children.id'
  | 'image.childrenLinksJson.description'
  | 'image.childrenLinksJson.id'
  | 'image.childrenLinksJson.image.absolutePath'
  | 'image.childrenLinksJson.image.accessTime'
  | 'image.childrenLinksJson.image.atime'
  | 'image.childrenLinksJson.image.atimeMs'
  | 'image.childrenLinksJson.image.base'
  | 'image.childrenLinksJson.image.birthTime'
  | 'image.childrenLinksJson.image.birthtime'
  | 'image.childrenLinksJson.image.birthtimeMs'
  | 'image.childrenLinksJson.image.blksize'
  | 'image.childrenLinksJson.image.blocks'
  | 'image.childrenLinksJson.image.changeTime'
  | 'image.childrenLinksJson.image.children'
  | 'image.childrenLinksJson.image.childrenEnJson'
  | 'image.childrenLinksJson.image.childrenImageSharp'
  | 'image.childrenLinksJson.image.childrenLinksJson'
  | 'image.childrenLinksJson.image.childrenMdx'
  | 'image.childrenLinksJson.image.childrenProjectsJson'
  | 'image.childrenLinksJson.image.childrenPtJson'
  | 'image.childrenLinksJson.image.childrenReference'
  | 'image.childrenLinksJson.image.childrenSubjectsJson'
  | 'image.childrenLinksJson.image.ctime'
  | 'image.childrenLinksJson.image.ctimeMs'
  | 'image.childrenLinksJson.image.dev'
  | 'image.childrenLinksJson.image.dir'
  | 'image.childrenLinksJson.image.ext'
  | 'image.childrenLinksJson.image.extension'
  | 'image.childrenLinksJson.image.gid'
  | 'image.childrenLinksJson.image.id'
  | 'image.childrenLinksJson.image.ino'
  | 'image.childrenLinksJson.image.mode'
  | 'image.childrenLinksJson.image.modifiedTime'
  | 'image.childrenLinksJson.image.mtime'
  | 'image.childrenLinksJson.image.mtimeMs'
  | 'image.childrenLinksJson.image.name'
  | 'image.childrenLinksJson.image.nlink'
  | 'image.childrenLinksJson.image.prettySize'
  | 'image.childrenLinksJson.image.publicURL'
  | 'image.childrenLinksJson.image.rdev'
  | 'image.childrenLinksJson.image.relativeDirectory'
  | 'image.childrenLinksJson.image.relativePath'
  | 'image.childrenLinksJson.image.root'
  | 'image.childrenLinksJson.image.size'
  | 'image.childrenLinksJson.image.sourceInstanceName'
  | 'image.childrenLinksJson.image.uid'
  | 'image.childrenLinksJson.internal.content'
  | 'image.childrenLinksJson.internal.contentDigest'
  | 'image.childrenLinksJson.internal.description'
  | 'image.childrenLinksJson.internal.fieldOwners'
  | 'image.childrenLinksJson.internal.ignoreType'
  | 'image.childrenLinksJson.internal.mediaType'
  | 'image.childrenLinksJson.internal.owner'
  | 'image.childrenLinksJson.internal.type'
  | 'image.childrenLinksJson.lang'
  | 'image.childrenLinksJson.link'
  | 'image.childrenLinksJson.parent.children'
  | 'image.childrenLinksJson.parent.id'
  | 'image.childrenLinksJson.publishDate'
  | 'image.childrenLinksJson.tags'
  | 'image.childrenLinksJson.title'
  | 'image.childrenLinksJson.type'
  | 'image.childrenMdx'
  | 'image.childrenMdx.body'
  | 'image.childrenMdx.children'
  | 'image.childrenMdx.children.children'
  | 'image.childrenMdx.children.id'
  | 'image.childrenMdx.excerpt'
  | 'image.childrenMdx.fields.isDefault'
  | 'image.childrenMdx.fields.locale'
  | 'image.childrenMdx.fileAbsolutePath'
  | 'image.childrenMdx.frontmatter.comments'
  | 'image.childrenMdx.frontmatter.date'
  | 'image.childrenMdx.frontmatter.description'
  | 'image.childrenMdx.frontmatter.month'
  | 'image.childrenMdx.frontmatter.slug'
  | 'image.childrenMdx.frontmatter.tags'
  | 'image.childrenMdx.frontmatter.title'
  | 'image.childrenMdx.frontmatter.year'
  | 'image.childrenMdx.gatsbyPath'
  | 'image.childrenMdx.headings'
  | 'image.childrenMdx.headings.depth'
  | 'image.childrenMdx.headings.value'
  | 'image.childrenMdx.html'
  | 'image.childrenMdx.id'
  | 'image.childrenMdx.internal.content'
  | 'image.childrenMdx.internal.contentDigest'
  | 'image.childrenMdx.internal.description'
  | 'image.childrenMdx.internal.fieldOwners'
  | 'image.childrenMdx.internal.ignoreType'
  | 'image.childrenMdx.internal.mediaType'
  | 'image.childrenMdx.internal.owner'
  | 'image.childrenMdx.internal.type'
  | 'image.childrenMdx.mdxAST'
  | 'image.childrenMdx.parent.children'
  | 'image.childrenMdx.parent.id'
  | 'image.childrenMdx.rawBody'
  | 'image.childrenMdx.slug'
  | 'image.childrenMdx.tableOfContents'
  | 'image.childrenMdx.timeToRead'
  | 'image.childrenMdx.wordCount.paragraphs'
  | 'image.childrenMdx.wordCount.sentences'
  | 'image.childrenMdx.wordCount.words'
  | 'image.childrenProjectsJson'
  | 'image.childrenProjectsJson.children'
  | 'image.childrenProjectsJson.children.children'
  | 'image.childrenProjectsJson.children.id'
  | 'image.childrenProjectsJson.date'
  | 'image.childrenProjectsJson.description'
  | 'image.childrenProjectsJson.id'
  | 'image.childrenProjectsJson.image.absolutePath'
  | 'image.childrenProjectsJson.image.accessTime'
  | 'image.childrenProjectsJson.image.atime'
  | 'image.childrenProjectsJson.image.atimeMs'
  | 'image.childrenProjectsJson.image.base'
  | 'image.childrenProjectsJson.image.birthTime'
  | 'image.childrenProjectsJson.image.birthtime'
  | 'image.childrenProjectsJson.image.birthtimeMs'
  | 'image.childrenProjectsJson.image.blksize'
  | 'image.childrenProjectsJson.image.blocks'
  | 'image.childrenProjectsJson.image.changeTime'
  | 'image.childrenProjectsJson.image.children'
  | 'image.childrenProjectsJson.image.childrenEnJson'
  | 'image.childrenProjectsJson.image.childrenImageSharp'
  | 'image.childrenProjectsJson.image.childrenLinksJson'
  | 'image.childrenProjectsJson.image.childrenMdx'
  | 'image.childrenProjectsJson.image.childrenProjectsJson'
  | 'image.childrenProjectsJson.image.childrenPtJson'
  | 'image.childrenProjectsJson.image.childrenReference'
  | 'image.childrenProjectsJson.image.childrenSubjectsJson'
  | 'image.childrenProjectsJson.image.ctime'
  | 'image.childrenProjectsJson.image.ctimeMs'
  | 'image.childrenProjectsJson.image.dev'
  | 'image.childrenProjectsJson.image.dir'
  | 'image.childrenProjectsJson.image.ext'
  | 'image.childrenProjectsJson.image.extension'
  | 'image.childrenProjectsJson.image.gid'
  | 'image.childrenProjectsJson.image.id'
  | 'image.childrenProjectsJson.image.ino'
  | 'image.childrenProjectsJson.image.mode'
  | 'image.childrenProjectsJson.image.modifiedTime'
  | 'image.childrenProjectsJson.image.mtime'
  | 'image.childrenProjectsJson.image.mtimeMs'
  | 'image.childrenProjectsJson.image.name'
  | 'image.childrenProjectsJson.image.nlink'
  | 'image.childrenProjectsJson.image.prettySize'
  | 'image.childrenProjectsJson.image.publicURL'
  | 'image.childrenProjectsJson.image.rdev'
  | 'image.childrenProjectsJson.image.relativeDirectory'
  | 'image.childrenProjectsJson.image.relativePath'
  | 'image.childrenProjectsJson.image.root'
  | 'image.childrenProjectsJson.image.size'
  | 'image.childrenProjectsJson.image.sourceInstanceName'
  | 'image.childrenProjectsJson.image.uid'
  | 'image.childrenProjectsJson.internal.content'
  | 'image.childrenProjectsJson.internal.contentDigest'
  | 'image.childrenProjectsJson.internal.description'
  | 'image.childrenProjectsJson.internal.fieldOwners'
  | 'image.childrenProjectsJson.internal.ignoreType'
  | 'image.childrenProjectsJson.internal.mediaType'
  | 'image.childrenProjectsJson.internal.owner'
  | 'image.childrenProjectsJson.internal.type'
  | 'image.childrenProjectsJson.lang'
  | 'image.childrenProjectsJson.parent.children'
  | 'image.childrenProjectsJson.parent.id'
  | 'image.childrenProjectsJson.stack'
  | 'image.childrenProjectsJson.title'
  | 'image.childrenProjectsJson.url'
  | 'image.childrenPtJson'
  | 'image.childrenPtJson.academic.authors'
  | 'image.childrenPtJson.academic.copied'
  | 'image.childrenPtJson.academic.copycitation'
  | 'image.childrenPtJson.children'
  | 'image.childrenPtJson.children.children'
  | 'image.childrenPtJson.children.id'
  | 'image.childrenPtJson.id'
  | 'image.childrenPtJson.index.ifpb'
  | 'image.childrenPtJson.index.latest'
  | 'image.childrenPtJson.index.present'
  | 'image.childrenPtJson.index.titles'
  | 'image.childrenPtJson.internal.content'
  | 'image.childrenPtJson.internal.contentDigest'
  | 'image.childrenPtJson.internal.description'
  | 'image.childrenPtJson.internal.fieldOwners'
  | 'image.childrenPtJson.internal.ignoreType'
  | 'image.childrenPtJson.internal.mediaType'
  | 'image.childrenPtJson.internal.owner'
  | 'image.childrenPtJson.internal.type'
  | 'image.childrenPtJson.labs.intro'
  | 'image.childrenPtJson.labs.stack'
  | 'image.childrenPtJson.links.intro'
  | 'image.childrenPtJson.menu.about'
  | 'image.childrenPtJson.menu.academic'
  | 'image.childrenPtJson.menu.blog'
  | 'image.childrenPtJson.menu.cv'
  | 'image.childrenPtJson.menu.labs'
  | 'image.childrenPtJson.menu.links'
  | 'image.childrenPtJson.parent.children'
  | 'image.childrenPtJson.parent.id'
  | 'image.childrenReference'
  | 'image.childrenReference.abstract'
  | 'image.childrenReference.address'
  | 'image.childrenReference.articleno'
  | 'image.childrenReference.author'
  | 'image.childrenReference.authors'
  | 'image.childrenReference.booktitle'
  | 'image.childrenReference.children'
  | 'image.childrenReference.children.children'
  | 'image.childrenReference.children.id'
  | 'image.childrenReference.date'
  | 'image.childrenReference.doi'
  | 'image.childrenReference.entry_type'
  | 'image.childrenReference.id'
  | 'image.childrenReference.internal.content'
  | 'image.childrenReference.internal.contentDigest'
  | 'image.childrenReference.internal.description'
  | 'image.childrenReference.internal.fieldOwners'
  | 'image.childrenReference.internal.ignoreType'
  | 'image.childrenReference.internal.mediaType'
  | 'image.childrenReference.internal.owner'
  | 'image.childrenReference.internal.type'
  | 'image.childrenReference.isbn'
  | 'image.childrenReference.issn'
  | 'image.childrenReference.journal'
  | 'image.childrenReference.key'
  | 'image.childrenReference.keywords'
  | 'image.childrenReference.location'
  | 'image.childrenReference.month'
  | 'image.childrenReference.number'
  | 'image.childrenReference.numpages'
  | 'image.childrenReference.pages'
  | 'image.childrenReference.parent.children'
  | 'image.childrenReference.parent.id'
  | 'image.childrenReference.place'
  | 'image.childrenReference.publisher'
  | 'image.childrenReference.raw'
  | 'image.childrenReference.series'
  | 'image.childrenReference.title'
  | 'image.childrenReference.url'
  | 'image.childrenReference.volume'
  | 'image.childrenReference.year'
  | 'image.childrenSubjectsJson'
  | 'image.childrenSubjectsJson.children'
  | 'image.childrenSubjectsJson.children.children'
  | 'image.childrenSubjectsJson.children.id'
  | 'image.childrenSubjectsJson.id'
  | 'image.childrenSubjectsJson.institution'
  | 'image.childrenSubjectsJson.internal.content'
  | 'image.childrenSubjectsJson.internal.contentDigest'
  | 'image.childrenSubjectsJson.internal.description'
  | 'image.childrenSubjectsJson.internal.fieldOwners'
  | 'image.childrenSubjectsJson.internal.ignoreType'
  | 'image.childrenSubjectsJson.internal.mediaType'
  | 'image.childrenSubjectsJson.internal.owner'
  | 'image.childrenSubjectsJson.internal.type'
  | 'image.childrenSubjectsJson.parent.children'
  | 'image.childrenSubjectsJson.parent.id'
  | 'image.childrenSubjectsJson.semester'
  | 'image.childrenSubjectsJson.subjects'
  | 'image.childrenSubjectsJson.subjects.link'
  | 'image.childrenSubjectsJson.subjects.name'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.ctime'
  | 'image.ctimeMs'
  | 'image.dev'
  | 'image.dir'
  | 'image.ext'
  | 'image.extension'
  | 'image.gid'
  | 'image.id'
  | 'image.ino'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.mode'
  | 'image.modifiedTime'
  | 'image.mtime'
  | 'image.mtimeMs'
  | 'image.name'
  | 'image.nlink'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.prettySize'
  | 'image.publicURL'
  | 'image.rdev'
  | 'image.relativeDirectory'
  | 'image.relativePath'
  | 'image.root'
  | 'image.size'
  | 'image.sourceInstanceName'
  | 'image.uid'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'lang'
  | 'link'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishDate'
  | 'tags'
  | 'title'
  | 'type';

type LinksJsonFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<FileFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly lang: InputMaybe<StringQueryOperatorInput>;
  readonly link: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishDate: InputMaybe<DateQueryOperatorInput>;
  readonly tags: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type LinksJsonFilterListInput = {
  readonly elemMatch: InputMaybe<LinksJsonFilterInput>;
};

type LinksJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<LinksJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<LinksJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<LinksJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type LinksJsonGroupConnection_distinctArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonGroupConnection_groupArgs = {
  field: LinksJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type LinksJsonGroupConnection_maxArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonGroupConnection_minArgs = {
  field: LinksJsonFieldsEnum;
};


type LinksJsonGroupConnection_sumArgs = {
  field: LinksJsonFieldsEnum;
};

type LinksJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<LinksJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type Locale = {
  readonly code: Maybe<Scalars['String']>;
  readonly dateFormat: Maybe<Scalars['String']>;
  readonly hrefLang: Maybe<Scalars['String']>;
  readonly langDir: Maybe<Scalars['String']>;
  readonly localName: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
};

type LocaleFilterInput = {
  readonly code: InputMaybe<StringQueryOperatorInput>;
  readonly dateFormat: InputMaybe<StringQueryOperatorInput>;
  readonly hrefLang: InputMaybe<StringQueryOperatorInput>;
  readonly langDir: InputMaybe<StringQueryOperatorInput>;
  readonly localName: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
};

type LocaleFilterListInput = {
  readonly elemMatch: InputMaybe<LocaleFilterInput>;
};

type Mdx = Node & {
  readonly body: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly excerpt: Scalars['String'];
  readonly fields: Maybe<MdxFields>;
  readonly fileAbsolutePath: Scalars['String'];
  readonly frontmatter: Maybe<MdxFrontmatter>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly headings: Maybe<ReadonlyArray<Maybe<MdxHeadingMdx>>>;
  readonly html: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly mdxAST: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly rawBody: Scalars['String'];
  readonly slug: Maybe<Scalars['String']>;
  readonly tableOfContents: Maybe<Scalars['JSON']>;
  readonly timeToRead: Maybe<Scalars['Int']>;
  readonly wordCount: Maybe<MdxWordCount>;
};


type Mdx_excerptArgs = {
  pruneLength?: InputMaybe<Scalars['Int']>;
  truncate?: InputMaybe<Scalars['Boolean']>;
};


type Mdx_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};


type Mdx_headingsArgs = {
  depth: InputMaybe<HeadingsMdx>;
};


type Mdx_tableOfContentsArgs = {
  maxDepth: InputMaybe<Scalars['Int']>;
};

type MdxConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MdxEdge>;
  readonly group: ReadonlyArray<MdxGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Mdx>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MdxConnection_distinctArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_groupArgs = {
  field: MdxFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MdxConnection_maxArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_minArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_sumArgs = {
  field: MdxFieldsEnum;
};

type MdxEdge = {
  readonly next: Maybe<Mdx>;
  readonly node: Mdx;
  readonly previous: Maybe<Mdx>;
};

type MdxFields = {
  readonly isDefault: Maybe<Scalars['Boolean']>;
  readonly locale: Maybe<Scalars['String']>;
};

type MdxFieldsEnum =
  | 'body'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'excerpt'
  | 'fields.isDefault'
  | 'fields.locale'
  | 'fileAbsolutePath'
  | 'frontmatter.comments'
  | 'frontmatter.cover.absolutePath'
  | 'frontmatter.cover.accessTime'
  | 'frontmatter.cover.atime'
  | 'frontmatter.cover.atimeMs'
  | 'frontmatter.cover.base'
  | 'frontmatter.cover.birthTime'
  | 'frontmatter.cover.birthtime'
  | 'frontmatter.cover.birthtimeMs'
  | 'frontmatter.cover.blksize'
  | 'frontmatter.cover.blocks'
  | 'frontmatter.cover.changeTime'
  | 'frontmatter.cover.childEnJson.children'
  | 'frontmatter.cover.childEnJson.id'
  | 'frontmatter.cover.childImageSharp.children'
  | 'frontmatter.cover.childImageSharp.gatsbyImageData'
  | 'frontmatter.cover.childImageSharp.id'
  | 'frontmatter.cover.childLinksJson.children'
  | 'frontmatter.cover.childLinksJson.description'
  | 'frontmatter.cover.childLinksJson.id'
  | 'frontmatter.cover.childLinksJson.lang'
  | 'frontmatter.cover.childLinksJson.link'
  | 'frontmatter.cover.childLinksJson.publishDate'
  | 'frontmatter.cover.childLinksJson.tags'
  | 'frontmatter.cover.childLinksJson.title'
  | 'frontmatter.cover.childLinksJson.type'
  | 'frontmatter.cover.childMdx.body'
  | 'frontmatter.cover.childMdx.children'
  | 'frontmatter.cover.childMdx.excerpt'
  | 'frontmatter.cover.childMdx.fileAbsolutePath'
  | 'frontmatter.cover.childMdx.gatsbyPath'
  | 'frontmatter.cover.childMdx.headings'
  | 'frontmatter.cover.childMdx.html'
  | 'frontmatter.cover.childMdx.id'
  | 'frontmatter.cover.childMdx.mdxAST'
  | 'frontmatter.cover.childMdx.rawBody'
  | 'frontmatter.cover.childMdx.slug'
  | 'frontmatter.cover.childMdx.tableOfContents'
  | 'frontmatter.cover.childMdx.timeToRead'
  | 'frontmatter.cover.childProjectsJson.children'
  | 'frontmatter.cover.childProjectsJson.date'
  | 'frontmatter.cover.childProjectsJson.description'
  | 'frontmatter.cover.childProjectsJson.id'
  | 'frontmatter.cover.childProjectsJson.lang'
  | 'frontmatter.cover.childProjectsJson.stack'
  | 'frontmatter.cover.childProjectsJson.title'
  | 'frontmatter.cover.childProjectsJson.url'
  | 'frontmatter.cover.childPtJson.children'
  | 'frontmatter.cover.childPtJson.id'
  | 'frontmatter.cover.childReference.abstract'
  | 'frontmatter.cover.childReference.address'
  | 'frontmatter.cover.childReference.articleno'
  | 'frontmatter.cover.childReference.author'
  | 'frontmatter.cover.childReference.authors'
  | 'frontmatter.cover.childReference.booktitle'
  | 'frontmatter.cover.childReference.children'
  | 'frontmatter.cover.childReference.date'
  | 'frontmatter.cover.childReference.doi'
  | 'frontmatter.cover.childReference.entry_type'
  | 'frontmatter.cover.childReference.id'
  | 'frontmatter.cover.childReference.isbn'
  | 'frontmatter.cover.childReference.issn'
  | 'frontmatter.cover.childReference.journal'
  | 'frontmatter.cover.childReference.key'
  | 'frontmatter.cover.childReference.keywords'
  | 'frontmatter.cover.childReference.location'
  | 'frontmatter.cover.childReference.month'
  | 'frontmatter.cover.childReference.number'
  | 'frontmatter.cover.childReference.numpages'
  | 'frontmatter.cover.childReference.pages'
  | 'frontmatter.cover.childReference.place'
  | 'frontmatter.cover.childReference.publisher'
  | 'frontmatter.cover.childReference.raw'
  | 'frontmatter.cover.childReference.series'
  | 'frontmatter.cover.childReference.title'
  | 'frontmatter.cover.childReference.url'
  | 'frontmatter.cover.childReference.volume'
  | 'frontmatter.cover.childReference.year'
  | 'frontmatter.cover.childSubjectsJson.children'
  | 'frontmatter.cover.childSubjectsJson.id'
  | 'frontmatter.cover.childSubjectsJson.institution'
  | 'frontmatter.cover.childSubjectsJson.semester'
  | 'frontmatter.cover.childSubjectsJson.subjects'
  | 'frontmatter.cover.children'
  | 'frontmatter.cover.childrenEnJson'
  | 'frontmatter.cover.childrenEnJson.children'
  | 'frontmatter.cover.childrenEnJson.id'
  | 'frontmatter.cover.childrenImageSharp'
  | 'frontmatter.cover.childrenImageSharp.children'
  | 'frontmatter.cover.childrenImageSharp.gatsbyImageData'
  | 'frontmatter.cover.childrenImageSharp.id'
  | 'frontmatter.cover.childrenLinksJson'
  | 'frontmatter.cover.childrenLinksJson.children'
  | 'frontmatter.cover.childrenLinksJson.description'
  | 'frontmatter.cover.childrenLinksJson.id'
  | 'frontmatter.cover.childrenLinksJson.lang'
  | 'frontmatter.cover.childrenLinksJson.link'
  | 'frontmatter.cover.childrenLinksJson.publishDate'
  | 'frontmatter.cover.childrenLinksJson.tags'
  | 'frontmatter.cover.childrenLinksJson.title'
  | 'frontmatter.cover.childrenLinksJson.type'
  | 'frontmatter.cover.childrenMdx'
  | 'frontmatter.cover.childrenMdx.body'
  | 'frontmatter.cover.childrenMdx.children'
  | 'frontmatter.cover.childrenMdx.excerpt'
  | 'frontmatter.cover.childrenMdx.fileAbsolutePath'
  | 'frontmatter.cover.childrenMdx.gatsbyPath'
  | 'frontmatter.cover.childrenMdx.headings'
  | 'frontmatter.cover.childrenMdx.html'
  | 'frontmatter.cover.childrenMdx.id'
  | 'frontmatter.cover.childrenMdx.mdxAST'
  | 'frontmatter.cover.childrenMdx.rawBody'
  | 'frontmatter.cover.childrenMdx.slug'
  | 'frontmatter.cover.childrenMdx.tableOfContents'
  | 'frontmatter.cover.childrenMdx.timeToRead'
  | 'frontmatter.cover.childrenProjectsJson'
  | 'frontmatter.cover.childrenProjectsJson.children'
  | 'frontmatter.cover.childrenProjectsJson.date'
  | 'frontmatter.cover.childrenProjectsJson.description'
  | 'frontmatter.cover.childrenProjectsJson.id'
  | 'frontmatter.cover.childrenProjectsJson.lang'
  | 'frontmatter.cover.childrenProjectsJson.stack'
  | 'frontmatter.cover.childrenProjectsJson.title'
  | 'frontmatter.cover.childrenProjectsJson.url'
  | 'frontmatter.cover.childrenPtJson'
  | 'frontmatter.cover.childrenPtJson.children'
  | 'frontmatter.cover.childrenPtJson.id'
  | 'frontmatter.cover.childrenReference'
  | 'frontmatter.cover.childrenReference.abstract'
  | 'frontmatter.cover.childrenReference.address'
  | 'frontmatter.cover.childrenReference.articleno'
  | 'frontmatter.cover.childrenReference.author'
  | 'frontmatter.cover.childrenReference.authors'
  | 'frontmatter.cover.childrenReference.booktitle'
  | 'frontmatter.cover.childrenReference.children'
  | 'frontmatter.cover.childrenReference.date'
  | 'frontmatter.cover.childrenReference.doi'
  | 'frontmatter.cover.childrenReference.entry_type'
  | 'frontmatter.cover.childrenReference.id'
  | 'frontmatter.cover.childrenReference.isbn'
  | 'frontmatter.cover.childrenReference.issn'
  | 'frontmatter.cover.childrenReference.journal'
  | 'frontmatter.cover.childrenReference.key'
  | 'frontmatter.cover.childrenReference.keywords'
  | 'frontmatter.cover.childrenReference.location'
  | 'frontmatter.cover.childrenReference.month'
  | 'frontmatter.cover.childrenReference.number'
  | 'frontmatter.cover.childrenReference.numpages'
  | 'frontmatter.cover.childrenReference.pages'
  | 'frontmatter.cover.childrenReference.place'
  | 'frontmatter.cover.childrenReference.publisher'
  | 'frontmatter.cover.childrenReference.raw'
  | 'frontmatter.cover.childrenReference.series'
  | 'frontmatter.cover.childrenReference.title'
  | 'frontmatter.cover.childrenReference.url'
  | 'frontmatter.cover.childrenReference.volume'
  | 'frontmatter.cover.childrenReference.year'
  | 'frontmatter.cover.childrenSubjectsJson'
  | 'frontmatter.cover.childrenSubjectsJson.children'
  | 'frontmatter.cover.childrenSubjectsJson.id'
  | 'frontmatter.cover.childrenSubjectsJson.institution'
  | 'frontmatter.cover.childrenSubjectsJson.semester'
  | 'frontmatter.cover.childrenSubjectsJson.subjects'
  | 'frontmatter.cover.children.children'
  | 'frontmatter.cover.children.id'
  | 'frontmatter.cover.ctime'
  | 'frontmatter.cover.ctimeMs'
  | 'frontmatter.cover.dev'
  | 'frontmatter.cover.dir'
  | 'frontmatter.cover.ext'
  | 'frontmatter.cover.extension'
  | 'frontmatter.cover.gid'
  | 'frontmatter.cover.id'
  | 'frontmatter.cover.ino'
  | 'frontmatter.cover.internal.content'
  | 'frontmatter.cover.internal.contentDigest'
  | 'frontmatter.cover.internal.description'
  | 'frontmatter.cover.internal.fieldOwners'
  | 'frontmatter.cover.internal.ignoreType'
  | 'frontmatter.cover.internal.mediaType'
  | 'frontmatter.cover.internal.owner'
  | 'frontmatter.cover.internal.type'
  | 'frontmatter.cover.mode'
  | 'frontmatter.cover.modifiedTime'
  | 'frontmatter.cover.mtime'
  | 'frontmatter.cover.mtimeMs'
  | 'frontmatter.cover.name'
  | 'frontmatter.cover.nlink'
  | 'frontmatter.cover.parent.children'
  | 'frontmatter.cover.parent.id'
  | 'frontmatter.cover.prettySize'
  | 'frontmatter.cover.publicURL'
  | 'frontmatter.cover.rdev'
  | 'frontmatter.cover.relativeDirectory'
  | 'frontmatter.cover.relativePath'
  | 'frontmatter.cover.root'
  | 'frontmatter.cover.size'
  | 'frontmatter.cover.sourceInstanceName'
  | 'frontmatter.cover.uid'
  | 'frontmatter.date'
  | 'frontmatter.description'
  | 'frontmatter.month'
  | 'frontmatter.slug'
  | 'frontmatter.tags'
  | 'frontmatter.title'
  | 'frontmatter.year'
  | 'gatsbyPath'
  | 'headings'
  | 'headings.depth'
  | 'headings.value'
  | 'html'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mdxAST'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'rawBody'
  | 'slug'
  | 'tableOfContents'
  | 'timeToRead'
  | 'wordCount.paragraphs'
  | 'wordCount.sentences'
  | 'wordCount.words';

type MdxFieldsFilterInput = {
  readonly isDefault: InputMaybe<BooleanQueryOperatorInput>;
  readonly locale: InputMaybe<StringQueryOperatorInput>;
};

type MdxFilterInput = {
  readonly body: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly excerpt: InputMaybe<StringQueryOperatorInput>;
  readonly fields: InputMaybe<MdxFieldsFilterInput>;
  readonly fileAbsolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly frontmatter: InputMaybe<MdxFrontmatterFilterInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly headings: InputMaybe<MdxHeadingMdxFilterListInput>;
  readonly html: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mdxAST: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly rawBody: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly tableOfContents: InputMaybe<JSONQueryOperatorInput>;
  readonly timeToRead: InputMaybe<IntQueryOperatorInput>;
  readonly wordCount: InputMaybe<MdxWordCountFilterInput>;
};

type MdxFilterListInput = {
  readonly elemMatch: InputMaybe<MdxFilterInput>;
};

type MdxFrontmatter = {
  readonly comments: Maybe<Scalars['Boolean']>;
  readonly cover: Maybe<File>;
  readonly date: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly month: Maybe<Scalars['Int']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly tags: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly title: Scalars['String'];
  readonly year: Maybe<Scalars['Int']>;
};


type MdxFrontmatter_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type MdxFrontmatterFilterInput = {
  readonly comments: InputMaybe<BooleanQueryOperatorInput>;
  readonly cover: InputMaybe<FileFilterInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly month: InputMaybe<IntQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly tags: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly year: InputMaybe<IntQueryOperatorInput>;
};

type MdxGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MdxEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<MdxGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Mdx>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MdxGroupConnection_distinctArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_groupArgs = {
  field: MdxFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MdxGroupConnection_maxArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_minArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_sumArgs = {
  field: MdxFieldsEnum;
};

type MdxHeadingMdx = {
  readonly depth: Maybe<Scalars['Int']>;
  readonly value: Maybe<Scalars['String']>;
};

type MdxHeadingMdxFilterInput = {
  readonly depth: InputMaybe<IntQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type MdxHeadingMdxFilterListInput = {
  readonly elemMatch: InputMaybe<MdxHeadingMdxFilterInput>;
};

type MdxSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<MdxFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type MdxWordCount = {
  readonly paragraphs: Maybe<Scalars['Int']>;
  readonly sentences: Maybe<Scalars['Int']>;
  readonly words: Maybe<Scalars['Int']>;
};

type MdxWordCountFilterInput = {
  readonly paragraphs: InputMaybe<IntQueryOperatorInput>;
  readonly sentences: InputMaybe<IntQueryOperatorInput>;
  readonly words: InputMaybe<IntQueryOperatorInput>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type ProjectsJson = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly date: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<File>;
  readonly internal: Internal;
  readonly lang: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly stack: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly title: Maybe<Scalars['String']>;
  readonly url: Maybe<Scalars['String']>;
};


type ProjectsJson_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ProjectsJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ProjectsJsonEdge>;
  readonly group: ReadonlyArray<ProjectsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ProjectsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ProjectsJsonConnection_distinctArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonConnection_groupArgs = {
  field: ProjectsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ProjectsJsonConnection_maxArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonConnection_minArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonConnection_sumArgs = {
  field: ProjectsJsonFieldsEnum;
};

type ProjectsJsonEdge = {
  readonly next: Maybe<ProjectsJson>;
  readonly node: ProjectsJson;
  readonly previous: Maybe<ProjectsJson>;
};

type ProjectsJsonFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'date'
  | 'description'
  | 'id'
  | 'image.absolutePath'
  | 'image.accessTime'
  | 'image.atime'
  | 'image.atimeMs'
  | 'image.base'
  | 'image.birthTime'
  | 'image.birthtime'
  | 'image.birthtimeMs'
  | 'image.blksize'
  | 'image.blocks'
  | 'image.changeTime'
  | 'image.childEnJson.academic.authors'
  | 'image.childEnJson.academic.copied'
  | 'image.childEnJson.academic.copycitation'
  | 'image.childEnJson.children'
  | 'image.childEnJson.children.children'
  | 'image.childEnJson.children.id'
  | 'image.childEnJson.id'
  | 'image.childEnJson.index.ifpb'
  | 'image.childEnJson.index.latest'
  | 'image.childEnJson.index.present'
  | 'image.childEnJson.index.titles'
  | 'image.childEnJson.internal.content'
  | 'image.childEnJson.internal.contentDigest'
  | 'image.childEnJson.internal.description'
  | 'image.childEnJson.internal.fieldOwners'
  | 'image.childEnJson.internal.ignoreType'
  | 'image.childEnJson.internal.mediaType'
  | 'image.childEnJson.internal.owner'
  | 'image.childEnJson.internal.type'
  | 'image.childEnJson.labs.intro'
  | 'image.childEnJson.labs.stack'
  | 'image.childEnJson.links.intro'
  | 'image.childEnJson.menu.about'
  | 'image.childEnJson.menu.academic'
  | 'image.childEnJson.menu.blog'
  | 'image.childEnJson.menu.cv'
  | 'image.childEnJson.menu.labs'
  | 'image.childEnJson.menu.links'
  | 'image.childEnJson.parent.children'
  | 'image.childEnJson.parent.id'
  | 'image.childImageSharp.children'
  | 'image.childImageSharp.children.children'
  | 'image.childImageSharp.children.id'
  | 'image.childImageSharp.fixed.aspectRatio'
  | 'image.childImageSharp.fixed.base64'
  | 'image.childImageSharp.fixed.height'
  | 'image.childImageSharp.fixed.originalName'
  | 'image.childImageSharp.fixed.src'
  | 'image.childImageSharp.fixed.srcSet'
  | 'image.childImageSharp.fixed.srcSetWebp'
  | 'image.childImageSharp.fixed.srcWebp'
  | 'image.childImageSharp.fixed.tracedSVG'
  | 'image.childImageSharp.fixed.width'
  | 'image.childImageSharp.fluid.aspectRatio'
  | 'image.childImageSharp.fluid.base64'
  | 'image.childImageSharp.fluid.originalImg'
  | 'image.childImageSharp.fluid.originalName'
  | 'image.childImageSharp.fluid.presentationHeight'
  | 'image.childImageSharp.fluid.presentationWidth'
  | 'image.childImageSharp.fluid.sizes'
  | 'image.childImageSharp.fluid.src'
  | 'image.childImageSharp.fluid.srcSet'
  | 'image.childImageSharp.fluid.srcSetWebp'
  | 'image.childImageSharp.fluid.srcWebp'
  | 'image.childImageSharp.fluid.tracedSVG'
  | 'image.childImageSharp.gatsbyImageData'
  | 'image.childImageSharp.id'
  | 'image.childImageSharp.internal.content'
  | 'image.childImageSharp.internal.contentDigest'
  | 'image.childImageSharp.internal.description'
  | 'image.childImageSharp.internal.fieldOwners'
  | 'image.childImageSharp.internal.ignoreType'
  | 'image.childImageSharp.internal.mediaType'
  | 'image.childImageSharp.internal.owner'
  | 'image.childImageSharp.internal.type'
  | 'image.childImageSharp.original.height'
  | 'image.childImageSharp.original.src'
  | 'image.childImageSharp.original.width'
  | 'image.childImageSharp.parent.children'
  | 'image.childImageSharp.parent.id'
  | 'image.childImageSharp.resize.aspectRatio'
  | 'image.childImageSharp.resize.height'
  | 'image.childImageSharp.resize.originalName'
  | 'image.childImageSharp.resize.src'
  | 'image.childImageSharp.resize.tracedSVG'
  | 'image.childImageSharp.resize.width'
  | 'image.childLinksJson.children'
  | 'image.childLinksJson.children.children'
  | 'image.childLinksJson.children.id'
  | 'image.childLinksJson.description'
  | 'image.childLinksJson.id'
  | 'image.childLinksJson.image.absolutePath'
  | 'image.childLinksJson.image.accessTime'
  | 'image.childLinksJson.image.atime'
  | 'image.childLinksJson.image.atimeMs'
  | 'image.childLinksJson.image.base'
  | 'image.childLinksJson.image.birthTime'
  | 'image.childLinksJson.image.birthtime'
  | 'image.childLinksJson.image.birthtimeMs'
  | 'image.childLinksJson.image.blksize'
  | 'image.childLinksJson.image.blocks'
  | 'image.childLinksJson.image.changeTime'
  | 'image.childLinksJson.image.children'
  | 'image.childLinksJson.image.childrenEnJson'
  | 'image.childLinksJson.image.childrenImageSharp'
  | 'image.childLinksJson.image.childrenLinksJson'
  | 'image.childLinksJson.image.childrenMdx'
  | 'image.childLinksJson.image.childrenProjectsJson'
  | 'image.childLinksJson.image.childrenPtJson'
  | 'image.childLinksJson.image.childrenReference'
  | 'image.childLinksJson.image.childrenSubjectsJson'
  | 'image.childLinksJson.image.ctime'
  | 'image.childLinksJson.image.ctimeMs'
  | 'image.childLinksJson.image.dev'
  | 'image.childLinksJson.image.dir'
  | 'image.childLinksJson.image.ext'
  | 'image.childLinksJson.image.extension'
  | 'image.childLinksJson.image.gid'
  | 'image.childLinksJson.image.id'
  | 'image.childLinksJson.image.ino'
  | 'image.childLinksJson.image.mode'
  | 'image.childLinksJson.image.modifiedTime'
  | 'image.childLinksJson.image.mtime'
  | 'image.childLinksJson.image.mtimeMs'
  | 'image.childLinksJson.image.name'
  | 'image.childLinksJson.image.nlink'
  | 'image.childLinksJson.image.prettySize'
  | 'image.childLinksJson.image.publicURL'
  | 'image.childLinksJson.image.rdev'
  | 'image.childLinksJson.image.relativeDirectory'
  | 'image.childLinksJson.image.relativePath'
  | 'image.childLinksJson.image.root'
  | 'image.childLinksJson.image.size'
  | 'image.childLinksJson.image.sourceInstanceName'
  | 'image.childLinksJson.image.uid'
  | 'image.childLinksJson.internal.content'
  | 'image.childLinksJson.internal.contentDigest'
  | 'image.childLinksJson.internal.description'
  | 'image.childLinksJson.internal.fieldOwners'
  | 'image.childLinksJson.internal.ignoreType'
  | 'image.childLinksJson.internal.mediaType'
  | 'image.childLinksJson.internal.owner'
  | 'image.childLinksJson.internal.type'
  | 'image.childLinksJson.lang'
  | 'image.childLinksJson.link'
  | 'image.childLinksJson.parent.children'
  | 'image.childLinksJson.parent.id'
  | 'image.childLinksJson.publishDate'
  | 'image.childLinksJson.tags'
  | 'image.childLinksJson.title'
  | 'image.childLinksJson.type'
  | 'image.childMdx.body'
  | 'image.childMdx.children'
  | 'image.childMdx.children.children'
  | 'image.childMdx.children.id'
  | 'image.childMdx.excerpt'
  | 'image.childMdx.fields.isDefault'
  | 'image.childMdx.fields.locale'
  | 'image.childMdx.fileAbsolutePath'
  | 'image.childMdx.frontmatter.comments'
  | 'image.childMdx.frontmatter.date'
  | 'image.childMdx.frontmatter.description'
  | 'image.childMdx.frontmatter.month'
  | 'image.childMdx.frontmatter.slug'
  | 'image.childMdx.frontmatter.tags'
  | 'image.childMdx.frontmatter.title'
  | 'image.childMdx.frontmatter.year'
  | 'image.childMdx.gatsbyPath'
  | 'image.childMdx.headings'
  | 'image.childMdx.headings.depth'
  | 'image.childMdx.headings.value'
  | 'image.childMdx.html'
  | 'image.childMdx.id'
  | 'image.childMdx.internal.content'
  | 'image.childMdx.internal.contentDigest'
  | 'image.childMdx.internal.description'
  | 'image.childMdx.internal.fieldOwners'
  | 'image.childMdx.internal.ignoreType'
  | 'image.childMdx.internal.mediaType'
  | 'image.childMdx.internal.owner'
  | 'image.childMdx.internal.type'
  | 'image.childMdx.mdxAST'
  | 'image.childMdx.parent.children'
  | 'image.childMdx.parent.id'
  | 'image.childMdx.rawBody'
  | 'image.childMdx.slug'
  | 'image.childMdx.tableOfContents'
  | 'image.childMdx.timeToRead'
  | 'image.childMdx.wordCount.paragraphs'
  | 'image.childMdx.wordCount.sentences'
  | 'image.childMdx.wordCount.words'
  | 'image.childProjectsJson.children'
  | 'image.childProjectsJson.children.children'
  | 'image.childProjectsJson.children.id'
  | 'image.childProjectsJson.date'
  | 'image.childProjectsJson.description'
  | 'image.childProjectsJson.id'
  | 'image.childProjectsJson.image.absolutePath'
  | 'image.childProjectsJson.image.accessTime'
  | 'image.childProjectsJson.image.atime'
  | 'image.childProjectsJson.image.atimeMs'
  | 'image.childProjectsJson.image.base'
  | 'image.childProjectsJson.image.birthTime'
  | 'image.childProjectsJson.image.birthtime'
  | 'image.childProjectsJson.image.birthtimeMs'
  | 'image.childProjectsJson.image.blksize'
  | 'image.childProjectsJson.image.blocks'
  | 'image.childProjectsJson.image.changeTime'
  | 'image.childProjectsJson.image.children'
  | 'image.childProjectsJson.image.childrenEnJson'
  | 'image.childProjectsJson.image.childrenImageSharp'
  | 'image.childProjectsJson.image.childrenLinksJson'
  | 'image.childProjectsJson.image.childrenMdx'
  | 'image.childProjectsJson.image.childrenProjectsJson'
  | 'image.childProjectsJson.image.childrenPtJson'
  | 'image.childProjectsJson.image.childrenReference'
  | 'image.childProjectsJson.image.childrenSubjectsJson'
  | 'image.childProjectsJson.image.ctime'
  | 'image.childProjectsJson.image.ctimeMs'
  | 'image.childProjectsJson.image.dev'
  | 'image.childProjectsJson.image.dir'
  | 'image.childProjectsJson.image.ext'
  | 'image.childProjectsJson.image.extension'
  | 'image.childProjectsJson.image.gid'
  | 'image.childProjectsJson.image.id'
  | 'image.childProjectsJson.image.ino'
  | 'image.childProjectsJson.image.mode'
  | 'image.childProjectsJson.image.modifiedTime'
  | 'image.childProjectsJson.image.mtime'
  | 'image.childProjectsJson.image.mtimeMs'
  | 'image.childProjectsJson.image.name'
  | 'image.childProjectsJson.image.nlink'
  | 'image.childProjectsJson.image.prettySize'
  | 'image.childProjectsJson.image.publicURL'
  | 'image.childProjectsJson.image.rdev'
  | 'image.childProjectsJson.image.relativeDirectory'
  | 'image.childProjectsJson.image.relativePath'
  | 'image.childProjectsJson.image.root'
  | 'image.childProjectsJson.image.size'
  | 'image.childProjectsJson.image.sourceInstanceName'
  | 'image.childProjectsJson.image.uid'
  | 'image.childProjectsJson.internal.content'
  | 'image.childProjectsJson.internal.contentDigest'
  | 'image.childProjectsJson.internal.description'
  | 'image.childProjectsJson.internal.fieldOwners'
  | 'image.childProjectsJson.internal.ignoreType'
  | 'image.childProjectsJson.internal.mediaType'
  | 'image.childProjectsJson.internal.owner'
  | 'image.childProjectsJson.internal.type'
  | 'image.childProjectsJson.lang'
  | 'image.childProjectsJson.parent.children'
  | 'image.childProjectsJson.parent.id'
  | 'image.childProjectsJson.stack'
  | 'image.childProjectsJson.title'
  | 'image.childProjectsJson.url'
  | 'image.childPtJson.academic.authors'
  | 'image.childPtJson.academic.copied'
  | 'image.childPtJson.academic.copycitation'
  | 'image.childPtJson.children'
  | 'image.childPtJson.children.children'
  | 'image.childPtJson.children.id'
  | 'image.childPtJson.id'
  | 'image.childPtJson.index.ifpb'
  | 'image.childPtJson.index.latest'
  | 'image.childPtJson.index.present'
  | 'image.childPtJson.index.titles'
  | 'image.childPtJson.internal.content'
  | 'image.childPtJson.internal.contentDigest'
  | 'image.childPtJson.internal.description'
  | 'image.childPtJson.internal.fieldOwners'
  | 'image.childPtJson.internal.ignoreType'
  | 'image.childPtJson.internal.mediaType'
  | 'image.childPtJson.internal.owner'
  | 'image.childPtJson.internal.type'
  | 'image.childPtJson.labs.intro'
  | 'image.childPtJson.labs.stack'
  | 'image.childPtJson.links.intro'
  | 'image.childPtJson.menu.about'
  | 'image.childPtJson.menu.academic'
  | 'image.childPtJson.menu.blog'
  | 'image.childPtJson.menu.cv'
  | 'image.childPtJson.menu.labs'
  | 'image.childPtJson.menu.links'
  | 'image.childPtJson.parent.children'
  | 'image.childPtJson.parent.id'
  | 'image.childReference.abstract'
  | 'image.childReference.address'
  | 'image.childReference.articleno'
  | 'image.childReference.author'
  | 'image.childReference.authors'
  | 'image.childReference.booktitle'
  | 'image.childReference.children'
  | 'image.childReference.children.children'
  | 'image.childReference.children.id'
  | 'image.childReference.date'
  | 'image.childReference.doi'
  | 'image.childReference.entry_type'
  | 'image.childReference.id'
  | 'image.childReference.internal.content'
  | 'image.childReference.internal.contentDigest'
  | 'image.childReference.internal.description'
  | 'image.childReference.internal.fieldOwners'
  | 'image.childReference.internal.ignoreType'
  | 'image.childReference.internal.mediaType'
  | 'image.childReference.internal.owner'
  | 'image.childReference.internal.type'
  | 'image.childReference.isbn'
  | 'image.childReference.issn'
  | 'image.childReference.journal'
  | 'image.childReference.key'
  | 'image.childReference.keywords'
  | 'image.childReference.location'
  | 'image.childReference.month'
  | 'image.childReference.number'
  | 'image.childReference.numpages'
  | 'image.childReference.pages'
  | 'image.childReference.parent.children'
  | 'image.childReference.parent.id'
  | 'image.childReference.place'
  | 'image.childReference.publisher'
  | 'image.childReference.raw'
  | 'image.childReference.series'
  | 'image.childReference.title'
  | 'image.childReference.url'
  | 'image.childReference.volume'
  | 'image.childReference.year'
  | 'image.childSubjectsJson.children'
  | 'image.childSubjectsJson.children.children'
  | 'image.childSubjectsJson.children.id'
  | 'image.childSubjectsJson.id'
  | 'image.childSubjectsJson.institution'
  | 'image.childSubjectsJson.internal.content'
  | 'image.childSubjectsJson.internal.contentDigest'
  | 'image.childSubjectsJson.internal.description'
  | 'image.childSubjectsJson.internal.fieldOwners'
  | 'image.childSubjectsJson.internal.ignoreType'
  | 'image.childSubjectsJson.internal.mediaType'
  | 'image.childSubjectsJson.internal.owner'
  | 'image.childSubjectsJson.internal.type'
  | 'image.childSubjectsJson.parent.children'
  | 'image.childSubjectsJson.parent.id'
  | 'image.childSubjectsJson.semester'
  | 'image.childSubjectsJson.subjects'
  | 'image.childSubjectsJson.subjects.link'
  | 'image.childSubjectsJson.subjects.name'
  | 'image.children'
  | 'image.childrenEnJson'
  | 'image.childrenEnJson.academic.authors'
  | 'image.childrenEnJson.academic.copied'
  | 'image.childrenEnJson.academic.copycitation'
  | 'image.childrenEnJson.children'
  | 'image.childrenEnJson.children.children'
  | 'image.childrenEnJson.children.id'
  | 'image.childrenEnJson.id'
  | 'image.childrenEnJson.index.ifpb'
  | 'image.childrenEnJson.index.latest'
  | 'image.childrenEnJson.index.present'
  | 'image.childrenEnJson.index.titles'
  | 'image.childrenEnJson.internal.content'
  | 'image.childrenEnJson.internal.contentDigest'
  | 'image.childrenEnJson.internal.description'
  | 'image.childrenEnJson.internal.fieldOwners'
  | 'image.childrenEnJson.internal.ignoreType'
  | 'image.childrenEnJson.internal.mediaType'
  | 'image.childrenEnJson.internal.owner'
  | 'image.childrenEnJson.internal.type'
  | 'image.childrenEnJson.labs.intro'
  | 'image.childrenEnJson.labs.stack'
  | 'image.childrenEnJson.links.intro'
  | 'image.childrenEnJson.menu.about'
  | 'image.childrenEnJson.menu.academic'
  | 'image.childrenEnJson.menu.blog'
  | 'image.childrenEnJson.menu.cv'
  | 'image.childrenEnJson.menu.labs'
  | 'image.childrenEnJson.menu.links'
  | 'image.childrenEnJson.parent.children'
  | 'image.childrenEnJson.parent.id'
  | 'image.childrenImageSharp'
  | 'image.childrenImageSharp.children'
  | 'image.childrenImageSharp.children.children'
  | 'image.childrenImageSharp.children.id'
  | 'image.childrenImageSharp.fixed.aspectRatio'
  | 'image.childrenImageSharp.fixed.base64'
  | 'image.childrenImageSharp.fixed.height'
  | 'image.childrenImageSharp.fixed.originalName'
  | 'image.childrenImageSharp.fixed.src'
  | 'image.childrenImageSharp.fixed.srcSet'
  | 'image.childrenImageSharp.fixed.srcSetWebp'
  | 'image.childrenImageSharp.fixed.srcWebp'
  | 'image.childrenImageSharp.fixed.tracedSVG'
  | 'image.childrenImageSharp.fixed.width'
  | 'image.childrenImageSharp.fluid.aspectRatio'
  | 'image.childrenImageSharp.fluid.base64'
  | 'image.childrenImageSharp.fluid.originalImg'
  | 'image.childrenImageSharp.fluid.originalName'
  | 'image.childrenImageSharp.fluid.presentationHeight'
  | 'image.childrenImageSharp.fluid.presentationWidth'
  | 'image.childrenImageSharp.fluid.sizes'
  | 'image.childrenImageSharp.fluid.src'
  | 'image.childrenImageSharp.fluid.srcSet'
  | 'image.childrenImageSharp.fluid.srcSetWebp'
  | 'image.childrenImageSharp.fluid.srcWebp'
  | 'image.childrenImageSharp.fluid.tracedSVG'
  | 'image.childrenImageSharp.gatsbyImageData'
  | 'image.childrenImageSharp.id'
  | 'image.childrenImageSharp.internal.content'
  | 'image.childrenImageSharp.internal.contentDigest'
  | 'image.childrenImageSharp.internal.description'
  | 'image.childrenImageSharp.internal.fieldOwners'
  | 'image.childrenImageSharp.internal.ignoreType'
  | 'image.childrenImageSharp.internal.mediaType'
  | 'image.childrenImageSharp.internal.owner'
  | 'image.childrenImageSharp.internal.type'
  | 'image.childrenImageSharp.original.height'
  | 'image.childrenImageSharp.original.src'
  | 'image.childrenImageSharp.original.width'
  | 'image.childrenImageSharp.parent.children'
  | 'image.childrenImageSharp.parent.id'
  | 'image.childrenImageSharp.resize.aspectRatio'
  | 'image.childrenImageSharp.resize.height'
  | 'image.childrenImageSharp.resize.originalName'
  | 'image.childrenImageSharp.resize.src'
  | 'image.childrenImageSharp.resize.tracedSVG'
  | 'image.childrenImageSharp.resize.width'
  | 'image.childrenLinksJson'
  | 'image.childrenLinksJson.children'
  | 'image.childrenLinksJson.children.children'
  | 'image.childrenLinksJson.children.id'
  | 'image.childrenLinksJson.description'
  | 'image.childrenLinksJson.id'
  | 'image.childrenLinksJson.image.absolutePath'
  | 'image.childrenLinksJson.image.accessTime'
  | 'image.childrenLinksJson.image.atime'
  | 'image.childrenLinksJson.image.atimeMs'
  | 'image.childrenLinksJson.image.base'
  | 'image.childrenLinksJson.image.birthTime'
  | 'image.childrenLinksJson.image.birthtime'
  | 'image.childrenLinksJson.image.birthtimeMs'
  | 'image.childrenLinksJson.image.blksize'
  | 'image.childrenLinksJson.image.blocks'
  | 'image.childrenLinksJson.image.changeTime'
  | 'image.childrenLinksJson.image.children'
  | 'image.childrenLinksJson.image.childrenEnJson'
  | 'image.childrenLinksJson.image.childrenImageSharp'
  | 'image.childrenLinksJson.image.childrenLinksJson'
  | 'image.childrenLinksJson.image.childrenMdx'
  | 'image.childrenLinksJson.image.childrenProjectsJson'
  | 'image.childrenLinksJson.image.childrenPtJson'
  | 'image.childrenLinksJson.image.childrenReference'
  | 'image.childrenLinksJson.image.childrenSubjectsJson'
  | 'image.childrenLinksJson.image.ctime'
  | 'image.childrenLinksJson.image.ctimeMs'
  | 'image.childrenLinksJson.image.dev'
  | 'image.childrenLinksJson.image.dir'
  | 'image.childrenLinksJson.image.ext'
  | 'image.childrenLinksJson.image.extension'
  | 'image.childrenLinksJson.image.gid'
  | 'image.childrenLinksJson.image.id'
  | 'image.childrenLinksJson.image.ino'
  | 'image.childrenLinksJson.image.mode'
  | 'image.childrenLinksJson.image.modifiedTime'
  | 'image.childrenLinksJson.image.mtime'
  | 'image.childrenLinksJson.image.mtimeMs'
  | 'image.childrenLinksJson.image.name'
  | 'image.childrenLinksJson.image.nlink'
  | 'image.childrenLinksJson.image.prettySize'
  | 'image.childrenLinksJson.image.publicURL'
  | 'image.childrenLinksJson.image.rdev'
  | 'image.childrenLinksJson.image.relativeDirectory'
  | 'image.childrenLinksJson.image.relativePath'
  | 'image.childrenLinksJson.image.root'
  | 'image.childrenLinksJson.image.size'
  | 'image.childrenLinksJson.image.sourceInstanceName'
  | 'image.childrenLinksJson.image.uid'
  | 'image.childrenLinksJson.internal.content'
  | 'image.childrenLinksJson.internal.contentDigest'
  | 'image.childrenLinksJson.internal.description'
  | 'image.childrenLinksJson.internal.fieldOwners'
  | 'image.childrenLinksJson.internal.ignoreType'
  | 'image.childrenLinksJson.internal.mediaType'
  | 'image.childrenLinksJson.internal.owner'
  | 'image.childrenLinksJson.internal.type'
  | 'image.childrenLinksJson.lang'
  | 'image.childrenLinksJson.link'
  | 'image.childrenLinksJson.parent.children'
  | 'image.childrenLinksJson.parent.id'
  | 'image.childrenLinksJson.publishDate'
  | 'image.childrenLinksJson.tags'
  | 'image.childrenLinksJson.title'
  | 'image.childrenLinksJson.type'
  | 'image.childrenMdx'
  | 'image.childrenMdx.body'
  | 'image.childrenMdx.children'
  | 'image.childrenMdx.children.children'
  | 'image.childrenMdx.children.id'
  | 'image.childrenMdx.excerpt'
  | 'image.childrenMdx.fields.isDefault'
  | 'image.childrenMdx.fields.locale'
  | 'image.childrenMdx.fileAbsolutePath'
  | 'image.childrenMdx.frontmatter.comments'
  | 'image.childrenMdx.frontmatter.date'
  | 'image.childrenMdx.frontmatter.description'
  | 'image.childrenMdx.frontmatter.month'
  | 'image.childrenMdx.frontmatter.slug'
  | 'image.childrenMdx.frontmatter.tags'
  | 'image.childrenMdx.frontmatter.title'
  | 'image.childrenMdx.frontmatter.year'
  | 'image.childrenMdx.gatsbyPath'
  | 'image.childrenMdx.headings'
  | 'image.childrenMdx.headings.depth'
  | 'image.childrenMdx.headings.value'
  | 'image.childrenMdx.html'
  | 'image.childrenMdx.id'
  | 'image.childrenMdx.internal.content'
  | 'image.childrenMdx.internal.contentDigest'
  | 'image.childrenMdx.internal.description'
  | 'image.childrenMdx.internal.fieldOwners'
  | 'image.childrenMdx.internal.ignoreType'
  | 'image.childrenMdx.internal.mediaType'
  | 'image.childrenMdx.internal.owner'
  | 'image.childrenMdx.internal.type'
  | 'image.childrenMdx.mdxAST'
  | 'image.childrenMdx.parent.children'
  | 'image.childrenMdx.parent.id'
  | 'image.childrenMdx.rawBody'
  | 'image.childrenMdx.slug'
  | 'image.childrenMdx.tableOfContents'
  | 'image.childrenMdx.timeToRead'
  | 'image.childrenMdx.wordCount.paragraphs'
  | 'image.childrenMdx.wordCount.sentences'
  | 'image.childrenMdx.wordCount.words'
  | 'image.childrenProjectsJson'
  | 'image.childrenProjectsJson.children'
  | 'image.childrenProjectsJson.children.children'
  | 'image.childrenProjectsJson.children.id'
  | 'image.childrenProjectsJson.date'
  | 'image.childrenProjectsJson.description'
  | 'image.childrenProjectsJson.id'
  | 'image.childrenProjectsJson.image.absolutePath'
  | 'image.childrenProjectsJson.image.accessTime'
  | 'image.childrenProjectsJson.image.atime'
  | 'image.childrenProjectsJson.image.atimeMs'
  | 'image.childrenProjectsJson.image.base'
  | 'image.childrenProjectsJson.image.birthTime'
  | 'image.childrenProjectsJson.image.birthtime'
  | 'image.childrenProjectsJson.image.birthtimeMs'
  | 'image.childrenProjectsJson.image.blksize'
  | 'image.childrenProjectsJson.image.blocks'
  | 'image.childrenProjectsJson.image.changeTime'
  | 'image.childrenProjectsJson.image.children'
  | 'image.childrenProjectsJson.image.childrenEnJson'
  | 'image.childrenProjectsJson.image.childrenImageSharp'
  | 'image.childrenProjectsJson.image.childrenLinksJson'
  | 'image.childrenProjectsJson.image.childrenMdx'
  | 'image.childrenProjectsJson.image.childrenProjectsJson'
  | 'image.childrenProjectsJson.image.childrenPtJson'
  | 'image.childrenProjectsJson.image.childrenReference'
  | 'image.childrenProjectsJson.image.childrenSubjectsJson'
  | 'image.childrenProjectsJson.image.ctime'
  | 'image.childrenProjectsJson.image.ctimeMs'
  | 'image.childrenProjectsJson.image.dev'
  | 'image.childrenProjectsJson.image.dir'
  | 'image.childrenProjectsJson.image.ext'
  | 'image.childrenProjectsJson.image.extension'
  | 'image.childrenProjectsJson.image.gid'
  | 'image.childrenProjectsJson.image.id'
  | 'image.childrenProjectsJson.image.ino'
  | 'image.childrenProjectsJson.image.mode'
  | 'image.childrenProjectsJson.image.modifiedTime'
  | 'image.childrenProjectsJson.image.mtime'
  | 'image.childrenProjectsJson.image.mtimeMs'
  | 'image.childrenProjectsJson.image.name'
  | 'image.childrenProjectsJson.image.nlink'
  | 'image.childrenProjectsJson.image.prettySize'
  | 'image.childrenProjectsJson.image.publicURL'
  | 'image.childrenProjectsJson.image.rdev'
  | 'image.childrenProjectsJson.image.relativeDirectory'
  | 'image.childrenProjectsJson.image.relativePath'
  | 'image.childrenProjectsJson.image.root'
  | 'image.childrenProjectsJson.image.size'
  | 'image.childrenProjectsJson.image.sourceInstanceName'
  | 'image.childrenProjectsJson.image.uid'
  | 'image.childrenProjectsJson.internal.content'
  | 'image.childrenProjectsJson.internal.contentDigest'
  | 'image.childrenProjectsJson.internal.description'
  | 'image.childrenProjectsJson.internal.fieldOwners'
  | 'image.childrenProjectsJson.internal.ignoreType'
  | 'image.childrenProjectsJson.internal.mediaType'
  | 'image.childrenProjectsJson.internal.owner'
  | 'image.childrenProjectsJson.internal.type'
  | 'image.childrenProjectsJson.lang'
  | 'image.childrenProjectsJson.parent.children'
  | 'image.childrenProjectsJson.parent.id'
  | 'image.childrenProjectsJson.stack'
  | 'image.childrenProjectsJson.title'
  | 'image.childrenProjectsJson.url'
  | 'image.childrenPtJson'
  | 'image.childrenPtJson.academic.authors'
  | 'image.childrenPtJson.academic.copied'
  | 'image.childrenPtJson.academic.copycitation'
  | 'image.childrenPtJson.children'
  | 'image.childrenPtJson.children.children'
  | 'image.childrenPtJson.children.id'
  | 'image.childrenPtJson.id'
  | 'image.childrenPtJson.index.ifpb'
  | 'image.childrenPtJson.index.latest'
  | 'image.childrenPtJson.index.present'
  | 'image.childrenPtJson.index.titles'
  | 'image.childrenPtJson.internal.content'
  | 'image.childrenPtJson.internal.contentDigest'
  | 'image.childrenPtJson.internal.description'
  | 'image.childrenPtJson.internal.fieldOwners'
  | 'image.childrenPtJson.internal.ignoreType'
  | 'image.childrenPtJson.internal.mediaType'
  | 'image.childrenPtJson.internal.owner'
  | 'image.childrenPtJson.internal.type'
  | 'image.childrenPtJson.labs.intro'
  | 'image.childrenPtJson.labs.stack'
  | 'image.childrenPtJson.links.intro'
  | 'image.childrenPtJson.menu.about'
  | 'image.childrenPtJson.menu.academic'
  | 'image.childrenPtJson.menu.blog'
  | 'image.childrenPtJson.menu.cv'
  | 'image.childrenPtJson.menu.labs'
  | 'image.childrenPtJson.menu.links'
  | 'image.childrenPtJson.parent.children'
  | 'image.childrenPtJson.parent.id'
  | 'image.childrenReference'
  | 'image.childrenReference.abstract'
  | 'image.childrenReference.address'
  | 'image.childrenReference.articleno'
  | 'image.childrenReference.author'
  | 'image.childrenReference.authors'
  | 'image.childrenReference.booktitle'
  | 'image.childrenReference.children'
  | 'image.childrenReference.children.children'
  | 'image.childrenReference.children.id'
  | 'image.childrenReference.date'
  | 'image.childrenReference.doi'
  | 'image.childrenReference.entry_type'
  | 'image.childrenReference.id'
  | 'image.childrenReference.internal.content'
  | 'image.childrenReference.internal.contentDigest'
  | 'image.childrenReference.internal.description'
  | 'image.childrenReference.internal.fieldOwners'
  | 'image.childrenReference.internal.ignoreType'
  | 'image.childrenReference.internal.mediaType'
  | 'image.childrenReference.internal.owner'
  | 'image.childrenReference.internal.type'
  | 'image.childrenReference.isbn'
  | 'image.childrenReference.issn'
  | 'image.childrenReference.journal'
  | 'image.childrenReference.key'
  | 'image.childrenReference.keywords'
  | 'image.childrenReference.location'
  | 'image.childrenReference.month'
  | 'image.childrenReference.number'
  | 'image.childrenReference.numpages'
  | 'image.childrenReference.pages'
  | 'image.childrenReference.parent.children'
  | 'image.childrenReference.parent.id'
  | 'image.childrenReference.place'
  | 'image.childrenReference.publisher'
  | 'image.childrenReference.raw'
  | 'image.childrenReference.series'
  | 'image.childrenReference.title'
  | 'image.childrenReference.url'
  | 'image.childrenReference.volume'
  | 'image.childrenReference.year'
  | 'image.childrenSubjectsJson'
  | 'image.childrenSubjectsJson.children'
  | 'image.childrenSubjectsJson.children.children'
  | 'image.childrenSubjectsJson.children.id'
  | 'image.childrenSubjectsJson.id'
  | 'image.childrenSubjectsJson.institution'
  | 'image.childrenSubjectsJson.internal.content'
  | 'image.childrenSubjectsJson.internal.contentDigest'
  | 'image.childrenSubjectsJson.internal.description'
  | 'image.childrenSubjectsJson.internal.fieldOwners'
  | 'image.childrenSubjectsJson.internal.ignoreType'
  | 'image.childrenSubjectsJson.internal.mediaType'
  | 'image.childrenSubjectsJson.internal.owner'
  | 'image.childrenSubjectsJson.internal.type'
  | 'image.childrenSubjectsJson.parent.children'
  | 'image.childrenSubjectsJson.parent.id'
  | 'image.childrenSubjectsJson.semester'
  | 'image.childrenSubjectsJson.subjects'
  | 'image.childrenSubjectsJson.subjects.link'
  | 'image.childrenSubjectsJson.subjects.name'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.ctime'
  | 'image.ctimeMs'
  | 'image.dev'
  | 'image.dir'
  | 'image.ext'
  | 'image.extension'
  | 'image.gid'
  | 'image.id'
  | 'image.ino'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.mode'
  | 'image.modifiedTime'
  | 'image.mtime'
  | 'image.mtimeMs'
  | 'image.name'
  | 'image.nlink'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.prettySize'
  | 'image.publicURL'
  | 'image.rdev'
  | 'image.relativeDirectory'
  | 'image.relativePath'
  | 'image.root'
  | 'image.size'
  | 'image.sourceInstanceName'
  | 'image.uid'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'lang'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'stack'
  | 'title'
  | 'url';

type ProjectsJsonFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<FileFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly lang: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly stack: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type ProjectsJsonFilterListInput = {
  readonly elemMatch: InputMaybe<ProjectsJsonFilterInput>;
};

type ProjectsJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ProjectsJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ProjectsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ProjectsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ProjectsJsonGroupConnection_distinctArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonGroupConnection_groupArgs = {
  field: ProjectsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ProjectsJsonGroupConnection_maxArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonGroupConnection_minArgs = {
  field: ProjectsJsonFieldsEnum;
};


type ProjectsJsonGroupConnection_sumArgs = {
  field: ProjectsJsonFieldsEnum;
};

type ProjectsJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ProjectsJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type PtJson = Node & {
  readonly academic: Maybe<PtJsonAcademic>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly index: Maybe<PtJsonIndex>;
  readonly internal: Internal;
  readonly labs: Maybe<PtJsonLabs>;
  readonly links: Maybe<PtJsonLinks>;
  readonly menu: Maybe<PtJsonMenu>;
  readonly parent: Maybe<Node>;
};

type PtJsonAcademic = {
  readonly authors: Maybe<Scalars['String']>;
  readonly copied: Maybe<Scalars['String']>;
  readonly copycitation: Maybe<Scalars['String']>;
  readonly researching: Maybe<PtJsonAcademicResearching>;
  readonly teaching: Maybe<PtJsonAcademicTeaching>;
};

type PtJsonAcademicFilterInput = {
  readonly authors: InputMaybe<StringQueryOperatorInput>;
  readonly copied: InputMaybe<StringQueryOperatorInput>;
  readonly copycitation: InputMaybe<StringQueryOperatorInput>;
  readonly researching: InputMaybe<PtJsonAcademicResearchingFilterInput>;
  readonly teaching: InputMaybe<PtJsonAcademicTeachingFilterInput>;
};

type PtJsonAcademicResearching = {
  readonly groups: Maybe<Scalars['String']>;
  readonly intro: Maybe<Scalars['String']>;
  readonly list: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type PtJsonAcademicResearchingFilterInput = {
  readonly groups: InputMaybe<StringQueryOperatorInput>;
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly list: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonAcademicTeaching = {
  readonly intro: Maybe<Scalars['String']>;
};

type PtJsonAcademicTeachingFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<PtJsonEdge>;
  readonly group: ReadonlyArray<PtJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<PtJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type PtJsonConnection_distinctArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonConnection_groupArgs = {
  field: PtJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type PtJsonConnection_maxArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonConnection_minArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonConnection_sumArgs = {
  field: PtJsonFieldsEnum;
};

type PtJsonEdge = {
  readonly next: Maybe<PtJson>;
  readonly node: PtJson;
  readonly previous: Maybe<PtJson>;
};

type PtJsonFieldsEnum =
  | 'academic.authors'
  | 'academic.copied'
  | 'academic.copycitation'
  | 'academic.researching.groups'
  | 'academic.researching.intro'
  | 'academic.researching.list'
  | 'academic.researching.title'
  | 'academic.teaching.intro'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'index.ifpb'
  | 'index.latest'
  | 'index.present'
  | 'index.text.personal'
  | 'index.text.professional'
  | 'index.titles'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'labs.intro'
  | 'labs.stack'
  | 'links.intro'
  | 'menu.about'
  | 'menu.academic'
  | 'menu.blog'
  | 'menu.cv'
  | 'menu.labs'
  | 'menu.links'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type PtJsonFilterInput = {
  readonly academic: InputMaybe<PtJsonAcademicFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly index: InputMaybe<PtJsonIndexFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly labs: InputMaybe<PtJsonLabsFilterInput>;
  readonly links: InputMaybe<PtJsonLinksFilterInput>;
  readonly menu: InputMaybe<PtJsonMenuFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type PtJsonFilterListInput = {
  readonly elemMatch: InputMaybe<PtJsonFilterInput>;
};

type PtJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<PtJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<PtJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<PtJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type PtJsonGroupConnection_distinctArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonGroupConnection_groupArgs = {
  field: PtJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type PtJsonGroupConnection_maxArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonGroupConnection_minArgs = {
  field: PtJsonFieldsEnum;
};


type PtJsonGroupConnection_sumArgs = {
  field: PtJsonFieldsEnum;
};

type PtJsonIndex = {
  readonly ifpb: Maybe<Scalars['String']>;
  readonly latest: Maybe<Scalars['String']>;
  readonly present: Maybe<Scalars['String']>;
  readonly text: Maybe<PtJsonIndexText>;
  readonly titles: Maybe<Scalars['String']>;
};

type PtJsonIndexFilterInput = {
  readonly ifpb: InputMaybe<StringQueryOperatorInput>;
  readonly latest: InputMaybe<StringQueryOperatorInput>;
  readonly present: InputMaybe<StringQueryOperatorInput>;
  readonly text: InputMaybe<PtJsonIndexTextFilterInput>;
  readonly titles: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonIndexText = {
  readonly personal: Maybe<Scalars['String']>;
  readonly professional: Maybe<Scalars['String']>;
};

type PtJsonIndexTextFilterInput = {
  readonly personal: InputMaybe<StringQueryOperatorInput>;
  readonly professional: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonLabs = {
  readonly intro: Maybe<Scalars['String']>;
  readonly stack: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
};

type PtJsonLabsFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
  readonly stack: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonLinks = {
  readonly intro: Maybe<Scalars['String']>;
};

type PtJsonLinksFilterInput = {
  readonly intro: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonMenu = {
  readonly about: Maybe<Scalars['String']>;
  readonly academic: Maybe<Scalars['String']>;
  readonly blog: Maybe<Scalars['String']>;
  readonly cv: Maybe<Scalars['String']>;
  readonly labs: Maybe<Scalars['String']>;
  readonly links: Maybe<Scalars['String']>;
};

type PtJsonMenuFilterInput = {
  readonly about: InputMaybe<StringQueryOperatorInput>;
  readonly academic: InputMaybe<StringQueryOperatorInput>;
  readonly blog: InputMaybe<StringQueryOperatorInput>;
  readonly cv: InputMaybe<StringQueryOperatorInput>;
  readonly labs: InputMaybe<StringQueryOperatorInput>;
  readonly links: InputMaybe<StringQueryOperatorInput>;
};

type PtJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<PtJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type Query = {
  readonly allDirectory: DirectoryConnection;
  readonly allEnJson: EnJsonConnection;
  readonly allFile: FileConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allLinksJson: LinksJsonConnection;
  readonly allMdx: MdxConnection;
  readonly allProjectsJson: ProjectsJsonConnection;
  readonly allPtJson: PtJsonConnection;
  readonly allReference: ReferenceConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly allSubjectsJson: SubjectsJsonConnection;
  readonly allThemeI18N: ThemeI18nConnection;
  readonly directory: Maybe<Directory>;
  readonly enJson: Maybe<EnJson>;
  readonly file: Maybe<File>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly linksJson: Maybe<LinksJson>;
  readonly mdx: Maybe<Mdx>;
  readonly projectsJson: Maybe<ProjectsJson>;
  readonly ptJson: Maybe<PtJson>;
  readonly reference: Maybe<Reference>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
  readonly subjectsJson: Maybe<SubjectsJson>;
  readonly themeI18N: Maybe<ThemeI18n>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allEnJsonArgs = {
  filter: InputMaybe<EnJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<EnJsonSortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allLinksJsonArgs = {
  filter: InputMaybe<LinksJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<LinksJsonSortInput>;
};


type Query_allMdxArgs = {
  filter: InputMaybe<MdxFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<MdxSortInput>;
};


type Query_allProjectsJsonArgs = {
  filter: InputMaybe<ProjectsJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ProjectsJsonSortInput>;
};


type Query_allPtJsonArgs = {
  filter: InputMaybe<PtJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<PtJsonSortInput>;
};


type Query_allReferenceArgs = {
  filter: InputMaybe<ReferenceFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReferenceSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_allSubjectsJsonArgs = {
  filter: InputMaybe<SubjectsJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SubjectsJsonSortInput>;
};


type Query_allThemeI18NArgs = {
  filter: InputMaybe<ThemeI18nFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ThemeI18nSortInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_enJsonArgs = {
  academic: InputMaybe<EnJsonAcademicFilterInput>;
  blog: InputMaybe<EnJsonBlogFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  index: InputMaybe<EnJsonIndexFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  labs: InputMaybe<EnJsonLabsFilterInput>;
  links: InputMaybe<EnJsonLinksFilterInput>;
  menu: InputMaybe<EnJsonMenuFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childEnJson: InputMaybe<EnJsonFilterInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  childLinksJson: InputMaybe<LinksJsonFilterInput>;
  childMdx: InputMaybe<MdxFilterInput>;
  childProjectsJson: InputMaybe<ProjectsJsonFilterInput>;
  childPtJson: InputMaybe<PtJsonFilterInput>;
  childReference: InputMaybe<ReferenceFilterInput>;
  childSubjectsJson: InputMaybe<SubjectsJsonFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenEnJson: InputMaybe<EnJsonFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  childrenLinksJson: InputMaybe<LinksJsonFilterListInput>;
  childrenMdx: InputMaybe<MdxFilterListInput>;
  childrenProjectsJson: InputMaybe<ProjectsJsonFilterListInput>;
  childrenPtJson: InputMaybe<PtJsonFilterListInput>;
  childrenReference: InputMaybe<ReferenceFilterListInput>;
  childrenSubjectsJson: InputMaybe<SubjectsJsonFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  publicURL: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_linksJsonArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<FileFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  lang: InputMaybe<StringQueryOperatorInput>;
  link: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishDate: InputMaybe<DateQueryOperatorInput>;
  tags: InputMaybe<StringQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  type: InputMaybe<StringQueryOperatorInput>;
};


type Query_mdxArgs = {
  body: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  excerpt: InputMaybe<StringQueryOperatorInput>;
  fields: InputMaybe<MdxFieldsFilterInput>;
  fileAbsolutePath: InputMaybe<StringQueryOperatorInput>;
  frontmatter: InputMaybe<MdxFrontmatterFilterInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  headings: InputMaybe<MdxHeadingMdxFilterListInput>;
  html: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mdxAST: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  rawBody: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  tableOfContents: InputMaybe<JSONQueryOperatorInput>;
  timeToRead: InputMaybe<IntQueryOperatorInput>;
  wordCount: InputMaybe<MdxWordCountFilterInput>;
};


type Query_projectsJsonArgs = {
  children: InputMaybe<NodeFilterListInput>;
  date: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<FileFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  lang: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  stack: InputMaybe<StringQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
};


type Query_ptJsonArgs = {
  academic: InputMaybe<PtJsonAcademicFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  index: InputMaybe<PtJsonIndexFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  labs: InputMaybe<PtJsonLabsFilterInput>;
  links: InputMaybe<PtJsonLinksFilterInput>;
  menu: InputMaybe<PtJsonMenuFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_referenceArgs = {
  abstract: InputMaybe<StringQueryOperatorInput>;
  address: InputMaybe<StringQueryOperatorInput>;
  articleno: InputMaybe<StringQueryOperatorInput>;
  author: InputMaybe<StringQueryOperatorInput>;
  authors: InputMaybe<StringQueryOperatorInput>;
  booktitle: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  date: InputMaybe<DateQueryOperatorInput>;
  doi: InputMaybe<StringQueryOperatorInput>;
  entry_type: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  isbn: InputMaybe<StringQueryOperatorInput>;
  issn: InputMaybe<StringQueryOperatorInput>;
  journal: InputMaybe<StringQueryOperatorInput>;
  key: InputMaybe<StringQueryOperatorInput>;
  keywords: InputMaybe<StringQueryOperatorInput>;
  location: InputMaybe<StringQueryOperatorInput>;
  month: InputMaybe<StringQueryOperatorInput>;
  number: InputMaybe<StringQueryOperatorInput>;
  numpages: InputMaybe<StringQueryOperatorInput>;
  pages: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  place: InputMaybe<StringQueryOperatorInput>;
  publisher: InputMaybe<StringQueryOperatorInput>;
  raw: InputMaybe<StringQueryOperatorInput>;
  series: InputMaybe<StringQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
  volume: InputMaybe<StringQueryOperatorInput>;
  year: InputMaybe<DateQueryOperatorInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};


type Query_subjectsJsonArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  institution: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  semester: InputMaybe<StringQueryOperatorInput>;
  subjects: InputMaybe<SubjectsJsonSubjectsFilterListInput>;
};


type Query_themeI18NArgs = {
  children: InputMaybe<NodeFilterListInput>;
  config: InputMaybe<LocaleFilterListInput>;
  configPath: InputMaybe<StringQueryOperatorInput>;
  defaultLang: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  prefixDefault: InputMaybe<BooleanQueryOperatorInput>;
};

type Reference = Node & {
  readonly abstract: Maybe<Scalars['String']>;
  readonly address: Maybe<Scalars['String']>;
  readonly articleno: Maybe<Scalars['String']>;
  readonly author: Maybe<Scalars['String']>;
  readonly authors: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly booktitle: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly date: Maybe<Scalars['Date']>;
  readonly doi: Maybe<Scalars['String']>;
  readonly entry_type: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly isbn: Maybe<Scalars['String']>;
  readonly issn: Maybe<Scalars['String']>;
  readonly journal: Maybe<Scalars['String']>;
  readonly key: Maybe<Scalars['String']>;
  readonly keywords: Maybe<Scalars['String']>;
  readonly location: Maybe<Scalars['String']>;
  readonly month: Maybe<Scalars['String']>;
  readonly number: Maybe<Scalars['String']>;
  readonly numpages: Maybe<Scalars['String']>;
  readonly pages: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly place: Maybe<Scalars['String']>;
  readonly publisher: Maybe<Scalars['String']>;
  readonly raw: Maybe<Scalars['String']>;
  readonly series: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
  readonly url: Maybe<Scalars['String']>;
  readonly volume: Maybe<Scalars['String']>;
  readonly year: Maybe<Scalars['Date']>;
};


type Reference_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Reference_yearArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ReferenceConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ReferenceEdge>;
  readonly group: ReadonlyArray<ReferenceGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Reference>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ReferenceConnection_distinctArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceConnection_groupArgs = {
  field: ReferenceFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ReferenceConnection_maxArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceConnection_minArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceConnection_sumArgs = {
  field: ReferenceFieldsEnum;
};

type ReferenceEdge = {
  readonly next: Maybe<Reference>;
  readonly node: Reference;
  readonly previous: Maybe<Reference>;
};

type ReferenceFieldsEnum =
  | 'abstract'
  | 'address'
  | 'articleno'
  | 'author'
  | 'authors'
  | 'booktitle'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'date'
  | 'doi'
  | 'entry_type'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'isbn'
  | 'issn'
  | 'journal'
  | 'key'
  | 'keywords'
  | 'location'
  | 'month'
  | 'number'
  | 'numpages'
  | 'pages'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'place'
  | 'publisher'
  | 'raw'
  | 'series'
  | 'title'
  | 'url'
  | 'volume'
  | 'year';

type ReferenceFilterInput = {
  readonly abstract: InputMaybe<StringQueryOperatorInput>;
  readonly address: InputMaybe<StringQueryOperatorInput>;
  readonly articleno: InputMaybe<StringQueryOperatorInput>;
  readonly author: InputMaybe<StringQueryOperatorInput>;
  readonly authors: InputMaybe<StringQueryOperatorInput>;
  readonly booktitle: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly doi: InputMaybe<StringQueryOperatorInput>;
  readonly entry_type: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly isbn: InputMaybe<StringQueryOperatorInput>;
  readonly issn: InputMaybe<StringQueryOperatorInput>;
  readonly journal: InputMaybe<StringQueryOperatorInput>;
  readonly key: InputMaybe<StringQueryOperatorInput>;
  readonly keywords: InputMaybe<StringQueryOperatorInput>;
  readonly location: InputMaybe<StringQueryOperatorInput>;
  readonly month: InputMaybe<StringQueryOperatorInput>;
  readonly number: InputMaybe<StringQueryOperatorInput>;
  readonly numpages: InputMaybe<StringQueryOperatorInput>;
  readonly pages: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly place: InputMaybe<StringQueryOperatorInput>;
  readonly publisher: InputMaybe<StringQueryOperatorInput>;
  readonly raw: InputMaybe<StringQueryOperatorInput>;
  readonly series: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly volume: InputMaybe<StringQueryOperatorInput>;
  readonly year: InputMaybe<DateQueryOperatorInput>;
};

type ReferenceFilterListInput = {
  readonly elemMatch: InputMaybe<ReferenceFilterInput>;
};

type ReferenceGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ReferenceEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ReferenceGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Reference>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ReferenceGroupConnection_distinctArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceGroupConnection_groupArgs = {
  field: ReferenceFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ReferenceGroupConnection_maxArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceGroupConnection_minArgs = {
  field: ReferenceFieldsEnum;
};


type ReferenceGroupConnection_sumArgs = {
  field: ReferenceFieldsEnum;
};

type ReferenceSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ReferenceFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen.typesOutputPath'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.author.description'
  | 'siteMetadata.author.name'
  | 'siteMetadata.description'
  | 'siteMetadata.keywords'
  | 'siteMetadata.menu'
  | 'siteMetadata.menu.external'
  | 'siteMetadata.menu.link'
  | 'siteMetadata.menu.name'
  | 'siteMetadata.siteUrl'
  | 'siteMetadata.social.github'
  | 'siteMetadata.social.instagram'
  | 'siteMetadata.social.linkedin'
  | 'siteMetadata.social.twitter'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGraphqlTypegen = {
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly author: Maybe<SiteSiteMetadataAuthor>;
  readonly description: Maybe<Scalars['String']>;
  readonly keywords: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly menu: Maybe<ReadonlyArray<Maybe<SiteSiteMetadataMenu>>>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly social: Maybe<SiteSiteMetadataSocial>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataAuthor = {
  readonly description: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
};

type SiteSiteMetadataAuthorFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
};

type SiteSiteMetadataFilterInput = {
  readonly author: InputMaybe<SiteSiteMetadataAuthorFilterInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly keywords: InputMaybe<StringQueryOperatorInput>;
  readonly menu: InputMaybe<SiteSiteMetadataMenuFilterListInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly social: InputMaybe<SiteSiteMetadataSocialFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSiteMetadataMenu = {
  readonly external: Maybe<Scalars['Boolean']>;
  readonly link: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
};

type SiteSiteMetadataMenuFilterInput = {
  readonly external: InputMaybe<BooleanQueryOperatorInput>;
  readonly link: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
};

type SiteSiteMetadataMenuFilterListInput = {
  readonly elemMatch: InputMaybe<SiteSiteMetadataMenuFilterInput>;
};

type SiteSiteMetadataSocial = {
  readonly github: Maybe<Scalars['String']>;
  readonly instagram: Maybe<Scalars['String']>;
  readonly linkedin: Maybe<Scalars['String']>;
  readonly twitter: Maybe<Scalars['String']>;
};

type SiteSiteMetadataSocialFilterInput = {
  readonly github: InputMaybe<StringQueryOperatorInput>;
  readonly instagram: InputMaybe<StringQueryOperatorInput>;
  readonly linkedin: InputMaybe<StringQueryOperatorInput>;
  readonly twitter: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type SubjectsJson = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly institution: Maybe<Scalars['String']>;
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly semester: Maybe<Scalars['String']>;
  readonly subjects: Maybe<ReadonlyArray<Maybe<SubjectsJsonSubjects>>>;
};

type SubjectsJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SubjectsJsonEdge>;
  readonly group: ReadonlyArray<SubjectsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SubjectsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SubjectsJsonConnection_distinctArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonConnection_groupArgs = {
  field: SubjectsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SubjectsJsonConnection_maxArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonConnection_minArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonConnection_sumArgs = {
  field: SubjectsJsonFieldsEnum;
};

type SubjectsJsonEdge = {
  readonly next: Maybe<SubjectsJson>;
  readonly node: SubjectsJson;
  readonly previous: Maybe<SubjectsJson>;
};

type SubjectsJsonFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'institution'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'semester'
  | 'subjects'
  | 'subjects.link'
  | 'subjects.name';

type SubjectsJsonFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly institution: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly semester: InputMaybe<StringQueryOperatorInput>;
  readonly subjects: InputMaybe<SubjectsJsonSubjectsFilterListInput>;
};

type SubjectsJsonFilterListInput = {
  readonly elemMatch: InputMaybe<SubjectsJsonFilterInput>;
};

type SubjectsJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SubjectsJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SubjectsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SubjectsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SubjectsJsonGroupConnection_distinctArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonGroupConnection_groupArgs = {
  field: SubjectsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SubjectsJsonGroupConnection_maxArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonGroupConnection_minArgs = {
  field: SubjectsJsonFieldsEnum;
};


type SubjectsJsonGroupConnection_sumArgs = {
  field: SubjectsJsonFieldsEnum;
};

type SubjectsJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SubjectsJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SubjectsJsonSubjects = {
  readonly link: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
};

type SubjectsJsonSubjectsFilterInput = {
  readonly link: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
};

type SubjectsJsonSubjectsFilterListInput = {
  readonly elemMatch: InputMaybe<SubjectsJsonSubjectsFilterInput>;
};

type ThemeI18n = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly config: Maybe<ReadonlyArray<Maybe<Locale>>>;
  readonly configPath: Maybe<Scalars['String']>;
  readonly defaultLang: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly prefixDefault: Maybe<Scalars['Boolean']>;
};

type ThemeI18nConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ThemeI18nEdge>;
  readonly group: ReadonlyArray<ThemeI18nGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ThemeI18n>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ThemeI18nConnection_distinctArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nConnection_groupArgs = {
  field: ThemeI18nFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ThemeI18nConnection_maxArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nConnection_minArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nConnection_sumArgs = {
  field: ThemeI18nFieldsEnum;
};

type ThemeI18nEdge = {
  readonly next: Maybe<ThemeI18n>;
  readonly node: ThemeI18n;
  readonly previous: Maybe<ThemeI18n>;
};

type ThemeI18nFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'config'
  | 'configPath'
  | 'config.code'
  | 'config.dateFormat'
  | 'config.hrefLang'
  | 'config.langDir'
  | 'config.localName'
  | 'config.name'
  | 'defaultLang'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prefixDefault';

type ThemeI18nFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly config: InputMaybe<LocaleFilterListInput>;
  readonly configPath: InputMaybe<StringQueryOperatorInput>;
  readonly defaultLang: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prefixDefault: InputMaybe<BooleanQueryOperatorInput>;
};

type ThemeI18nGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ThemeI18nEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ThemeI18nGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ThemeI18n>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ThemeI18nGroupConnection_distinctArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nGroupConnection_groupArgs = {
  field: ThemeI18nFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ThemeI18nGroupConnection_maxArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nGroupConnection_minArgs = {
  field: ThemeI18nFieldsEnum;
};


type ThemeI18nGroupConnection_sumArgs = {
  field: ThemeI18nFieldsEnum;
};

type ThemeI18nSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ThemeI18nFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type AcademicReferencesQueryVariables = Exact<{ [key: string]: never; }>;


type AcademicReferencesQuery = { readonly allReference: { readonly nodes: ReadonlyArray<{ readonly title: string | null, readonly abstract: string | null, readonly authors: ReadonlyArray<string | null> | null, readonly doi: string | null, readonly url: string | null, readonly year: string | null, readonly journal: string | null, readonly booktitle: string | null, readonly id: string, readonly raw: string | null }> }, readonly allSubjectsJson: { readonly nodes: ReadonlyArray<{ readonly institution: string | null, readonly semester: string | null, readonly subjects: ReadonlyArray<{ readonly link: string | null, readonly name: string | null } | null> | null }> } };

type BlogPostsQueryVariables = Exact<{
  locale: InputMaybe<Scalars['String']>;
}>;


type BlogPostsQuery = { readonly allMdx: { readonly group: ReadonlyArray<{ readonly fieldValue: string | null, readonly totalCount: number, readonly edges: ReadonlyArray<{ readonly node: { readonly id: string, readonly timeToRead: number | null, readonly frontmatter: { readonly title: string, readonly slug: string | null, readonly date: string | null, readonly description: string | null, readonly tags: ReadonlyArray<string | null> | null, readonly cover: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } }> }> } };

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type IndexBlogPostsQueryVariables = Exact<{
  locale: InputMaybe<Scalars['String']>;
}>;


type IndexBlogPostsQuery = { readonly allMdx: { readonly nodes: ReadonlyArray<{ readonly id: string, readonly timeToRead: number | null, readonly frontmatter: { readonly title: string, readonly date: string | null, readonly description: string | null, readonly tags: ReadonlyArray<string | null> | null, readonly comments: boolean | null, readonly slug: string | null, readonly cover: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null }> } };

type LabsPageQueryVariables = Exact<{
  locale: InputMaybe<Scalars['String']>;
}>;


type LabsPageQuery = { readonly allProjectsJson: { readonly nodes: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly date: string | null, readonly url: string | null, readonly description: string | null, readonly stack: ReadonlyArray<string | null> | null, readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null }> } };

type LinksQueryVariables = Exact<{
  locale: InputMaybe<Scalars['String']>;
}>;


type LinksQuery = { readonly allLinksJson: { readonly edges: ReadonlyArray<{ readonly node: { readonly id: string, readonly title: string | null, readonly type: string | null, readonly tags: ReadonlyArray<string | null> | null, readonly publishDate: string | null, readonly link: string | null, readonly description: string | null, readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } }> } };

type PostBySlugQueryVariables = Exact<{
  frontmatter__slug: InputMaybe<Scalars['String']>;
  locale: InputMaybe<Scalars['String']>;
}>;


type PostBySlugQuery = { readonly mdx: { readonly id: string, readonly body: string, readonly timeToRead: number | null, readonly tableOfContents: Record<string, unknown> | null, readonly frontmatter: { readonly title: string, readonly date: string | null, readonly tags: ReadonlyArray<string | null> | null, readonly description: string | null, readonly slug: string | null, readonly comments: boolean | null, readonly cover: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null, readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null };

type SITE_METADATA_QUERYQueryVariables = Exact<{ [key: string]: never; }>;


type SITE_METADATA_QUERYQuery = { readonly site: { readonly siteMetadata: { readonly title: string | null, readonly description: string | null, readonly siteUrl: string | null, readonly author: { readonly name: string | null, readonly description: string | null } | null, readonly social: { readonly github: string | null, readonly instagram: string | null, readonly linkedin: string | null, readonly twitter: string | null } | null, readonly menu: ReadonlyArray<{ readonly name: string | null, readonly link: string | null } | null> | null } | null } | null };


}
